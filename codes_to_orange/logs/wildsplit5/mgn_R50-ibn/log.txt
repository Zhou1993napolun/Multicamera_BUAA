[05/30 17:15:24] fastreid INFO: Rank of current process: 0. World size: 1
[05/30 17:15:25] fastreid INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.14 | packaged by conda-forge | (default, Nov 21 2022, 13:18:34) [GCC 10.4.0]
numpy                   1.23.5
fastreid                1.3 @/data01/zhangleiting/_codes/fast-reid/./fastreid
FASTREID_ENV_MODULE     <not set>
PyTorch                 1.11.0+cu113 @/data01/zhangleiting/anaconda3/envs/fast/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0                   NVIDIA A100-PCIE-40GB
CUDA_HOME               /usr/local/cuda-11.4
Pillow                  9.3.0
torchvision             0.12.0+cu113 @/data01/zhangleiting/anaconda3/envs/fast/lib/python3.8/site-packages/torchvision
torchvision arch flags  sm_35, sm_50, sm_60, sm_70, sm_75, sm_80, sm_86
cv2                     4.6.0
----------------------  ----------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[05/30 17:15:25] fastreid INFO: Command line arguments: Namespace(config_file='./configs/WildSplit5/mgn_R50-ibn.yml', dist_url='tcp://127.0.0.1:50163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[05/30 17:15:25] fastreid INFO: Contents of args.config_file=./configs/WildSplit5/mgn_R50-ibn.yml:
_BASE_: ../Base-MGN.yml

MODEL:
  BACKBONE:
    WITH_IBN: True

DATASETS:
  NAMES: ("WildSplit5",)
  TESTS: ("WildSplit5",)

OUTPUT_DIR: logs/wildsplit5/mgn_R50-ibn

[05/30 17:15:25] fastreid INFO: Running with full config:
CUDNN_BENCHMARK: True
DATALOADER:
  NUM_INSTANCE: 16
  NUM_WORKERS: 8
  SAMPLER_TRAIN: NaiveIdentitySampler
  SET_WEIGHT: []
DATASETS:
  COMBINEALL: False
  NAMES: ('WildSplit5',)
  TESTS: ('WildSplit5',)
INPUT:
  AFFINE:
    ENABLED: False
  AUGMIX:
    ENABLED: False
    PROB: 0.0
  AUTOAUG:
    ENABLED: True
    PROB: 0.1
  CJ:
    BRIGHTNESS: 0.15
    CONTRAST: 0.15
    ENABLED: False
    HUE: 0.1
    PROB: 0.5
    SATURATION: 0.1
  CROP:
    ENABLED: False
    RATIO: [0.75, 1.3333333333333333]
    SCALE: [0.16, 1]
    SIZE: [224, 224]
  FLIP:
    ENABLED: True
    PROB: 0.5
  PADDING:
    ENABLED: True
    MODE: constant
    SIZE: 10
  REA:
    ENABLED: True
    PROB: 0.5
    VALUE: [123.675, 116.28, 103.53]
  RPT:
    ENABLED: False
    PROB: 0.5
  SIZE_TEST: [384, 128]
  SIZE_TRAIN: [384, 128]
KD:
  EMA:
    ENABLED: False
    MOMENTUM: 0.999
  MODEL_CONFIG: []
  MODEL_WEIGHTS: []
MODEL:
  BACKBONE:
    ATT_DROP_RATE: 0.0
    DEPTH: 50x
    DROP_PATH_RATIO: 0.1
    DROP_RATIO: 0.0
    FEAT_DIM: 2048
    LAST_STRIDE: 1
    NAME: build_resnet_backbone
    NORM: BN
    PRETRAIN: True
    PRETRAIN_PATH: 
    SIE_COE: 3.0
    STRIDE_SIZE: (16, 16)
    WITH_IBN: True
    WITH_NL: False
    WITH_SE: False
  DEVICE: cuda
  FREEZE_LAYERS: ['backbone', 'b1', 'b2', 'b3']
  HEADS:
    CLS_LAYER: CircleSoftmax
    EMBEDDING_DIM: 256
    MARGIN: 0.35
    NAME: EmbeddingHead
    NECK_FEAT: after
    NORM: BN
    NUM_CLASSES: 0
    POOL_LAYER: GeneralizedMeanPoolingP
    SCALE: 64
    WITH_BNNECK: True
  LOSSES:
    CE:
      ALPHA: 0.2
      EPSILON: 0.1
      SCALE: 1.0
    CIRCLE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    COSFACE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    FL:
      ALPHA: 0.25
      GAMMA: 2
      SCALE: 1.0
    NAME: ('CrossEntropyLoss', 'TripletLoss')
    TRI:
      HARD_MINING: True
      MARGIN: 0.0
      NORM_FEAT: False
      SCALE: 1.0
  META_ARCHITECTURE: MGN
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.120000000000005, 57.375]
  QUEUE_SIZE: 8192
  WEIGHTS: 
OUTPUT_DIR: logs/wildsplit5/mgn_R50-ibn
SOLVER:
  AMP:
    ENABLED: True
  BASE_LR: 0.00035
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 20
  CLIP_GRADIENTS:
    CLIP_TYPE: norm
    CLIP_VALUE: 5.0
    ENABLED: False
    NORM_TYPE: 2.0
  DELAY_EPOCHS: 30
  ETA_MIN_LR: 7e-07
  FREEZE_ITERS: 1000
  GAMMA: 0.1
  HEADS_LR_FACTOR: 1.0
  IMS_PER_BATCH: 64
  MAX_EPOCH: 60
  MOMENTUM: 0.9
  NESTEROV: False
  OPT: Adam
  SCHED: CosineAnnealingLR
  STEPS: [40, 90]
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 2000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0005
  WEIGHT_DECAY_BIAS: 0.0005
  WEIGHT_DECAY_NORM: 0.0005
TEST:
  AQE:
    ALPHA: 3.0
    ENABLED: False
    QE_K: 5
    QE_TIME: 1
  EVAL_PERIOD: 10
  FLIP:
    ENABLED: False
  IMS_PER_BATCH: 128
  METRIC: cosine
  PRECISE_BN:
    DATASET: Market1501
    ENABLED: False
    NUM_ITER: 300
  RERANK:
    ENABLED: False
    K1: 20
    K2: 6
    LAMBDA: 0.3
  ROC:
    ENABLED: False
[05/30 17:15:25] fastreid INFO: Full config saved to /data01/zhangleiting/_codes/fast-reid/logs/wildsplit5/mgn_R50-ibn/config.yaml
[05/30 17:15:25] fastreid.utils.env INFO: Using a generated random seed 26071660
[05/30 17:15:25] fastreid.engine.defaults INFO: Prepare training set
[05/30 17:15:25] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| train    | 204     | 1672       | 1           |[0m
[05/30 17:15:25] fastreid.data.build INFO: Using training sampler NaiveIdentitySampler
[05/30 17:15:25] fastreid.engine.defaults INFO: Auto-scaling the num_classes=204
[05/30 17:15:26] fastreid.modeling.backbones.resnet INFO: Loading pretrained model from /data01/zhangleiting/.cache/torch/checkpoints/resnet50_ibn_a-d9d0bb7b.pth
[05/30 17:15:26] fastreid.modeling.backbones.resnet INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc.{weight, bias}[0m
[05/30 17:15:33] fastreid.engine.defaults INFO: Model:
MGN(
  (backbone): Sequential(
    (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (5): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (6): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): IBN(
        (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (se): Identity()
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (b1): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b1_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=204, scale=64, margin=0.35)
  )
  (b2): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b2_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=204, scale=64, margin=0.35)
  )
  (b21_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=204, scale=64, margin=0.35)
  )
  (b22_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=204, scale=64, margin=0.35)
  )
  (b3): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b3_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=204, scale=64, margin=0.35)
  )
  (b31_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=204, scale=64, margin=0.35)
  )
  (b32_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=204, scale=64, margin=0.35)
  )
  (b33_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=204, scale=64, margin=0.35)
  )
)
[05/30 17:15:34] fastreid.utils.checkpoint INFO: No checkpoint found. Training model from scratch
[05/30 17:15:34] fastreid.engine.train_loop INFO: Starting training from epoch 0
[05/30 17:15:34] fastreid.engine.hooks INFO: Freeze layer group "backbone, b1, b2, b3" training for 1000 iterations
[05/30 17:16:15] fastreid.utils.events INFO:  eta: 0:37:52  epoch/iter: 0/25  total_loss: 56.47  loss_cls_b1: 6.187  loss_cls_b2: 6.161  loss_cls_b21: 6.174  loss_cls_b22: 6.153  loss_cls_b3: 6.212  loss_cls_b31: 6.189  loss_cls_b32: 6.181  loss_cls_b33: 6.137  loss_triplet_b1: 1.275  loss_triplet_b2: 1.195  loss_triplet_b3: 1.208  loss_triplet_b22: 1.519  loss_triplet_b33: 1.53  time: 1.3929  data_time: 0.0010  lr: 3.83e-05  max_mem: 22746M
[05/30 17:16:41] fastreid.utils.events INFO:  eta: 0:35:49  epoch/iter: 1/51  total_loss: 56.55  loss_cls_b1: 6.168  loss_cls_b2: 6.139  loss_cls_b21: 6.204  loss_cls_b22: 6.196  loss_cls_b3: 6.177  loss_cls_b31: 6.193  loss_cls_b32: 6.177  loss_cls_b33: 6.16  loss_triplet_b1: 1.272  loss_triplet_b2: 1.266  loss_triplet_b3: 1.298  loss_triplet_b22: 1.554  loss_triplet_b33: 1.562  time: 1.1896  data_time: 0.0007  lr: 4.24e-05  max_mem: 22746M
[05/30 17:17:17] fastreid.utils.events INFO:  eta: 0:35:07  epoch/iter: 2/77  total_loss: 57.07  loss_cls_b1: 6.217  loss_cls_b2: 6.163  loss_cls_b21: 6.203  loss_cls_b22: 6.196  loss_cls_b3: 6.18  loss_cls_b31: 6.187  loss_cls_b32: 6.22  loss_cls_b33: 6.184  loss_triplet_b1: 1.372  loss_triplet_b2: 1.357  loss_triplet_b3: 1.362  loss_triplet_b22: 1.599  loss_triplet_b33: 1.712  time: 1.2545  data_time: 0.0008  lr: 4.65e-05  max_mem: 22746M
[05/30 17:17:53] fastreid.utils.events INFO:  eta: 0:34:34  epoch/iter: 3/103  total_loss: 56.65  loss_cls_b1: 6.182  loss_cls_b2: 6.147  loss_cls_b21: 6.194  loss_cls_b22: 6.17  loss_cls_b3: 6.18  loss_cls_b31: 6.176  loss_cls_b32: 6.179  loss_cls_b33: 6.171  loss_triplet_b1: 1.327  loss_triplet_b2: 1.299  loss_triplet_b3: 1.328  loss_triplet_b22: 1.587  loss_triplet_b33: 1.667  time: 1.2888  data_time: 0.0007  lr: 5.06e-05  max_mem: 22746M
[05/30 17:18:30] fastreid.utils.events INFO:  eta: 0:33:59  epoch/iter: 4/129  total_loss: 57.01  loss_cls_b1: 6.23  loss_cls_b2: 6.146  loss_cls_b21: 6.181  loss_cls_b22: 6.166  loss_cls_b3: 6.184  loss_cls_b31: 6.18  loss_cls_b32: 6.211  loss_cls_b33: 6.189  loss_triplet_b1: 1.355  loss_triplet_b2: 1.323  loss_triplet_b3: 1.356  loss_triplet_b22: 1.593  loss_triplet_b33: 1.701  time: 1.3121  data_time: 0.0008  lr: 5.47e-05  max_mem: 22746M
[05/30 17:19:03] fastreid.utils.events INFO:  eta: 0:33:26  epoch/iter: 5/155  total_loss: 56.73  loss_cls_b1: 6.227  loss_cls_b2: 6.153  loss_cls_b21: 6.175  loss_cls_b22: 6.175  loss_cls_b3: 6.187  loss_cls_b31: 6.183  loss_cls_b32: 6.21  loss_cls_b33: 6.16  loss_triplet_b1: 1.312  loss_triplet_b2: 1.316  loss_triplet_b3: 1.336  loss_triplet_b22: 1.575  loss_triplet_b33: 1.669  time: 1.3032  data_time: 0.0007  lr: 5.88e-05  max_mem: 22746M
[05/30 17:19:40] fastreid.utils.events INFO:  eta: 0:32:58  epoch/iter: 6/181  total_loss: 56.79  loss_cls_b1: 6.228  loss_cls_b2: 6.151  loss_cls_b21: 6.181  loss_cls_b22: 6.19  loss_cls_b3: 6.167  loss_cls_b31: 6.187  loss_cls_b32: 6.185  loss_cls_b33: 6.153  loss_triplet_b1: 1.333  loss_triplet_b2: 1.323  loss_triplet_b3: 1.344  loss_triplet_b22: 1.575  loss_triplet_b33: 1.67  time: 1.3203  data_time: 0.0011  lr: 6.27e-05  max_mem: 22746M
[05/30 17:20:05] fastreid.utils.events INFO:  eta: 0:32:35  epoch/iter: 7/199  total_loss: 56.87  loss_cls_b1: 6.228  loss_cls_b2: 6.145  loss_cls_b21: 6.177  loss_cls_b22: 6.189  loss_cls_b3: 6.171  loss_cls_b31: 6.191  loss_cls_b32: 6.204  loss_cls_b33: 6.153  loss_triplet_b1: 1.327  loss_triplet_b2: 1.323  loss_triplet_b3: 1.342  loss_triplet_b22: 1.579  loss_triplet_b33: 1.666  time: 1.3290  data_time: 0.0007  lr: 6.56e-05  max_mem: 22746M
[05/30 17:20:17] fastreid.utils.events INFO:  eta: 0:32:26  epoch/iter: 7/207  total_loss: 56.87  loss_cls_b1: 6.226  loss_cls_b2: 6.142  loss_cls_b21: 6.179  loss_cls_b22: 6.188  loss_cls_b3: 6.177  loss_cls_b31: 6.193  loss_cls_b32: 6.21  loss_cls_b33: 6.148  loss_triplet_b1: 1.33  loss_triplet_b2: 1.337  loss_triplet_b3: 1.347  loss_triplet_b22: 1.576  loss_triplet_b33: 1.668  time: 1.3317  data_time: 0.0009  lr: 6.68e-05  max_mem: 22746M
[05/30 17:20:53] fastreid.utils.events INFO:  eta: 0:31:47  epoch/iter: 8/233  total_loss: 56.87  loss_cls_b1: 6.234  loss_cls_b2: 6.143  loss_cls_b21: 6.183  loss_cls_b22: 6.193  loss_cls_b3: 6.187  loss_cls_b31: 6.175  loss_cls_b32: 6.185  loss_cls_b33: 6.144  loss_triplet_b1: 1.33  loss_triplet_b2: 1.339  loss_triplet_b3: 1.349  loss_triplet_b22: 1.579  loss_triplet_b33: 1.672  time: 1.3381  data_time: 0.0008  lr: 7.09e-05  max_mem: 22746M
[05/30 17:21:24] fastreid.engine.defaults INFO: Prepare testing set
[05/30 17:21:24] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 113     | 374        | 1           |
| gallery  | 195     | 1655       | 1           |[0m
[05/30 17:21:24] fastreid.evaluation.evaluator INFO: Start inference on 2029 images
[05/30 17:21:32] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.4090 s / batch. ETA=0:00:02
[05/30 17:21:35] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:05.776338 (0.525122 s / batch per device, on 1 devices)
[05/30 17:21:35] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:05 (0.524053 s / batch per device, on 1 devices)
[05/30 17:21:35] fastreid.engine.defaults INFO: Evaluation results for WildSplit5 in csv format:
[05/30 17:21:35] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit5 | 68.07    | 77.03    | 79.83     | 43.61 | 8.00   | 55.84    |[0m
[05/30 17:21:35] fastreid.utils.events INFO:  eta: 0:31:09  epoch/iter: 9/259  total_loss: 56.9  loss_cls_b1: 6.247  loss_cls_b2: 6.145  loss_cls_b21: 6.175  loss_cls_b22: 6.192  loss_cls_b3: 6.171  loss_cls_b31: 6.181  loss_cls_b32: 6.198  loss_cls_b33: 6.14  loss_triplet_b1: 1.338  loss_triplet_b2: 1.34  loss_triplet_b3: 1.349  loss_triplet_b22: 1.579  loss_triplet_b33: 1.674  time: 1.3222  data_time: 0.0009  lr: 7.50e-05  max_mem: 22746M
[05/30 17:22:12] fastreid.utils.events INFO:  eta: 0:30:34  epoch/iter: 10/285  total_loss: 56.88  loss_cls_b1: 6.236  loss_cls_b2: 6.144  loss_cls_b21: 6.166  loss_cls_b22: 6.212  loss_cls_b3: 6.165  loss_cls_b31: 6.181  loss_cls_b32: 6.172  loss_cls_b33: 6.142  loss_triplet_b1: 1.356  loss_triplet_b2: 1.361  loss_triplet_b3: 1.366  loss_triplet_b22: 1.595  loss_triplet_b33: 1.681  time: 1.3303  data_time: 0.0009  lr: 7.91e-05  max_mem: 22746M
[05/30 17:22:49] fastreid.utils.events INFO:  eta: 0:30:00  epoch/iter: 11/311  total_loss: 57.24  loss_cls_b1: 6.251  loss_cls_b2: 6.142  loss_cls_b21: 6.195  loss_cls_b22: 6.221  loss_cls_b3: 6.157  loss_cls_b31: 6.177  loss_cls_b32: 6.166  loss_cls_b33: 6.138  loss_triplet_b1: 1.419  loss_triplet_b2: 1.414  loss_triplet_b3: 1.438  loss_triplet_b22: 1.627  loss_triplet_b33: 1.724  time: 1.3371  data_time: 0.0007  lr: 8.32e-05  max_mem: 22746M
[05/30 17:23:27] fastreid.utils.events INFO:  eta: 0:29:28  epoch/iter: 12/337  total_loss: 57.21  loss_cls_b1: 6.226  loss_cls_b2: 6.139  loss_cls_b21: 6.195  loss_cls_b22: 6.217  loss_cls_b3: 6.148  loss_cls_b31: 6.186  loss_cls_b32: 6.172  loss_cls_b33: 6.139  loss_triplet_b1: 1.422  loss_triplet_b2: 1.418  loss_triplet_b3: 1.438  loss_triplet_b22: 1.628  loss_triplet_b33: 1.717  time: 1.3469  data_time: 0.0008  lr: 8.73e-05  max_mem: 22746M
[05/30 17:23:58] fastreid.utils.events INFO:  eta: 0:28:50  epoch/iter: 13/363  total_loss: 57.41  loss_cls_b1: 6.239  loss_cls_b2: 6.139  loss_cls_b21: 6.196  loss_cls_b22: 6.223  loss_cls_b3: 6.157  loss_cls_b31: 6.177  loss_cls_b32: 6.175  loss_cls_b33: 6.14  loss_triplet_b1: 1.465  loss_triplet_b2: 1.457  loss_triplet_b3: 1.457  loss_triplet_b22: 1.665  loss_triplet_b33: 1.773  time: 1.3371  data_time: 0.0009  lr: 9.14e-05  max_mem: 22746M
[05/30 17:24:36] fastreid.utils.events INFO:  eta: 0:28:14  epoch/iter: 14/389  total_loss: 57.43  loss_cls_b1: 6.251  loss_cls_b2: 6.142  loss_cls_b21: 6.194  loss_cls_b22: 6.231  loss_cls_b3: 6.169  loss_cls_b31: 6.174  loss_cls_b32: 6.161  loss_cls_b33: 6.139  loss_triplet_b1: 1.479  loss_triplet_b2: 1.485  loss_triplet_b3: 1.492  loss_triplet_b22: 1.67  loss_triplet_b33: 1.79  time: 1.3428  data_time: 0.0008  lr: 9.55e-05  max_mem: 22746M
[05/30 17:24:50] fastreid.utils.events INFO:  eta: 0:28:00  epoch/iter: 15/399  total_loss: 57.44  loss_cls_b1: 6.245  loss_cls_b2: 6.142  loss_cls_b21: 6.184  loss_cls_b22: 6.225  loss_cls_b3: 6.164  loss_cls_b31: 6.174  loss_cls_b32: 6.164  loss_cls_b33: 6.149  loss_triplet_b1: 1.493  loss_triplet_b2: 1.499  loss_triplet_b3: 1.507  loss_triplet_b22: 1.684  loss_triplet_b33: 1.808  time: 1.3449  data_time: 0.0008  lr: 9.71e-05  max_mem: 22746M
[05/30 17:25:13] fastreid.utils.events INFO:  eta: 0:27:38  epoch/iter: 15/415  total_loss: 57.55  loss_cls_b1: 6.251  loss_cls_b2: 6.151  loss_cls_b21: 6.184  loss_cls_b22: 6.225  loss_cls_b3: 6.159  loss_cls_b31: 6.155  loss_cls_b32: 6.161  loss_cls_b33: 6.153  loss_triplet_b1: 1.498  loss_triplet_b2: 1.512  loss_triplet_b3: 1.509  loss_triplet_b22: 1.698  loss_triplet_b33: 1.844  time: 1.3486  data_time: 0.0006  lr: 9.96e-05  max_mem: 22746M
[05/30 17:25:48] fastreid.utils.events INFO:  eta: 0:27:02  epoch/iter: 16/441  total_loss: 57.61  loss_cls_b1: 6.24  loss_cls_b2: 6.159  loss_cls_b21: 6.186  loss_cls_b22: 6.242  loss_cls_b3: 6.146  loss_cls_b31: 6.145  loss_cls_b32: 6.164  loss_cls_b33: 6.152  loss_triplet_b1: 1.534  loss_triplet_b2: 1.529  loss_triplet_b3: 1.517  loss_triplet_b22: 1.717  loss_triplet_b33: 1.849  time: 1.3466  data_time: 0.0008  lr: 1.04e-04  max_mem: 22746M
[05/30 17:25:57] fastreid.utils.events INFO:  eta: 0:26:21  epoch/iter: 17/467  total_loss: 57.64  loss_cls_b1: 6.234  loss_cls_b2: 6.162  loss_cls_b21: 6.194  loss_cls_b22: 6.24  loss_cls_b3: 6.159  loss_cls_b31: 6.161  loss_cls_b32: 6.161  loss_cls_b33: 6.157  loss_triplet_b1: 1.535  loss_triplet_b2: 1.529  loss_triplet_b3: 1.517  loss_triplet_b22: 1.717  loss_triplet_b33: 1.851  time: 1.2914  data_time: 0.0008  lr: 1.08e-04  max_mem: 22746M
[05/30 17:26:04] fastreid.utils.events INFO:  eta: 0:25:39  epoch/iter: 18/493  total_loss: 57.65  loss_cls_b1: 6.233  loss_cls_b2: 6.141  loss_cls_b21: 6.163  loss_cls_b22: 6.252  loss_cls_b3: 6.133  loss_cls_b31: 6.166  loss_cls_b32: 6.169  loss_cls_b33: 6.168  loss_triplet_b1: 1.535  loss_triplet_b2: 1.551  loss_triplet_b3: 1.535  loss_triplet_b22: 1.764  loss_triplet_b33: 1.89  time: 1.2376  data_time: 0.0006  lr: 1.12e-04  max_mem: 22746M
[05/30 17:26:11] fastreid.engine.defaults INFO: Prepare testing set
[05/30 17:26:11] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 113     | 374        | 1           |
| gallery  | 195     | 1655       | 1           |[0m
[05/30 17:26:11] fastreid.evaluation.evaluator INFO: Start inference on 2029 images
[05/30 17:26:15] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.2192 s / batch. ETA=0:00:01
[05/30 17:26:16] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:02.341861 (0.212896 s / batch per device, on 1 devices)
[05/30 17:26:16] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.211871 s / batch per device, on 1 devices)
[05/30 17:26:16] fastreid.engine.defaults INFO: Evaluation results for WildSplit5 in csv format:
[05/30 17:26:16] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit5 | 67.79    | 74.23    | 77.87     | 38.43 | 7.30   | 53.11    |[0m
[05/30 17:26:16] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit5/mgn_R50-ibn/model_best.pth
[05/30 17:26:17] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit5/mgn_R50-ibn/model_0019.pth
[05/30 17:26:17] fastreid.utils.events INFO:  eta: 0:24:58  epoch/iter: 19/519  total_loss: 57.64  loss_cls_b1: 6.222  loss_cls_b2: 6.165  loss_cls_b21: 6.156  loss_cls_b22: 6.258  loss_cls_b3: 6.156  loss_cls_b31: 6.16  loss_cls_b32: 6.175  loss_cls_b33: 6.171  loss_triplet_b1: 1.532  loss_triplet_b2: 1.551  loss_triplet_b3: 1.521  loss_triplet_b22: 1.762  loss_triplet_b33: 1.882  time: 1.1892  data_time: 0.0008  lr: 1.16e-04  max_mem: 22746M
[05/30 17:26:25] fastreid.utils.events INFO:  eta: 0:24:16  epoch/iter: 20/545  total_loss: 57.64  loss_cls_b1: 6.251  loss_cls_b2: 6.166  loss_cls_b21: 6.152  loss_cls_b22: 6.258  loss_cls_b3: 6.143  loss_cls_b31: 6.138  loss_cls_b32: 6.18  loss_cls_b33: 6.171  loss_triplet_b1: 1.531  loss_triplet_b2: 1.548  loss_triplet_b3: 1.516  loss_triplet_b22: 1.724  loss_triplet_b33: 1.867  time: 1.1458  data_time: 0.0008  lr: 1.20e-04  max_mem: 22746M
[05/30 17:26:32] fastreid.utils.events INFO:  eta: 0:23:32  epoch/iter: 21/571  total_loss: 57.5  loss_cls_b1: 6.227  loss_cls_b2: 6.172  loss_cls_b21: 6.159  loss_cls_b22: 6.255  loss_cls_b3: 6.152  loss_cls_b31: 6.141  loss_cls_b32: 6.17  loss_cls_b33: 6.169  loss_triplet_b1: 1.523  loss_triplet_b2: 1.527  loss_triplet_b3: 1.501  loss_triplet_b22: 1.717  loss_triplet_b33: 1.862  time: 1.1060  data_time: 0.0006  lr: 1.24e-04  max_mem: 22746M
[05/30 17:26:39] fastreid.utils.events INFO:  eta: 0:22:49  epoch/iter: 22/597  total_loss: 57.47  loss_cls_b1: 6.213  loss_cls_b2: 6.174  loss_cls_b21: 6.164  loss_cls_b22: 6.251  loss_cls_b3: 6.139  loss_cls_b31: 6.131  loss_cls_b32: 6.182  loss_cls_b33: 6.16  loss_triplet_b1: 1.502  loss_triplet_b2: 1.52  loss_triplet_b3: 1.492  loss_triplet_b22: 1.713  loss_triplet_b33: 1.86  time: 1.0696  data_time: 0.0007  lr: 1.28e-04  max_mem: 22746M
[05/30 17:26:40] fastreid.utils.events INFO:  eta: 0:22:46  epoch/iter: 23/599  total_loss: 57.5  loss_cls_b1: 6.214  loss_cls_b2: 6.174  loss_cls_b21: 6.165  loss_cls_b22: 6.251  loss_cls_b3: 6.139  loss_cls_b31: 6.133  loss_cls_b32: 6.182  loss_cls_b33: 6.16  loss_triplet_b1: 1.513  loss_triplet_b2: 1.529  loss_triplet_b3: 1.495  loss_triplet_b22: 1.718  loss_triplet_b33: 1.864  time: 1.0670  data_time: 0.0007  lr: 1.29e-04  max_mem: 22746M
[05/30 17:26:47] fastreid.utils.events INFO:  eta: 0:22:08  epoch/iter: 23/623  total_loss: 57.59  loss_cls_b1: 6.218  loss_cls_b2: 6.151  loss_cls_b21: 6.166  loss_cls_b22: 6.247  loss_cls_b3: 6.135  loss_cls_b31: 6.164  loss_cls_b32: 6.186  loss_cls_b33: 6.149  loss_triplet_b1: 1.522  loss_triplet_b2: 1.558  loss_triplet_b3: 1.504  loss_triplet_b22: 1.752  loss_triplet_b33: 1.879  time: 1.0363  data_time: 0.0005  lr: 1.32e-04  max_mem: 22746M
[05/30 17:26:54] fastreid.utils.events INFO:  eta: 0:21:25  epoch/iter: 24/649  total_loss: 57.54  loss_cls_b1: 6.214  loss_cls_b2: 6.148  loss_cls_b21: 6.166  loss_cls_b22: 6.24  loss_cls_b3: 6.125  loss_cls_b31: 6.175  loss_cls_b32: 6.186  loss_cls_b33: 6.17  loss_triplet_b1: 1.518  loss_triplet_b2: 1.548  loss_triplet_b3: 1.504  loss_triplet_b22: 1.72  loss_triplet_b33: 1.87  time: 1.0057  data_time: 0.0007  lr: 1.36e-04  max_mem: 22746M
[05/30 17:27:01] fastreid.utils.events INFO:  eta: 0:20:42  epoch/iter: 25/675  total_loss: 57.58  loss_cls_b1: 6.224  loss_cls_b2: 6.152  loss_cls_b21: 6.168  loss_cls_b22: 6.251  loss_cls_b3: 6.125  loss_cls_b31: 6.152  loss_cls_b32: 6.193  loss_cls_b33: 6.171  loss_triplet_b1: 1.516  loss_triplet_b2: 1.551  loss_triplet_b3: 1.515  loss_triplet_b22: 1.746  loss_triplet_b33: 1.871  time: 0.9775  data_time: 0.0005  lr: 1.41e-04  max_mem: 22746M
[05/30 17:27:08] fastreid.utils.events INFO:  eta: 0:19:56  epoch/iter: 26/701  total_loss: 57.66  loss_cls_b1: 6.224  loss_cls_b2: 6.159  loss_cls_b21: 6.184  loss_cls_b22: 6.238  loss_cls_b3: 6.144  loss_cls_b31: 6.148  loss_cls_b32: 6.191  loss_cls_b33: 6.169  loss_triplet_b1: 1.521  loss_triplet_b2: 1.548  loss_triplet_b3: 1.515  loss_triplet_b22: 1.717  loss_triplet_b33: 1.86  time: 0.9513  data_time: 0.0008  lr: 1.45e-04  max_mem: 22746M
[05/30 17:27:15] fastreid.utils.events INFO:  eta: 0:18:13  epoch/iter: 27/727  total_loss: 57.54  loss_cls_b1: 6.219  loss_cls_b2: 6.151  loss_cls_b21: 6.185  loss_cls_b22: 6.233  loss_cls_b3: 6.129  loss_cls_b31: 6.16  loss_cls_b32: 6.187  loss_cls_b33: 6.163  loss_triplet_b1: 1.5  loss_triplet_b2: 1.53  loss_triplet_b3: 1.493  loss_triplet_b22: 1.698  loss_triplet_b33: 1.86  time: 0.9270  data_time: 0.0008  lr: 1.49e-04  max_mem: 22746M
[05/30 17:27:23] fastreid.utils.events INFO:  eta: 0:15:09  epoch/iter: 28/753  total_loss: 57.66  loss_cls_b1: 6.217  loss_cls_b2: 6.156  loss_cls_b21: 6.184  loss_cls_b22: 6.242  loss_cls_b3: 6.149  loss_cls_b31: 6.182  loss_cls_b32: 6.188  loss_cls_b33: 6.17  loss_triplet_b1: 1.503  loss_triplet_b2: 1.531  loss_triplet_b3: 1.502  loss_triplet_b22: 1.744  loss_triplet_b33: 1.877  time: 0.9046  data_time: 0.0005  lr: 1.53e-04  max_mem: 22746M
[05/30 17:27:30] fastreid.engine.defaults INFO: Prepare testing set
[05/30 17:27:30] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 113     | 374        | 1           |
| gallery  | 195     | 1655       | 1           |[0m
[05/30 17:27:30] fastreid.evaluation.evaluator INFO: Start inference on 2029 images
[05/30 17:27:33] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.2142 s / batch. ETA=0:00:01
[05/30 17:27:35] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:02.311061 (0.210096 s / batch per device, on 1 devices)
[05/30 17:27:35] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.209083 s / batch per device, on 1 devices)
[05/30 17:27:35] fastreid.engine.defaults INFO: Evaluation results for WildSplit5 in csv format:
[05/30 17:27:35] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit5 | 67.23    | 74.23    | 77.03     | 38.32 | 7.38   | 52.77    |[0m
[05/30 17:27:35] fastreid.utils.events INFO:  eta: 0:13:30  epoch/iter: 29/779  total_loss: 57.78  loss_cls_b1: 6.225  loss_cls_b2: 6.155  loss_cls_b21: 6.186  loss_cls_b22: 6.233  loss_cls_b3: 6.121  loss_cls_b31: 6.169  loss_cls_b32: 6.195  loss_cls_b33: 6.172  loss_triplet_b1: 1.519  loss_triplet_b2: 1.551  loss_triplet_b3: 1.53  loss_triplet_b22: 1.756  loss_triplet_b33: 1.891  time: 0.8835  data_time: 0.0007  lr: 1.57e-04  max_mem: 22746M
[05/30 17:27:40] fastreid.utils.events INFO:  eta: 0:12:01  epoch/iter: 30/799  total_loss: 57.78  loss_cls_b1: 6.249  loss_cls_b2: 6.155  loss_cls_b21: 6.196  loss_cls_b22: 6.234  loss_cls_b3: 6.117  loss_cls_b31: 6.177  loss_cls_b32: 6.195  loss_cls_b33: 6.162  loss_triplet_b1: 1.522  loss_triplet_b2: 1.528  loss_triplet_b3: 1.516  loss_triplet_b22: 1.764  loss_triplet_b33: 1.897  time: 0.8684  data_time: 0.0008  lr: 1.60e-04  max_mem: 22746M
[05/30 17:27:42] fastreid.utils.events INFO:  eta: 0:11:11  epoch/iter: 30/805  total_loss: 57.78  loss_cls_b1: 6.242  loss_cls_b2: 6.155  loss_cls_b21: 6.201  loss_cls_b22: 6.231  loss_cls_b3: 6.115  loss_cls_b31: 6.17  loss_cls_b32: 6.193  loss_cls_b33: 6.16  loss_triplet_b1: 1.533  loss_triplet_b2: 1.539  loss_triplet_b3: 1.521  loss_triplet_b22: 1.765  loss_triplet_b33: 1.898  time: 0.8640  data_time: 0.0006  lr: 1.61e-04  max_mem: 22746M
[05/30 17:27:49] fastreid.utils.events INFO:  eta: 0:07:43  epoch/iter: 31/831  total_loss: 57.73  loss_cls_b1: 6.253  loss_cls_b2: 6.168  loss_cls_b21: 6.186  loss_cls_b22: 6.224  loss_cls_b3: 6.127  loss_cls_b31: 6.163  loss_cls_b32: 6.196  loss_cls_b33: 6.184  loss_triplet_b1: 1.521  loss_triplet_b2: 1.513  loss_triplet_b3: 1.504  loss_triplet_b22: 1.765  loss_triplet_b33: 1.893  time: 0.8455  data_time: 0.0005  lr: 1.65e-04  max_mem: 22746M
[05/30 17:27:57] fastreid.utils.events INFO:  eta: 0:03:26  epoch/iter: 32/857  total_loss: 57.77  loss_cls_b1: 6.252  loss_cls_b2: 6.173  loss_cls_b21: 6.175  loss_cls_b22: 6.224  loss_cls_b3: 6.121  loss_cls_b31: 6.153  loss_cls_b32: 6.202  loss_cls_b33: 6.171  loss_triplet_b1: 1.519  loss_triplet_b2: 1.513  loss_triplet_b3: 1.504  loss_triplet_b22: 1.766  loss_triplet_b33: 1.904  time: 0.8281  data_time: 0.0006  lr: 1.69e-04  max_mem: 22746M
[05/30 17:28:04] fastreid.utils.events INFO:  eta: 0:03:15  epoch/iter: 33/883  total_loss: 57.6  loss_cls_b1: 6.235  loss_cls_b2: 6.171  loss_cls_b21: 6.183  loss_cls_b22: 6.221  loss_cls_b3: 6.121  loss_cls_b31: 6.171  loss_cls_b32: 6.196  loss_cls_b33: 6.175  loss_triplet_b1: 1.516  loss_triplet_b2: 1.505  loss_triplet_b3: 1.5  loss_triplet_b22: 1.758  loss_triplet_b33: 1.883  time: 0.8119  data_time: 0.0006  lr: 1.73e-04  max_mem: 22746M
[05/30 17:28:11] fastreid.utils.events INFO:  eta: 0:03:05  epoch/iter: 34/909  total_loss: 57.53  loss_cls_b1: 6.237  loss_cls_b2: 6.168  loss_cls_b21: 6.17  loss_cls_b22: 6.221  loss_cls_b3: 6.123  loss_cls_b31: 6.171  loss_cls_b32: 6.199  loss_cls_b33: 6.179  loss_triplet_b1: 1.513  loss_triplet_b2: 1.497  loss_triplet_b3: 1.493  loss_triplet_b22: 1.745  loss_triplet_b33: 1.874  time: 0.7965  data_time: 0.0006  lr: 1.77e-04  max_mem: 22746M
[05/30 17:28:19] fastreid.utils.events INFO:  eta: 0:02:57  epoch/iter: 35/935  total_loss: 57.52  loss_cls_b1: 6.235  loss_cls_b2: 6.168  loss_cls_b21: 6.163  loss_cls_b22: 6.221  loss_cls_b3: 6.116  loss_cls_b31: 6.153  loss_cls_b32: 6.213  loss_cls_b33: 6.179  loss_triplet_b1: 1.515  loss_triplet_b2: 1.494  loss_triplet_b3: 1.493  loss_triplet_b22: 1.743  loss_triplet_b33: 1.876  time: 0.7821  data_time: 0.0008  lr: 1.81e-04  max_mem: 22746M
[05/30 17:28:26] fastreid.utils.events INFO:  eta: 0:02:50  epoch/iter: 36/961  total_loss: 57.37  loss_cls_b1: 6.226  loss_cls_b2: 6.167  loss_cls_b21: 6.163  loss_cls_b22: 6.224  loss_cls_b3: 6.115  loss_cls_b31: 6.145  loss_cls_b32: 6.208  loss_cls_b33: 6.18  loss_triplet_b1: 1.486  loss_triplet_b2: 1.48  loss_triplet_b3: 1.462  loss_triplet_b22: 1.685  loss_triplet_b33: 1.844  time: 0.7685  data_time: 0.0008  lr: 1.86e-04  max_mem: 22746M
[05/30 17:28:33] fastreid.utils.events INFO:  eta: 0:02:42  epoch/iter: 37/987  total_loss: 57.52  loss_cls_b1: 6.234  loss_cls_b2: 6.184  loss_cls_b21: 6.171  loss_cls_b22: 6.235  loss_cls_b3: 6.124  loss_cls_b31: 6.161  loss_cls_b32: 6.212  loss_cls_b33: 6.178  loss_triplet_b1: 1.513  loss_triplet_b2: 1.498  loss_triplet_b3: 1.494  loss_triplet_b22: 1.681  loss_triplet_b33: 1.852  time: 0.7554  data_time: 0.0006  lr: 1.90e-04  max_mem: 22746M
[05/30 17:28:36] fastreid.utils.events INFO:  eta: 0:02:38  epoch/iter: 38/999  total_loss: 57.41  loss_cls_b1: 6.218  loss_cls_b2: 6.183  loss_cls_b21: 6.166  loss_cls_b22: 6.235  loss_cls_b3: 6.124  loss_cls_b31: 6.158  loss_cls_b32: 6.212  loss_cls_b33: 6.18  loss_triplet_b1: 1.48  loss_triplet_b2: 1.488  loss_triplet_b3: 1.463  loss_triplet_b22: 1.665  loss_triplet_b33: 1.816  time: 0.7497  data_time: 0.0006  lr: 1.92e-04  max_mem: 22746M
[05/30 17:28:37] fastreid.engine.hooks INFO: Open layer group "backbone, b1, b2, b3" training
[05/30 17:28:40] fastreid.utils.events INFO:  eta: 0:02:34  epoch/iter: 38/1013  total_loss: 57.22  loss_cls_b1: 6.213  loss_cls_b2: 6.183  loss_cls_b21: 6.168  loss_cls_b22: 6.24  loss_cls_b3: 6.123  loss_cls_b31: 6.162  loss_cls_b32: 6.212  loss_cls_b33: 6.18  loss_triplet_b1: 1.444  loss_triplet_b2: 1.457  loss_triplet_b3: 1.447  loss_triplet_b22: 1.651  loss_triplet_b33: 1.795  time: 0.7432  data_time: 0.0007  lr: 1.94e-04  max_mem: 22746M
[05/30 17:28:48] fastreid.engine.defaults INFO: Prepare testing set
[05/30 17:28:48] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 113     | 374        | 1           |
| gallery  | 195     | 1655       | 1           |[0m
[05/30 17:28:48] fastreid.evaluation.evaluator INFO: Start inference on 2029 images
[05/30 17:28:51] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.2141 s / batch. ETA=0:00:01
[05/30 17:28:52] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:02.310204 (0.210019 s / batch per device, on 1 devices)
[05/30 17:28:52] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.208986 s / batch per device, on 1 devices)
[05/30 17:28:53] fastreid.engine.defaults INFO: Evaluation results for WildSplit5 in csv format:
[05/30 17:28:53] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit5 | 73.39    | 82.63    | 84.87     | 55.87 | 12.28  | 64.63    |[0m
[05/30 17:28:53] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit5/mgn_R50-ibn/model_best.pth
[05/30 17:28:58] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit5/mgn_R50-ibn/model_0039.pth
[05/30 17:29:00] fastreid.utils.events INFO:  eta: 0:02:26  epoch/iter: 39/1039  total_loss: 56.91  loss_cls_b1: 6.19  loss_cls_b2: 6.165  loss_cls_b21: 6.165  loss_cls_b22: 6.212  loss_cls_b3: 6.117  loss_cls_b31: 6.169  loss_cls_b32: 6.205  loss_cls_b33: 6.166  loss_triplet_b1: 1.404  loss_triplet_b2: 1.422  loss_triplet_b3: 1.404  loss_triplet_b22: 1.595  loss_triplet_b33: 1.733  time: 0.7317  data_time: 0.0009  lr: 1.98e-04  max_mem: 22746M
[05/30 17:29:08] fastreid.utils.events INFO:  eta: 0:02:19  epoch/iter: 40/1065  total_loss: 56.44  loss_cls_b1: 6.15  loss_cls_b2: 6.147  loss_cls_b21: 6.134  loss_cls_b22: 6.151  loss_cls_b3: 6.083  loss_cls_b31: 6.139  loss_cls_b32: 6.149  loss_cls_b33: 6.131  loss_triplet_b1: 1.347  loss_triplet_b2: 1.346  loss_triplet_b3: 1.312  loss_triplet_b22: 1.528  loss_triplet_b33: 1.615  time: 0.7209  data_time: 0.0004  lr: 2.02e-04  max_mem: 22746M
[05/30 17:29:16] fastreid.utils.events INFO:  eta: 0:02:12  epoch/iter: 41/1091  total_loss: 55.86  loss_cls_b1: 6.091  loss_cls_b2: 6.102  loss_cls_b21: 6.062  loss_cls_b22: 6.098  loss_cls_b3: 6.035  loss_cls_b31: 6.054  loss_cls_b32: 6.079  loss_cls_b33: 6.04  loss_triplet_b1: 1.191  loss_triplet_b2: 1.228  loss_triplet_b3: 1.192  loss_triplet_b22: 1.407  loss_triplet_b33: 1.424  time: 0.7107  data_time: 0.0011  lr: 2.06e-04  max_mem: 22746M
[05/30 17:29:23] fastreid.utils.events INFO:  eta: 0:02:04  epoch/iter: 42/1117  total_loss: 53.69  loss_cls_b1: 5.979  loss_cls_b2: 5.976  loss_cls_b21: 5.975  loss_cls_b22: 6.017  loss_cls_b3: 5.976  loss_cls_b31: 5.978  loss_cls_b32: 6.005  loss_cls_b33: 5.966  loss_triplet_b1: 0.9377  loss_triplet_b2: 0.8622  loss_triplet_b3: 0.8688  loss_triplet_b22: 0.9896  loss_triplet_b33: 1.054  time: 0.7007  data_time: 0.0005  lr: 2.10e-04  max_mem: 22746M
[05/30 17:29:30] fastreid.utils.events INFO:  eta: 0:01:57  epoch/iter: 43/1143  total_loss: 49.22  loss_cls_b1: 5.68  loss_cls_b2: 5.762  loss_cls_b21: 5.742  loss_cls_b22: 5.745  loss_cls_b3: 5.746  loss_cls_b31: 5.775  loss_cls_b32: 5.813  loss_cls_b33: 5.781  loss_triplet_b1: 0.7441  loss_triplet_b2: 0.7184  loss_triplet_b3: 0.7001  loss_triplet_b22: 0.7991  loss_triplet_b33: 0.8202  time: 0.6911  data_time: 0.0006  lr: 2.14e-04  max_mem: 22746M
[05/30 17:29:38] fastreid.utils.events INFO:  eta: 0:01:49  epoch/iter: 44/1169  total_loss: 44.81  loss_cls_b1: 5.076  loss_cls_b2: 5.336  loss_cls_b21: 5.129  loss_cls_b22: 5.262  loss_cls_b3: 5.26  loss_cls_b31: 5.272  loss_cls_b32: 5.383  loss_cls_b33: 5.296  loss_triplet_b1: 0.6219  loss_triplet_b2: 0.5917  loss_triplet_b3: 0.5995  loss_triplet_b22: 0.6455  loss_triplet_b33: 0.6938  time: 0.6821  data_time: 0.0004  lr: 2.18e-04  max_mem: 22746M
[05/30 17:29:45] fastreid.utils.events INFO:  eta: 0:01:42  epoch/iter: 45/1195  total_loss: 39.09  loss_cls_b1: 4.254  loss_cls_b2: 4.623  loss_cls_b21: 4.582  loss_cls_b22: 4.701  loss_cls_b3: 4.71  loss_cls_b31: 4.613  loss_cls_b32: 4.682  loss_cls_b33: 4.692  loss_triplet_b1: 0.579  loss_triplet_b2: 0.5054  loss_triplet_b3: 0.5176  loss_triplet_b22: 0.5429  loss_triplet_b33: 0.5952  time: 0.6735  data_time: 0.0004  lr: 2.22e-04  max_mem: 22746M
[05/30 17:29:47] fastreid.utils.events INFO:  eta: 0:01:41  epoch/iter: 46/1199  total_loss: 38.51  loss_cls_b1: 4.214  loss_cls_b2: 4.536  loss_cls_b21: 4.474  loss_cls_b22: 4.585  loss_cls_b3: 4.656  loss_cls_b31: 4.473  loss_cls_b32: 4.611  loss_cls_b33: 4.631  loss_triplet_b1: 0.5647  loss_triplet_b2: 0.4879  loss_triplet_b3: 0.5085  loss_triplet_b22: 0.526  loss_triplet_b33: 0.57  time: 0.6722  data_time: 0.0005  lr: 2.23e-04  max_mem: 22746M
[05/30 17:29:53] fastreid.utils.events INFO:  eta: 0:01:34  epoch/iter: 46/1221  total_loss: 35.62  loss_cls_b1: 3.872  loss_cls_b2: 4.168  loss_cls_b21: 4.082  loss_cls_b22: 4.169  loss_cls_b3: 4.131  loss_cls_b31: 4.079  loss_cls_b32: 4.152  loss_cls_b33: 4.263  loss_triplet_b1: 0.4762  loss_triplet_b2: 0.414  loss_triplet_b3: 0.4245  loss_triplet_b22: 0.4695  loss_triplet_b33: 0.4847  time: 0.6652  data_time: 0.0005  lr: 2.27e-04  max_mem: 22746M
[05/30 17:30:01] fastreid.utils.events INFO:  eta: 0:01:27  epoch/iter: 47/1247  total_loss: 31.16  loss_cls_b1: 3.336  loss_cls_b2: 3.568  loss_cls_b21: 3.649  loss_cls_b22: 3.752  loss_cls_b3: 3.626  loss_cls_b31: 3.709  loss_cls_b32: 3.8  loss_cls_b33: 3.821  loss_triplet_b1: 0.3675  loss_triplet_b2: 0.3543  loss_triplet_b3: 0.3535  loss_triplet_b22: 0.3649  loss_triplet_b33: 0.4241  time: 0.6573  data_time: 0.0005  lr: 2.31e-04  max_mem: 22746M
[05/30 17:30:08] fastreid.utils.events INFO:  eta: 0:01:20  epoch/iter: 48/1273  total_loss: 27.81  loss_cls_b1: 2.973  loss_cls_b2: 3.272  loss_cls_b21: 3.281  loss_cls_b22: 3.453  loss_cls_b3: 3.244  loss_cls_b31: 3.307  loss_cls_b32: 3.456  loss_cls_b33: 3.47  loss_triplet_b1: 0.3054  loss_triplet_b2: 0.3011  loss_triplet_b3: 0.3126  loss_triplet_b22: 0.2941  loss_triplet_b33: 0.3444  time: 0.6497  data_time: 0.0006  lr: 2.35e-04  max_mem: 22746M
[05/30 17:30:16] fastreid.engine.defaults INFO: Prepare testing set
[05/30 17:30:16] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 113     | 374        | 1           |
| gallery  | 195     | 1655       | 1           |[0m
[05/30 17:30:16] fastreid.evaluation.evaluator INFO: Start inference on 2029 images
[05/30 17:30:19] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.2148 s / batch. ETA=0:00:01
[05/30 17:30:20] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:02.314708 (0.210428 s / batch per device, on 1 devices)
[05/30 17:30:20] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.209428 s / batch per device, on 1 devices)
[05/30 17:30:20] fastreid.engine.defaults INFO: Evaluation results for WildSplit5 in csv format:
[05/30 17:30:20] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit5 | 80.39    | 86.83    | 89.64     | 72.56 | 26.24  | 76.47    |[0m
[05/30 17:30:20] fastreid.utils.events INFO:  eta: 0:01:12  epoch/iter: 49/1299  total_loss: 25.05  loss_cls_b1: 2.669  loss_cls_b2: 2.897  loss_cls_b21: 2.945  loss_cls_b22: 3.065  loss_cls_b3: 2.941  loss_cls_b31: 2.992  loss_cls_b32: 3.138  loss_cls_b33: 3.182  loss_triplet_b1: 0.2416  loss_triplet_b2: 0.2569  loss_triplet_b3: 0.2485  loss_triplet_b22: 0.2482  loss_triplet_b33: 0.275  time: 0.6423  data_time: 0.0007  lr: 2.39e-04  max_mem: 22746M
[05/30 17:30:28] fastreid.utils.events INFO:  eta: 0:01:05  epoch/iter: 50/1325  total_loss: 22.65  loss_cls_b1: 2.364  loss_cls_b2: 2.626  loss_cls_b21: 2.636  loss_cls_b22: 2.883  loss_cls_b3: 2.694  loss_cls_b31: 2.711  loss_cls_b32: 2.876  loss_cls_b33: 2.919  loss_triplet_b1: 0.1801  loss_triplet_b2: 0.1798  loss_triplet_b3: 0.2063  loss_triplet_b22: 0.1935  loss_triplet_b33: 0.2109  time: 0.6353  data_time: 0.0007  lr: 2.43e-04  max_mem: 22746M
[05/30 17:30:35] fastreid.utils.events INFO:  eta: 0:00:58  epoch/iter: 51/1351  total_loss: 20.1  loss_cls_b1: 2.065  loss_cls_b2: 2.285  loss_cls_b21: 2.417  loss_cls_b22: 2.519  loss_cls_b3: 2.386  loss_cls_b31: 2.497  loss_cls_b32: 2.648  loss_cls_b33: 2.564  loss_triplet_b1: 0.1544  loss_triplet_b2: 0.1611  loss_triplet_b3: 0.1798  loss_triplet_b22: 0.1708  loss_triplet_b33: 0.1921  time: 0.6287  data_time: 0.0004  lr: 2.47e-04  max_mem: 22746M
[05/30 17:30:43] fastreid.utils.events INFO:  eta: 0:00:50  epoch/iter: 52/1377  total_loss: 18.33  loss_cls_b1: 1.861  loss_cls_b2: 2.049  loss_cls_b21: 2.161  loss_cls_b22: 2.299  loss_cls_b3: 2.152  loss_cls_b31: 2.262  loss_cls_b32: 2.462  loss_cls_b33: 2.415  loss_triplet_b1: 0.1265  loss_triplet_b2: 0.1393  loss_triplet_b3: 0.1606  loss_triplet_b22: 0.1442  loss_triplet_b33: 0.152  time: 0.6222  data_time: 0.0007  lr: 2.51e-04  max_mem: 22746M
[05/30 17:30:49] fastreid.utils.events INFO:  eta: 0:00:44  epoch/iter: 53/1399  total_loss: 17.13  loss_cls_b1: 1.719  loss_cls_b2: 1.893  loss_cls_b21: 1.982  loss_cls_b22: 2.167  loss_cls_b3: 1.912  loss_cls_b31: 2.102  loss_cls_b32: 2.25  loss_cls_b33: 2.242  loss_triplet_b1: 0.1116  loss_triplet_b2: 0.1166  loss_triplet_b3: 0.1384  loss_triplet_b22: 0.1211  loss_triplet_b33: 0.1445  time: 0.6169  data_time: 0.0010  lr: 2.55e-04  max_mem: 22746M
[05/30 17:30:51] fastreid.utils.events INFO:  eta: 0:00:43  epoch/iter: 53/1403  total_loss: 17.03  loss_cls_b1: 1.679  loss_cls_b2: 1.87  loss_cls_b21: 1.974  loss_cls_b22: 2.132  loss_cls_b3: 1.866  loss_cls_b31: 2.059  loss_cls_b32: 2.222  loss_cls_b33: 2.225  loss_triplet_b1: 0.1089  loss_triplet_b2: 0.1122  loss_triplet_b3: 0.1315  loss_triplet_b22: 0.1166  loss_triplet_b33: 0.1388  time: 0.6159  data_time: 0.0010  lr: 2.55e-04  max_mem: 22746M
[05/30 17:30:58] fastreid.utils.events INFO:  eta: 0:00:36  epoch/iter: 54/1429  total_loss: 15.25  loss_cls_b1: 1.501  loss_cls_b2: 1.68  loss_cls_b21: 1.796  loss_cls_b22: 1.954  loss_cls_b3: 1.666  loss_cls_b31: 1.918  loss_cls_b32: 2.077  loss_cls_b33: 2.076  loss_triplet_b1: 0.09864  loss_triplet_b2: 0.09143  loss_triplet_b3: 0.108  loss_triplet_b22: 0.09956  loss_triplet_b33: 0.1172  time: 0.6099  data_time: 0.0005  lr: 2.59e-04  max_mem: 22746M
[05/30 17:31:06] fastreid.utils.events INFO:  eta: 0:00:29  epoch/iter: 55/1455  total_loss: 14.23  loss_cls_b1: 1.335  loss_cls_b2: 1.581  loss_cls_b21: 1.724  loss_cls_b22: 1.839  loss_cls_b3: 1.557  loss_cls_b31: 1.824  loss_cls_b32: 1.932  loss_cls_b33: 1.963  loss_triplet_b1: 0.08426  loss_triplet_b2: 0.08158  loss_triplet_b3: 0.09276  loss_triplet_b22: 0.08089  loss_triplet_b33: 0.08587  time: 0.6040  data_time: 0.0007  lr: 2.63e-04  max_mem: 22746M
[05/30 17:31:13] fastreid.utils.events INFO:  eta: 0:00:21  epoch/iter: 56/1481  total_loss: 13.29  loss_cls_b1: 1.22  loss_cls_b2: 1.431  loss_cls_b21: 1.565  loss_cls_b22: 1.713  loss_cls_b3: 1.455  loss_cls_b31: 1.685  loss_cls_b32: 1.804  loss_cls_b33: 1.825  loss_triplet_b1: 0.06837  loss_triplet_b2: 0.07669  loss_triplet_b3: 0.08346  loss_triplet_b22: 0.07381  loss_triplet_b33: 0.08206  time: 0.5983  data_time: 0.0004  lr: 2.67e-04  max_mem: 22746M
[05/30 17:31:20] fastreid.utils.events INFO:  eta: 0:00:14  epoch/iter: 57/1507  total_loss: 12.29  loss_cls_b1: 1.161  loss_cls_b2: 1.343  loss_cls_b21: 1.508  loss_cls_b22: 1.606  loss_cls_b3: 1.375  loss_cls_b31: 1.589  loss_cls_b32: 1.719  loss_cls_b33: 1.728  loss_triplet_b1: 0.06248  loss_triplet_b2: 0.06511  loss_triplet_b3: 0.07359  loss_triplet_b22: 0.06565  loss_triplet_b33: 0.07225  time: 0.5929  data_time: 0.0007  lr: 2.72e-04  max_mem: 22746M
[05/30 17:31:28] fastreid.utils.events INFO:  eta: 0:00:07  epoch/iter: 58/1533  total_loss: 11.66  loss_cls_b1: 1.075  loss_cls_b2: 1.226  loss_cls_b21: 1.394  loss_cls_b22: 1.512  loss_cls_b3: 1.298  loss_cls_b31: 1.502  loss_cls_b32: 1.605  loss_cls_b33: 1.597  loss_triplet_b1: 0.05281  loss_triplet_b2: 0.06111  loss_triplet_b3: 0.06951  loss_triplet_b22: 0.05722  loss_triplet_b33: 0.05743  time: 0.5877  data_time: 0.0006  lr: 2.76e-04  max_mem: 22746M
[05/30 17:31:35] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/1559  total_loss: 10.69  loss_cls_b1: 1.003  loss_cls_b2: 1.122  loss_cls_b21: 1.303  loss_cls_b22: 1.423  loss_cls_b3: 1.162  loss_cls_b31: 1.414  loss_cls_b32: 1.504  loss_cls_b33: 1.539  loss_triplet_b1: 0.0471  loss_triplet_b2: 0.05045  loss_triplet_b3: 0.05861  loss_triplet_b22: 0.04957  loss_triplet_b33: 0.04923  time: 0.5826  data_time: 0.0004  lr: 2.80e-04  max_mem: 22746M
[05/30 17:31:36] fastreid.engine.defaults INFO: Prepare testing set
[05/30 17:31:36] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 113     | 374        | 1           |
| gallery  | 195     | 1655       | 1           |[0m
[05/30 17:31:36] fastreid.evaluation.evaluator INFO: Start inference on 2029 images
[05/30 17:31:39] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.2145 s / batch. ETA=0:00:01
[05/30 17:31:40] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:02.317881 (0.210716 s / batch per device, on 1 devices)
[05/30 17:31:40] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.209681 s / batch per device, on 1 devices)
[05/30 17:31:40] fastreid.engine.defaults INFO: Evaluation results for WildSplit5 in csv format:
[05/30 17:31:40] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit5 | 82.35    | 88.24    | 90.48     | 76.29 | 30.93  | 79.32    |[0m
[05/30 17:31:40] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit5/mgn_R50-ibn/model_best.pth
[05/30 17:31:47] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit5/mgn_R50-ibn/model_final.pth
[05/30 17:31:49] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/1559  total_loss: 10.69  loss_cls_b1: 1.003  loss_cls_b2: 1.122  loss_cls_b21: 1.303  loss_cls_b22: 1.423  loss_cls_b3: 1.162  loss_cls_b31: 1.414  loss_cls_b32: 1.504  loss_cls_b33: 1.539  loss_triplet_b1: 0.0471  loss_triplet_b2: 0.05045  loss_triplet_b3: 0.05861  loss_triplet_b22: 0.04957  loss_triplet_b33: 0.04923  time: 0.5826  data_time: 0.0004  lr: 2.80e-04  max_mem: 22746M
[05/30 17:31:49] fastreid.engine.hooks INFO: Overall training speed: 1558 iterations in 0:15:07 (0.5826 s / it)
[05/30 17:31:49] fastreid.engine.hooks INFO: Total training time: 0:16:07 (0:00:59 on hooks)
[12/27 00:32:25] fastreid INFO: Rank of current process: 0. World size: 1
[12/27 00:32:26] fastreid INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.14 | packaged by conda-forge | (default, Nov 21 2022, 13:18:34) [GCC 10.4.0]
numpy                   1.23.5
fastreid                1.3 @/data01/zhangleiting/_codes/fast-reid/./fastreid
FASTREID_ENV_MODULE     <not set>
PyTorch                 1.11.0+cu113 @/data01/zhangleiting/anaconda3/envs/fast/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1,2,3             NVIDIA A100-PCIE-40GB
CUDA_HOME               /usr/local/cuda-11.4
Pillow                  9.3.0
torchvision             0.12.0+cu113 @/data01/zhangleiting/anaconda3/envs/fast/lib/python3.8/site-packages/torchvision
torchvision arch flags  sm_35, sm_50, sm_60, sm_70, sm_75, sm_80, sm_86
cv2                     4.6.0
----------------------  ----------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[12/27 00:32:26] fastreid INFO: Command line arguments: Namespace(config_file='./configs/WildSplit5/mgn_R50-ibn.yml', dist_url='tcp://127.0.0.1:50163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.DEVICE', 'cuda:1'], resume=False)
[12/27 00:32:26] fastreid INFO: Contents of args.config_file=./configs/WildSplit5/mgn_R50-ibn.yml:
_BASE_: ../Base-MGN.yml

MODEL:
  BACKBONE:
    WITH_IBN: True

DATASETS:
  NAMES: ("WildSplit5",)
  TESTS: ("WildSplit5",)

OUTPUT_DIR: logs/wildsplit5/mgn_R50-ibn

[12/27 00:32:26] fastreid INFO: Running with full config:
CUDNN_BENCHMARK: True
DATALOADER:
  NUM_INSTANCE: 16
  NUM_WORKERS: 8
  SAMPLER_TRAIN: NaiveIdentitySampler
  SET_WEIGHT: []
DATASETS:
  COMBINEALL: False
  NAMES: ('WildSplit5',)
  TESTS: ('WildSplit5',)
INPUT:
  AFFINE:
    ENABLED: False
  AUGMIX:
    ENABLED: False
    PROB: 0.0
  AUTOAUG:
    ENABLED: True
    PROB: 0.1
  CJ:
    BRIGHTNESS: 0.15
    CONTRAST: 0.15
    ENABLED: False
    HUE: 0.1
    PROB: 0.5
    SATURATION: 0.1
  CROP:
    ENABLED: False
    RATIO: [0.75, 1.3333333333333333]
    SCALE: [0.16, 1]
    SIZE: [224, 224]
  FLIP:
    ENABLED: True
    PROB: 0.5
  PADDING:
    ENABLED: True
    MODE: constant
    SIZE: 10
  REA:
    ENABLED: True
    PROB: 0.5
    VALUE: [123.675, 116.28, 103.53]
  RPT:
    ENABLED: False
    PROB: 0.5
  SIZE_TEST: [384, 128]
  SIZE_TRAIN: [384, 128]
KD:
  EMA:
    ENABLED: False
    MOMENTUM: 0.999
  MODEL_CONFIG: []
  MODEL_WEIGHTS: []
MODEL:
  BACKBONE:
    ATT_DROP_RATE: 0.0
    DEPTH: 50x
    DROP_PATH_RATIO: 0.1
    DROP_RATIO: 0.0
    FEAT_DIM: 2048
    LAST_STRIDE: 1
    NAME: build_resnet_backbone
    NORM: BN
    PRETRAIN: True
    PRETRAIN_PATH: 
    SIE_COE: 3.0
    STRIDE_SIZE: (16, 16)
    WITH_IBN: True
    WITH_NL: False
    WITH_SE: False
  DEVICE: cuda:1
  FREEZE_LAYERS: ['backbone', 'b1', 'b2', 'b3']
  HEADS:
    CLS_LAYER: CircleSoftmax
    EMBEDDING_DIM: 256
    MARGIN: 0.35
    NAME: EmbeddingHead
    NECK_FEAT: after
    NORM: BN
    NUM_CLASSES: 0
    POOL_LAYER: GeneralizedMeanPoolingP
    SCALE: 64
    WITH_BNNECK: True
  LOSSES:
    CE:
      ALPHA: 0.2
      EPSILON: 0.1
      SCALE: 1.0
    CIRCLE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    COSFACE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    FL:
      ALPHA: 0.25
      GAMMA: 2
      SCALE: 1.0
    NAME: ('CrossEntropyLoss', 'TripletLoss')
    TRI:
      HARD_MINING: True
      MARGIN: 0.0
      NORM_FEAT: False
      SCALE: 1.0
  META_ARCHITECTURE: MGN
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.120000000000005, 57.375]
  QUEUE_SIZE: 8192
  WEIGHTS: 
OUTPUT_DIR: logs/wildsplit5/mgn_R50-ibn
SOLVER:
  AMP:
    ENABLED: True
  BASE_LR: 0.00035
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 20
  CLIP_GRADIENTS:
    CLIP_TYPE: norm
    CLIP_VALUE: 5.0
    ENABLED: False
    NORM_TYPE: 2.0
  DELAY_EPOCHS: 30
  ETA_MIN_LR: 7e-07
  FREEZE_ITERS: 1000
  GAMMA: 0.1
  HEADS_LR_FACTOR: 1.0
  IMS_PER_BATCH: 64
  MAX_EPOCH: 60
  MOMENTUM: 0.9
  NESTEROV: False
  OPT: Adam
  SCHED: CosineAnnealingLR
  STEPS: [40, 90]
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 2000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0005
  WEIGHT_DECAY_BIAS: 0.0005
  WEIGHT_DECAY_NORM: 0.0005
TEST:
  AQE:
    ALPHA: 3.0
    ENABLED: False
    QE_K: 5
    QE_TIME: 1
  EVAL_PERIOD: 10
  FLIP:
    ENABLED: False
  IMS_PER_BATCH: 128
  METRIC: cosine
  PRECISE_BN:
    DATASET: Market1501
    ENABLED: False
    NUM_ITER: 300
  RERANK:
    ENABLED: False
    K1: 20
    K2: 6
    LAMBDA: 0.3
  ROC:
    ENABLED: False
[12/27 00:32:26] fastreid INFO: Full config saved to /data01/zhangleiting/_codes/fast-reid/logs/wildsplit5/mgn_R50-ibn/config.yaml
[12/27 00:32:26] fastreid.utils.env INFO: Using a generated random seed 26726178
[12/27 00:32:26] fastreid.engine.defaults INFO: Prepare training set
[12/27 00:32:26] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| train    | 297     | 1672       | 1           |[0m
[12/27 00:32:26] fastreid.data.build INFO: Using training sampler NaiveIdentitySampler
[12/27 00:32:26] fastreid.engine.defaults INFO: Auto-scaling the num_classes=297
[12/27 00:32:27] fastreid.modeling.backbones.resnet INFO: Loading pretrained model from /data01/zhangleiting/.cache/torch/checkpoints/resnet50_ibn_a-d9d0bb7b.pth
[12/27 00:32:28] fastreid.modeling.backbones.resnet INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc.{weight, bias}[0m
[12/27 00:32:40] fastreid.engine.defaults INFO: Model:
MGN(
  (backbone): Sequential(
    (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (5): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (6): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): IBN(
        (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (se): Identity()
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (b1): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b1_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b2): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b2_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b21_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b22_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b3): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b3_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b31_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b32_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b33_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
)
[12/27 00:32:51] fastreid.utils.checkpoint INFO: No checkpoint found. Training model from scratch
[12/27 00:32:51] fastreid.engine.train_loop INFO: Starting training from epoch 0
[12/27 00:32:51] fastreid.engine.hooks INFO: Freeze layer group "backbone, b1, b2, b3" training for 1000 iterations
[12/27 00:33:09] fastreid.utils.events INFO:  eta: 0:10:11  epoch/iter: 0/25  total_loss: 56.99  loss_cls_b1: 6.164  loss_cls_b2: 6.229  loss_cls_b21: 6.206  loss_cls_b22: 6.153  loss_cls_b3: 6.099  loss_cls_b31: 6.328  loss_cls_b32: 6.131  loss_cls_b33: 6.23  loss_triplet_b1: 1.294  loss_triplet_b2: 1.36  loss_triplet_b3: 1.322  loss_triplet_b22: 1.529  loss_triplet_b33: 1.799  time: 0.4773  data_time: 0.0013  lr: 3.83e-05  max_mem: 72M
[12/27 00:33:20] fastreid.utils.events INFO:  eta: 0:10:23  epoch/iter: 1/51  total_loss: 56.88  loss_cls_b1: 6.196  loss_cls_b2: 6.147  loss_cls_b21: 6.188  loss_cls_b22: 6.142  loss_cls_b3: 6.139  loss_cls_b31: 6.243  loss_cls_b32: 6.083  loss_cls_b33: 6.23  loss_triplet_b1: 1.336  loss_triplet_b2: 1.313  loss_triplet_b3: 1.272  loss_triplet_b22: 1.529  loss_triplet_b33: 1.7  time: 0.4594  data_time: 0.0006  lr: 4.24e-05  max_mem: 72M
[12/27 00:33:32] fastreid.utils.events INFO:  eta: 0:10:31  epoch/iter: 2/77  total_loss: 57.11  loss_cls_b1: 6.209  loss_cls_b2: 6.16  loss_cls_b21: 6.18  loss_cls_b22: 6.163  loss_cls_b3: 6.18  loss_cls_b31: 6.23  loss_cls_b32: 6.131  loss_cls_b33: 6.23  loss_triplet_b1: 1.352  loss_triplet_b2: 1.32  loss_triplet_b3: 1.332  loss_triplet_b22: 1.558  loss_triplet_b33: 1.769  time: 0.4536  data_time: 0.0025  lr: 4.65e-05  max_mem: 72M
[12/27 00:33:46] fastreid.utils.events INFO:  eta: 0:10:36  epoch/iter: 3/103  total_loss: 57.02  loss_cls_b1: 6.21  loss_cls_b2: 6.179  loss_cls_b21: 6.2  loss_cls_b22: 6.174  loss_cls_b3: 6.151  loss_cls_b31: 6.219  loss_cls_b32: 6.141  loss_cls_b33: 6.212  loss_triplet_b1: 1.324  loss_triplet_b2: 1.313  loss_triplet_b3: 1.328  loss_triplet_b22: 1.515  loss_triplet_b33: 1.749  time: 0.4759  data_time: 0.0008  lr: 5.04e-05  max_mem: 72M
[12/27 00:33:58] fastreid.utils.events INFO:  eta: 0:10:33  epoch/iter: 4/129  total_loss: 57.07  loss_cls_b1: 6.21  loss_cls_b2: 6.178  loss_cls_b21: 6.222  loss_cls_b22: 6.169  loss_cls_b3: 6.179  loss_cls_b31: 6.208  loss_cls_b32: 6.15  loss_cls_b33: 6.208  loss_triplet_b1: 1.329  loss_triplet_b2: 1.32  loss_triplet_b3: 1.336  loss_triplet_b22: 1.549  loss_triplet_b33: 1.767  time: 0.4761  data_time: 0.0007  lr: 5.45e-05  max_mem: 72M
[12/27 00:34:10] fastreid.utils.events INFO:  eta: 0:10:20  epoch/iter: 5/155  total_loss: 57.02  loss_cls_b1: 6.214  loss_cls_b2: 6.163  loss_cls_b21: 6.213  loss_cls_b22: 6.169  loss_cls_b3: 6.18  loss_cls_b31: 6.223  loss_cls_b32: 6.161  loss_cls_b33: 6.199  loss_triplet_b1: 1.326  loss_triplet_b2: 1.317  loss_triplet_b3: 1.324  loss_triplet_b22: 1.535  loss_triplet_b33: 1.76  time: 0.4703  data_time: 0.0008  lr: 5.86e-05  max_mem: 72M
[12/27 00:34:23] fastreid.utils.events INFO:  eta: 0:10:16  epoch/iter: 6/181  total_loss: 57.11  loss_cls_b1: 6.209  loss_cls_b2: 6.168  loss_cls_b21: 6.207  loss_cls_b22: 6.16  loss_cls_b3: 6.18  loss_cls_b31: 6.22  loss_cls_b32: 6.161  loss_cls_b33: 6.198  loss_triplet_b1: 1.357  loss_triplet_b2: 1.322  loss_triplet_b3: 1.341  loss_triplet_b22: 1.576  loss_triplet_b33: 1.768  time: 0.4750  data_time: 0.0012  lr: 6.27e-05  max_mem: 72M
[12/27 00:34:32] fastreid.utils.events INFO:  eta: 0:10:16  epoch/iter: 7/199  total_loss: 56.99  loss_cls_b1: 6.204  loss_cls_b2: 6.163  loss_cls_b21: 6.213  loss_cls_b22: 6.174  loss_cls_b3: 6.181  loss_cls_b31: 6.23  loss_cls_b32: 6.166  loss_cls_b33: 6.194  loss_triplet_b1: 1.326  loss_triplet_b2: 1.313  loss_triplet_b3: 1.325  loss_triplet_b22: 1.542  loss_triplet_b33: 1.749  time: 0.4761  data_time: 0.0012  lr: 6.56e-05  max_mem: 72M
[12/27 00:34:36] fastreid.utils.events INFO:  eta: 0:10:16  epoch/iter: 7/207  total_loss: 57  loss_cls_b1: 6.204  loss_cls_b2: 6.168  loss_cls_b21: 6.199  loss_cls_b22: 6.17  loss_cls_b3: 6.194  loss_cls_b31: 6.23  loss_cls_b32: 6.166  loss_cls_b33: 6.192  loss_triplet_b1: 1.332  loss_triplet_b2: 1.32  loss_triplet_b3: 1.327  loss_triplet_b22: 1.56  loss_triplet_b33: 1.767  time: 0.4766  data_time: 0.0012  lr: 6.68e-05  max_mem: 72M
[12/27 00:34:49] fastreid.utils.events INFO:  eta: 0:10:17  epoch/iter: 8/233  total_loss: 56.99  loss_cls_b1: 6.199  loss_cls_b2: 6.168  loss_cls_b21: 6.221  loss_cls_b22: 6.186  loss_cls_b3: 6.194  loss_cls_b31: 6.23  loss_cls_b32: 6.174  loss_cls_b33: 6.186  loss_triplet_b1: 1.336  loss_triplet_b2: 1.306  loss_triplet_b3: 1.325  loss_triplet_b22: 1.548  loss_triplet_b33: 1.749  time: 0.4796  data_time: 0.0025  lr: 7.09e-05  max_mem: 72M
[12/27 00:35:03] fastreid.engine.defaults INFO: Prepare testing set
[12/27 00:35:03] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 374        | 1           |
| gallery  | 297     | 1655       | 1           |[0m
[12/27 00:35:03] fastreid.evaluation.evaluator INFO: Start inference on 2029 images
[12/27 00:35:10] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.3153 s / batch. ETA=0:00:01
[12/27 00:35:13] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:04.971187 (0.451926 s / batch per device, on 1 devices)
[12/27 00:35:13] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:04 (0.450460 s / batch per device, on 1 devices)
[12/27 00:35:14] fastreid.engine.defaults INFO: Evaluation results for WildSplit5 in csv format:
[12/27 00:35:14] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit5 | 68.07    | 76.19    | 79.83     | 44.15 | 7.81   | 56.11    |[0m
[12/27 00:35:14] fastreid.utils.events INFO:  eta: 0:10:11  epoch/iter: 9/259  total_loss: 56.99  loss_cls_b1: 6.215  loss_cls_b2: 6.171  loss_cls_b21: 6.229  loss_cls_b22: 6.182  loss_cls_b3: 6.18  loss_cls_b31: 6.23  loss_cls_b32: 6.172  loss_cls_b33: 6.189  loss_triplet_b1: 1.336  loss_triplet_b2: 1.317  loss_triplet_b3: 1.341  loss_triplet_b22: 1.548  loss_triplet_b33: 1.771  time: 0.4829  data_time: 0.0005  lr: 7.50e-05  max_mem: 252M
[12/27 00:35:28] fastreid.utils.events INFO:  eta: 0:10:03  epoch/iter: 10/285  total_loss: 57.07  loss_cls_b1: 6.192  loss_cls_b2: 6.179  loss_cls_b21: 6.237  loss_cls_b22: 6.169  loss_cls_b3: 6.182  loss_cls_b31: 6.227  loss_cls_b32: 6.179  loss_cls_b33: 6.186  loss_triplet_b1: 1.37  loss_triplet_b2: 1.329  loss_triplet_b3: 1.346  loss_triplet_b22: 1.576  loss_triplet_b33: 1.782  time: 0.4855  data_time: 0.0008  lr: 7.91e-05  max_mem: 252M
[12/27 00:35:41] fastreid.utils.events INFO:  eta: 0:09:58  epoch/iter: 11/311  total_loss: 57.29  loss_cls_b1: 6.196  loss_cls_b2: 6.176  loss_cls_b21: 6.221  loss_cls_b22: 6.177  loss_cls_b3: 6.197  loss_cls_b31: 6.23  loss_cls_b32: 6.194  loss_cls_b33: 6.193  loss_triplet_b1: 1.431  loss_triplet_b2: 1.391  loss_triplet_b3: 1.41  loss_triplet_b22: 1.645  loss_triplet_b33: 1.848  time: 0.4888  data_time: 0.0010  lr: 8.32e-05  max_mem: 252M
[12/27 00:35:55] fastreid.utils.events INFO:  eta: 0:09:47  epoch/iter: 12/337  total_loss: 57.26  loss_cls_b1: 6.177  loss_cls_b2: 6.185  loss_cls_b21: 6.228  loss_cls_b22: 6.178  loss_cls_b3: 6.193  loss_cls_b31: 6.238  loss_cls_b32: 6.172  loss_cls_b33: 6.191  loss_triplet_b1: 1.441  loss_triplet_b2: 1.391  loss_triplet_b3: 1.401  loss_triplet_b22: 1.633  loss_triplet_b33: 1.839  time: 0.4897  data_time: 0.0005  lr: 8.73e-05  max_mem: 252M
[12/27 00:36:09] fastreid.utils.events INFO:  eta: 0:09:41  epoch/iter: 13/363  total_loss: 57.31  loss_cls_b1: 6.189  loss_cls_b2: 6.196  loss_cls_b21: 6.242  loss_cls_b22: 6.174  loss_cls_b3: 6.194  loss_cls_b31: 6.237  loss_cls_b32: 6.177  loss_cls_b33: 6.207  loss_triplet_b1: 1.445  loss_triplet_b2: 1.391  loss_triplet_b3: 1.383  loss_triplet_b22: 1.633  loss_triplet_b33: 1.841  time: 0.4936  data_time: 0.0008  lr: 9.14e-05  max_mem: 252M
[12/27 00:36:23] fastreid.utils.events INFO:  eta: 0:09:35  epoch/iter: 14/389  total_loss: 57.33  loss_cls_b1: 6.192  loss_cls_b2: 6.212  loss_cls_b21: 6.231  loss_cls_b22: 6.181  loss_cls_b3: 6.194  loss_cls_b31: 6.237  loss_cls_b32: 6.182  loss_cls_b33: 6.197  loss_triplet_b1: 1.465  loss_triplet_b2: 1.423  loss_triplet_b3: 1.401  loss_triplet_b22: 1.645  loss_triplet_b33: 1.835  time: 0.4964  data_time: 0.0008  lr: 9.55e-05  max_mem: 252M
[12/27 00:36:28] fastreid.utils.events INFO:  eta: 0:09:30  epoch/iter: 15/399  total_loss: 57.51  loss_cls_b1: 6.2  loss_cls_b2: 6.218  loss_cls_b21: 6.233  loss_cls_b22: 6.187  loss_cls_b3: 6.194  loss_cls_b31: 6.233  loss_cls_b32: 6.184  loss_cls_b33: 6.208  loss_triplet_b1: 1.487  loss_triplet_b2: 1.434  loss_triplet_b3: 1.417  loss_triplet_b22: 1.655  loss_triplet_b33: 1.841  time: 0.4965  data_time: 0.0014  lr: 9.71e-05  max_mem: 252M
[12/27 00:36:37] fastreid.utils.events INFO:  eta: 0:09:23  epoch/iter: 15/415  total_loss: 57.57  loss_cls_b1: 6.199  loss_cls_b2: 6.221  loss_cls_b21: 6.241  loss_cls_b22: 6.174  loss_cls_b3: 6.189  loss_cls_b31: 6.232  loss_cls_b32: 6.195  loss_cls_b33: 6.217  loss_triplet_b1: 1.501  loss_triplet_b2: 1.462  loss_triplet_b3: 1.433  loss_triplet_b22: 1.69  loss_triplet_b33: 1.855  time: 0.4981  data_time: 0.0007  lr: 9.96e-05  max_mem: 252M
[12/27 00:36:51] fastreid.utils.events INFO:  eta: 0:09:12  epoch/iter: 16/441  total_loss: 57.8  loss_cls_b1: 6.206  loss_cls_b2: 6.222  loss_cls_b21: 6.229  loss_cls_b22: 6.187  loss_cls_b3: 6.192  loss_cls_b31: 6.226  loss_cls_b32: 6.19  loss_cls_b33: 6.226  loss_triplet_b1: 1.534  loss_triplet_b2: 1.507  loss_triplet_b3: 1.488  loss_triplet_b22: 1.726  loss_triplet_b33: 1.897  time: 0.5003  data_time: 0.0015  lr: 1.04e-04  max_mem: 252M
[12/27 00:37:04] fastreid.utils.events INFO:  eta: 0:09:02  epoch/iter: 17/467  total_loss: 57.8  loss_cls_b1: 6.194  loss_cls_b2: 6.221  loss_cls_b21: 6.224  loss_cls_b22: 6.191  loss_cls_b3: 6.188  loss_cls_b31: 6.222  loss_cls_b32: 6.195  loss_cls_b33: 6.214  loss_triplet_b1: 1.535  loss_triplet_b2: 1.518  loss_triplet_b3: 1.476  loss_triplet_b22: 1.726  loss_triplet_b33: 1.885  time: 0.5017  data_time: 0.0018  lr: 1.08e-04  max_mem: 252M
[12/27 00:37:18] fastreid.utils.events INFO:  eta: 0:08:53  epoch/iter: 18/493  total_loss: 57.99  loss_cls_b1: 6.183  loss_cls_b2: 6.217  loss_cls_b21: 6.233  loss_cls_b22: 6.194  loss_cls_b3: 6.191  loss_cls_b31: 6.218  loss_cls_b32: 6.201  loss_cls_b33: 6.226  loss_triplet_b1: 1.573  loss_triplet_b2: 1.552  loss_triplet_b3: 1.49  loss_triplet_b22: 1.756  loss_triplet_b33: 1.933  time: 0.5028  data_time: 0.0008  lr: 1.12e-04  max_mem: 252M
[12/27 00:37:30] fastreid.engine.defaults INFO: Prepare testing set
[12/27 00:37:30] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 374        | 1           |
| gallery  | 297     | 1655       | 1           |[0m
[12/27 00:37:30] fastreid.evaluation.evaluator INFO: Start inference on 2029 images
[12/27 00:37:35] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.2930 s / batch. ETA=0:00:01
[12/27 00:37:37] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:03.111666 (0.282879 s / batch per device, on 1 devices)
[12/27 00:37:37] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:03 (0.281395 s / batch per device, on 1 devices)
[12/27 00:37:37] fastreid.engine.defaults INFO: Evaluation results for WildSplit5 in csv format:
[12/27 00:37:37] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit5 | 65.55    | 74.51    | 77.59     | 37.63 | 6.90   | 51.59    |[0m
[12/27 00:37:37] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit5/mgn_R50-ibn/model_best.pth
[12/27 00:37:40] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit5/mgn_R50-ibn/model_0019.pth
[12/27 00:37:43] fastreid.utils.events INFO:  eta: 0:08:35  epoch/iter: 19/519  total_loss: 57.86  loss_cls_b1: 6.178  loss_cls_b2: 6.226  loss_cls_b21: 6.243  loss_cls_b22: 6.201  loss_cls_b3: 6.187  loss_cls_b31: 6.216  loss_cls_b32: 6.194  loss_cls_b33: 6.226  loss_triplet_b1: 1.561  loss_triplet_b2: 1.535  loss_triplet_b3: 1.48  loss_triplet_b22: 1.734  loss_triplet_b33: 1.911  time: 0.5003  data_time: 0.0009  lr: 1.16e-04  max_mem: 252M
[12/27 00:37:55] fastreid.utils.events INFO:  eta: 0:08:20  epoch/iter: 20/545  total_loss: 58.1  loss_cls_b1: 6.183  loss_cls_b2: 6.237  loss_cls_b21: 6.222  loss_cls_b22: 6.204  loss_cls_b3: 6.185  loss_cls_b31: 6.212  loss_cls_b32: 6.194  loss_cls_b33: 6.231  loss_triplet_b1: 1.58  loss_triplet_b2: 1.568  loss_triplet_b3: 1.538  loss_triplet_b22: 1.779  loss_triplet_b33: 1.946  time: 0.4983  data_time: 0.0007  lr: 1.20e-04  max_mem: 252M
[12/27 00:38:06] fastreid.utils.events INFO:  eta: 0:08:05  epoch/iter: 21/571  total_loss: 57.85  loss_cls_b1: 6.179  loss_cls_b2: 6.226  loss_cls_b21: 6.221  loss_cls_b22: 6.208  loss_cls_b3: 6.178  loss_cls_b31: 6.216  loss_cls_b32: 6.185  loss_cls_b33: 6.236  loss_triplet_b1: 1.576  loss_triplet_b2: 1.561  loss_triplet_b3: 1.526  loss_triplet_b22: 1.772  loss_triplet_b33: 1.942  time: 0.4947  data_time: 0.0009  lr: 1.24e-04  max_mem: 252M
[12/27 00:38:18] fastreid.utils.events INFO:  eta: 0:07:50  epoch/iter: 22/597  total_loss: 57.82  loss_cls_b1: 6.174  loss_cls_b2: 6.219  loss_cls_b21: 6.217  loss_cls_b22: 6.209  loss_cls_b3: 6.167  loss_cls_b31: 6.21  loss_cls_b32: 6.19  loss_cls_b33: 6.243  loss_triplet_b1: 1.564  loss_triplet_b2: 1.521  loss_triplet_b3: 1.52  loss_triplet_b22: 1.764  loss_triplet_b33: 1.929  time: 0.4921  data_time: 0.0008  lr: 1.28e-04  max_mem: 252M
[12/27 00:38:19] fastreid.utils.events INFO:  eta: 0:07:48  epoch/iter: 23/599  total_loss: 57.82  loss_cls_b1: 6.173  loss_cls_b2: 6.217  loss_cls_b21: 6.22  loss_cls_b22: 6.209  loss_cls_b3: 6.169  loss_cls_b31: 6.207  loss_cls_b32: 6.19  loss_cls_b33: 6.243  loss_triplet_b1: 1.57  loss_triplet_b2: 1.525  loss_triplet_b3: 1.538  loss_triplet_b22: 1.772  loss_triplet_b33: 1.94  time: 0.4920  data_time: 0.0008  lr: 1.29e-04  max_mem: 252M
[12/27 00:38:29] fastreid.utils.events INFO:  eta: 0:07:33  epoch/iter: 23/623  total_loss: 57.79  loss_cls_b1: 6.172  loss_cls_b2: 6.226  loss_cls_b21: 6.222  loss_cls_b22: 6.211  loss_cls_b3: 6.165  loss_cls_b31: 6.204  loss_cls_b32: 6.194  loss_cls_b33: 6.266  loss_triplet_b1: 1.559  loss_triplet_b2: 1.512  loss_triplet_b3: 1.5  loss_triplet_b22: 1.738  loss_triplet_b33: 1.908  time: 0.4893  data_time: 0.0013  lr: 1.32e-04  max_mem: 252M
[12/27 00:38:41] fastreid.utils.events INFO:  eta: 0:07:18  epoch/iter: 24/649  total_loss: 57.73  loss_cls_b1: 6.162  loss_cls_b2: 6.237  loss_cls_b21: 6.222  loss_cls_b22: 6.209  loss_cls_b3: 6.164  loss_cls_b31: 6.2  loss_cls_b32: 6.188  loss_cls_b33: 6.265  loss_triplet_b1: 1.558  loss_triplet_b2: 1.505  loss_triplet_b3: 1.48  loss_triplet_b22: 1.717  loss_triplet_b33: 1.889  time: 0.4876  data_time: 0.0011  lr: 1.36e-04  max_mem: 252M
[12/27 00:38:51] fastreid.utils.events INFO:  eta: 0:07:03  epoch/iter: 25/675  total_loss: 57.75  loss_cls_b1: 6.173  loss_cls_b2: 6.235  loss_cls_b21: 6.214  loss_cls_b22: 6.205  loss_cls_b3: 6.159  loss_cls_b31: 6.197  loss_cls_b32: 6.188  loss_cls_b33: 6.265  loss_triplet_b1: 1.558  loss_triplet_b2: 1.508  loss_triplet_b3: 1.479  loss_triplet_b22: 1.718  loss_triplet_b33: 1.893  time: 0.4838  data_time: 0.0020  lr: 1.41e-04  max_mem: 252M
[12/27 00:39:02] fastreid.utils.events INFO:  eta: 0:06:48  epoch/iter: 26/701  total_loss: 57.69  loss_cls_b1: 6.181  loss_cls_b2: 6.245  loss_cls_b21: 6.2  loss_cls_b22: 6.209  loss_cls_b3: 6.165  loss_cls_b31: 6.19  loss_cls_b32: 6.193  loss_cls_b33: 6.242  loss_triplet_b1: 1.521  loss_triplet_b2: 1.492  loss_triplet_b3: 1.462  loss_triplet_b22: 1.689  loss_triplet_b33: 1.851  time: 0.4809  data_time: 0.0006  lr: 1.45e-04  max_mem: 252M
[12/27 00:39:12] fastreid.utils.events INFO:  eta: 0:06:33  epoch/iter: 27/727  total_loss: 57.73  loss_cls_b1: 6.181  loss_cls_b2: 6.233  loss_cls_b21: 6.213  loss_cls_b22: 6.21  loss_cls_b3: 6.168  loss_cls_b31: 6.186  loss_cls_b32: 6.193  loss_cls_b33: 6.249  loss_triplet_b1: 1.545  loss_triplet_b2: 1.496  loss_triplet_b3: 1.466  loss_triplet_b22: 1.705  loss_triplet_b33: 1.851  time: 0.4781  data_time: 0.0010  lr: 1.49e-04  max_mem: 252M
[12/27 00:39:23] fastreid.utils.events INFO:  eta: 0:06:19  epoch/iter: 28/753  total_loss: 57.73  loss_cls_b1: 6.196  loss_cls_b2: 6.215  loss_cls_b21: 6.22  loss_cls_b22: 6.176  loss_cls_b3: 6.187  loss_cls_b31: 6.171  loss_cls_b32: 6.193  loss_cls_b33: 6.23  loss_triplet_b1: 1.521  loss_triplet_b2: 1.491  loss_triplet_b3: 1.471  loss_triplet_b22: 1.689  loss_triplet_b33: 1.847  time: 0.4759  data_time: 0.0011  lr: 1.53e-04  max_mem: 252M
[12/27 00:39:35] fastreid.engine.defaults INFO: Prepare testing set
[12/27 00:39:35] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 374        | 1           |
| gallery  | 297     | 1655       | 1           |[0m
[12/27 00:39:35] fastreid.evaluation.evaluator INFO: Start inference on 2029 images
[12/27 00:39:40] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.3138 s / batch. ETA=0:00:01
[12/27 00:39:41] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:03.223036 (0.293003 s / batch per device, on 1 devices)
[12/27 00:39:41] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:03 (0.290940 s / batch per device, on 1 devices)
[12/27 00:39:42] fastreid.engine.defaults INFO: Evaluation results for WildSplit5 in csv format:
[12/27 00:39:42] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit5 | 66.11    | 73.67    | 77.59     | 37.31 | 6.94   | 51.71    |[0m
[12/27 00:39:42] fastreid.utils.events INFO:  eta: 0:06:05  epoch/iter: 29/779  total_loss: 57.77  loss_cls_b1: 6.214  loss_cls_b2: 6.238  loss_cls_b21: 6.213  loss_cls_b22: 6.18  loss_cls_b3: 6.179  loss_cls_b31: 6.168  loss_cls_b32: 6.195  loss_cls_b33: 6.234  loss_triplet_b1: 1.545  loss_triplet_b2: 1.501  loss_triplet_b3: 1.484  loss_triplet_b22: 1.689  loss_triplet_b33: 1.85  time: 0.4744  data_time: 0.0010  lr: 1.57e-04  max_mem: 252M
[12/27 00:39:51] fastreid.utils.events INFO:  eta: 0:05:54  epoch/iter: 30/799  total_loss: 57.89  loss_cls_b1: 6.226  loss_cls_b2: 6.243  loss_cls_b21: 6.219  loss_cls_b22: 6.169  loss_cls_b3: 6.202  loss_cls_b31: 6.164  loss_cls_b32: 6.193  loss_cls_b33: 6.227  loss_triplet_b1: 1.558  loss_triplet_b2: 1.517  loss_triplet_b3: 1.499  loss_triplet_b22: 1.711  loss_triplet_b33: 1.902  time: 0.4730  data_time: 0.0006  lr: 1.60e-04  max_mem: 252M
[12/27 00:39:53] fastreid.utils.events INFO:  eta: 0:05:51  epoch/iter: 30/805  total_loss: 57.82  loss_cls_b1: 6.219  loss_cls_b2: 6.229  loss_cls_b21: 6.217  loss_cls_b22: 6.169  loss_cls_b3: 6.206  loss_cls_b31: 6.165  loss_cls_b32: 6.188  loss_cls_b33: 6.227  loss_triplet_b1: 1.552  loss_triplet_b2: 1.513  loss_triplet_b3: 1.487  loss_triplet_b22: 1.693  loss_triplet_b33: 1.89  time: 0.4729  data_time: 0.0005  lr: 1.61e-04  max_mem: 252M
[12/27 00:40:05] fastreid.utils.events INFO:  eta: 0:05:36  epoch/iter: 31/831  total_loss: 57.71  loss_cls_b1: 6.221  loss_cls_b2: 6.254  loss_cls_b21: 6.205  loss_cls_b22: 6.172  loss_cls_b3: 6.211  loss_cls_b31: 6.173  loss_cls_b32: 6.171  loss_cls_b33: 6.219  loss_triplet_b1: 1.51  loss_triplet_b2: 1.501  loss_triplet_b3: 1.477  loss_triplet_b22: 1.689  loss_triplet_b33: 1.843  time: 0.4715  data_time: 0.0007  lr: 1.65e-04  max_mem: 252M
[12/27 00:40:16] fastreid.utils.events INFO:  eta: 0:05:20  epoch/iter: 32/857  total_loss: 57.67  loss_cls_b1: 6.217  loss_cls_b2: 6.253  loss_cls_b21: 6.205  loss_cls_b22: 6.179  loss_cls_b3: 6.215  loss_cls_b31: 6.162  loss_cls_b32: 6.172  loss_cls_b33: 6.204  loss_triplet_b1: 1.523  loss_triplet_b2: 1.503  loss_triplet_b3: 1.477  loss_triplet_b22: 1.705  loss_triplet_b33: 1.871  time: 0.4700  data_time: 0.0008  lr: 1.69e-04  max_mem: 252M
[12/27 00:40:27] fastreid.utils.events INFO:  eta: 0:05:06  epoch/iter: 33/883  total_loss: 57.79  loss_cls_b1: 6.202  loss_cls_b2: 6.253  loss_cls_b21: 6.221  loss_cls_b22: 6.18  loss_cls_b3: 6.219  loss_cls_b31: 6.185  loss_cls_b32: 6.168  loss_cls_b33: 6.211  loss_triplet_b1: 1.51  loss_triplet_b2: 1.503  loss_triplet_b3: 1.479  loss_triplet_b22: 1.707  loss_triplet_b33: 1.878  time: 0.4689  data_time: 0.0013  lr: 1.73e-04  max_mem: 252M
[12/27 00:40:39] fastreid.utils.events INFO:  eta: 0:04:54  epoch/iter: 34/909  total_loss: 57.85  loss_cls_b1: 6.209  loss_cls_b2: 6.232  loss_cls_b21: 6.209  loss_cls_b22: 6.181  loss_cls_b3: 6.218  loss_cls_b31: 6.208  loss_cls_b32: 6.166  loss_cls_b33: 6.222  loss_triplet_b1: 1.523  loss_triplet_b2: 1.52  loss_triplet_b3: 1.489  loss_triplet_b22: 1.717  loss_triplet_b33: 1.907  time: 0.4681  data_time: 0.0007  lr: 1.77e-04  max_mem: 252M
[12/27 00:40:50] fastreid.utils.events INFO:  eta: 0:04:41  epoch/iter: 35/935  total_loss: 57.83  loss_cls_b1: 6.188  loss_cls_b2: 6.235  loss_cls_b21: 6.205  loss_cls_b22: 6.196  loss_cls_b3: 6.221  loss_cls_b31: 6.213  loss_cls_b32: 6.168  loss_cls_b33: 6.222  loss_triplet_b1: 1.519  loss_triplet_b2: 1.513  loss_triplet_b3: 1.483  loss_triplet_b22: 1.704  loss_triplet_b33: 1.887  time: 0.4672  data_time: 0.0016  lr: 1.81e-04  max_mem: 252M
[12/27 00:41:01] fastreid.utils.events INFO:  eta: 0:04:28  epoch/iter: 36/961  total_loss: 57.75  loss_cls_b1: 6.193  loss_cls_b2: 6.225  loss_cls_b21: 6.203  loss_cls_b22: 6.198  loss_cls_b3: 6.209  loss_cls_b31: 6.217  loss_cls_b32: 6.159  loss_cls_b33: 6.214  loss_triplet_b1: 1.519  loss_triplet_b2: 1.495  loss_triplet_b3: 1.469  loss_triplet_b22: 1.693  loss_triplet_b33: 1.863  time: 0.4661  data_time: 0.0008  lr: 1.86e-04  max_mem: 252M
[12/27 00:41:12] fastreid.utils.events INFO:  eta: 0:04:15  epoch/iter: 37/987  total_loss: 57.85  loss_cls_b1: 6.19  loss_cls_b2: 6.227  loss_cls_b21: 6.203  loss_cls_b22: 6.206  loss_cls_b3: 6.204  loss_cls_b31: 6.224  loss_cls_b32: 6.164  loss_cls_b33: 6.216  loss_triplet_b1: 1.523  loss_triplet_b2: 1.513  loss_triplet_b3: 1.479  loss_triplet_b22: 1.707  loss_triplet_b33: 1.883  time: 0.4648  data_time: 0.0006  lr: 1.90e-04  max_mem: 252M
[12/27 00:41:17] fastreid.utils.events INFO:  eta: 0:04:09  epoch/iter: 38/999  total_loss: 57.77  loss_cls_b1: 6.188  loss_cls_b2: 6.229  loss_cls_b21: 6.202  loss_cls_b22: 6.213  loss_cls_b3: 6.204  loss_cls_b31: 6.223  loss_cls_b32: 6.165  loss_cls_b33: 6.225  loss_triplet_b1: 1.517  loss_triplet_b2: 1.482  loss_triplet_b3: 1.469  loss_triplet_b22: 1.689  loss_triplet_b33: 1.858  time: 0.4640  data_time: 0.0006  lr: 1.92e-04  max_mem: 252M
[12/27 00:41:17] fastreid.engine.hooks INFO: Open layer group "backbone, b1, b2, b3" training
[12/27 00:41:23] fastreid.utils.events INFO:  eta: 0:04:03  epoch/iter: 38/1013  total_loss: 57.75  loss_cls_b1: 6.185  loss_cls_b2: 6.228  loss_cls_b21: 6.204  loss_cls_b22: 6.219  loss_cls_b3: 6.204  loss_cls_b31: 6.225  loss_cls_b32: 6.165  loss_cls_b33: 6.223  loss_triplet_b1: 1.516  loss_triplet_b2: 1.478  loss_triplet_b3: 1.459  loss_triplet_b22: 1.689  loss_triplet_b33: 1.841  time: 0.4634  data_time: 0.0003  lr: 1.94e-04  max_mem: 252M
[12/27 00:41:34] fastreid.engine.defaults INFO: Prepare testing set
[12/27 00:41:34] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 374        | 1           |
| gallery  | 297     | 1655       | 1           |[0m
[12/27 00:41:34] fastreid.evaluation.evaluator INFO: Start inference on 2029 images
[12/27 00:41:40] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.3016 s / batch. ETA=0:00:01
[12/27 00:41:41] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:03.157816 (0.287074 s / batch per device, on 1 devices)
[12/27 00:41:41] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:03 (0.285363 s / batch per device, on 1 devices)
[12/27 00:41:42] fastreid.engine.defaults INFO: Evaluation results for WildSplit5 in csv format:
[12/27 00:41:42] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit5 | 72.83    | 81.51    | 85.43     | 58.19 | 13.12  | 65.51    |[0m
[12/27 00:41:42] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit5/mgn_R50-ibn/model_best.pth
[12/27 00:41:50] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit5/mgn_R50-ibn/model_0039.pth
[12/27 00:41:58] fastreid.utils.events INFO:  eta: 0:03:51  epoch/iter: 39/1039  total_loss: 57.52  loss_cls_b1: 6.166  loss_cls_b2: 6.204  loss_cls_b21: 6.187  loss_cls_b22: 6.194  loss_cls_b3: 6.169  loss_cls_b31: 6.218  loss_cls_b32: 6.161  loss_cls_b33: 6.209  loss_triplet_b1: 1.474  loss_triplet_b2: 1.443  loss_triplet_b3: 1.421  loss_triplet_b22: 1.626  loss_triplet_b33: 1.784  time: 0.4625  data_time: 0.0013  lr: 1.98e-04  max_mem: 252M
[12/27 00:42:10] fastreid.utils.events INFO:  eta: 0:03:39  epoch/iter: 40/1065  total_loss: 57.06  loss_cls_b1: 6.12  loss_cls_b2: 6.161  loss_cls_b21: 6.139  loss_cls_b22: 6.147  loss_cls_b3: 6.125  loss_cls_b31: 6.197  loss_cls_b32: 6.137  loss_cls_b33: 6.163  loss_triplet_b1: 1.403  loss_triplet_b2: 1.373  loss_triplet_b3: 1.359  loss_triplet_b22: 1.547  loss_triplet_b33: 1.662  time: 0.4619  data_time: 0.0009  lr: 2.02e-04  max_mem: 252M
[12/27 00:42:21] fastreid.utils.events INFO:  eta: 0:03:27  epoch/iter: 41/1091  total_loss: 56.11  loss_cls_b1: 6.08  loss_cls_b2: 6.106  loss_cls_b21: 6.071  loss_cls_b22: 6.106  loss_cls_b3: 6.073  loss_cls_b31: 6.125  loss_cls_b32: 6.084  loss_cls_b33: 6.126  loss_triplet_b1: 1.271  loss_triplet_b2: 1.217  loss_triplet_b3: 1.232  loss_triplet_b22: 1.406  loss_triplet_b33: 1.489  time: 0.4607  data_time: 0.0012  lr: 2.06e-04  max_mem: 252M
[12/27 00:42:32] fastreid.utils.events INFO:  eta: 0:03:14  epoch/iter: 42/1117  total_loss: 53.06  loss_cls_b1: 6.004  loss_cls_b2: 6.009  loss_cls_b21: 5.993  loss_cls_b22: 6.023  loss_cls_b3: 5.97  loss_cls_b31: 6  loss_cls_b32: 5.993  loss_cls_b33: 6.007  loss_triplet_b1: 0.8832  loss_triplet_b2: 0.8779  loss_triplet_b3: 0.9076  loss_triplet_b22: 0.982  loss_triplet_b33: 1.009  time: 0.4594  data_time: 0.0009  lr: 2.10e-04  max_mem: 252M
[12/27 00:42:43] fastreid.utils.events INFO:  eta: 0:03:03  epoch/iter: 43/1143  total_loss: 48.01  loss_cls_b1: 5.507  loss_cls_b2: 5.645  loss_cls_b21: 5.554  loss_cls_b22: 5.811  loss_cls_b3: 5.719  loss_cls_b31: 5.566  loss_cls_b32: 5.592  loss_cls_b33: 5.741  loss_triplet_b1: 0.6885  loss_triplet_b2: 0.6753  loss_triplet_b3: 0.6767  loss_triplet_b22: 0.7279  loss_triplet_b33: 0.7997  time: 0.4588  data_time: 0.0012  lr: 2.14e-04  max_mem: 252M
[12/27 00:42:55] fastreid.utils.events INFO:  eta: 0:02:51  epoch/iter: 44/1169  total_loss: 43.72  loss_cls_b1: 4.887  loss_cls_b2: 5.232  loss_cls_b21: 5.018  loss_cls_b22: 5.117  loss_cls_b3: 5.097  loss_cls_b31: 5.148  loss_cls_b32: 5.225  loss_cls_b33: 5.191  loss_triplet_b1: 0.5391  loss_triplet_b2: 0.5415  loss_triplet_b3: 0.5538  loss_triplet_b22: 0.5671  loss_triplet_b33: 0.639  time: 0.4586  data_time: 0.0006  lr: 2.18e-04  max_mem: 252M
[12/27 00:43:06] fastreid.utils.events INFO:  eta: 0:02:38  epoch/iter: 45/1195  total_loss: 38.61  loss_cls_b1: 4.187  loss_cls_b2: 4.483  loss_cls_b21: 4.474  loss_cls_b22: 4.614  loss_cls_b3: 4.567  loss_cls_b31: 4.539  loss_cls_b32: 4.575  loss_cls_b33: 4.526  loss_triplet_b1: 0.4518  loss_triplet_b2: 0.4632  loss_triplet_b3: 0.4573  loss_triplet_b22: 0.4835  loss_triplet_b33: 0.5185  time: 0.4580  data_time: 0.0017  lr: 2.22e-04  max_mem: 252M
[12/27 00:43:08] fastreid.utils.events INFO:  eta: 0:02:36  epoch/iter: 46/1199  total_loss: 37.94  loss_cls_b1: 4.163  loss_cls_b2: 4.438  loss_cls_b21: 4.397  loss_cls_b22: 4.544  loss_cls_b3: 4.541  loss_cls_b31: 4.494  loss_cls_b32: 4.528  loss_cls_b33: 4.505  loss_triplet_b1: 0.4411  loss_triplet_b2: 0.4541  loss_triplet_b3: 0.443  loss_triplet_b22: 0.4755  loss_triplet_b33: 0.5  time: 0.4577  data_time: 0.0017  lr: 2.23e-04  max_mem: 252M
[12/27 00:43:17] fastreid.utils.events INFO:  eta: 0:02:26  epoch/iter: 46/1221  total_loss: 34.05  loss_cls_b1: 3.655  loss_cls_b2: 4.022  loss_cls_b21: 3.975  loss_cls_b22: 4.081  loss_cls_b3: 4.043  loss_cls_b31: 4.082  loss_cls_b32: 4.121  loss_cls_b33: 4.187  loss_triplet_b1: 0.3749  loss_triplet_b2: 0.3955  loss_triplet_b3: 0.3876  loss_triplet_b22: 0.4027  loss_triplet_b33: 0.4383  time: 0.4567  data_time: 0.0017  lr: 2.27e-04  max_mem: 252M
[12/27 00:43:27] fastreid.utils.events INFO:  eta: 0:02:14  epoch/iter: 47/1247  total_loss: 31.27  loss_cls_b1: 3.267  loss_cls_b2: 3.528  loss_cls_b21: 3.596  loss_cls_b22: 3.652  loss_cls_b3: 3.632  loss_cls_b31: 3.636  loss_cls_b32: 3.781  loss_cls_b33: 3.752  loss_triplet_b1: 0.3233  loss_triplet_b2: 0.3323  loss_triplet_b3: 0.3219  loss_triplet_b22: 0.3404  loss_triplet_b33: 0.3616  time: 0.4558  data_time: 0.0006  lr: 2.31e-04  max_mem: 252M
[12/27 00:43:39] fastreid.utils.events INFO:  eta: 0:02:03  epoch/iter: 48/1273  total_loss: 27.16  loss_cls_b1: 2.88  loss_cls_b2: 3.147  loss_cls_b21: 3.139  loss_cls_b22: 3.286  loss_cls_b3: 3.217  loss_cls_b31: 3.283  loss_cls_b32: 3.285  loss_cls_b33: 3.372  loss_triplet_b1: 0.264  loss_triplet_b2: 0.2813  loss_triplet_b3: 0.284  loss_triplet_b22: 0.2728  loss_triplet_b33: 0.3097  time: 0.4555  data_time: 0.0026  lr: 2.35e-04  max_mem: 252M
[12/27 00:43:50] fastreid.engine.defaults INFO: Prepare testing set
[12/27 00:43:50] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 374        | 1           |
| gallery  | 297     | 1655       | 1           |[0m
[12/27 00:43:50] fastreid.evaluation.evaluator INFO: Start inference on 2029 images
[12/27 00:43:56] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.3036 s / batch. ETA=0:00:01
[12/27 00:43:57] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:03.173218 (0.288474 s / batch per device, on 1 devices)
[12/27 00:43:57] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:03 (0.286486 s / batch per device, on 1 devices)
[12/27 00:43:58] fastreid.engine.defaults INFO: Evaluation results for WildSplit5 in csv format:
[12/27 00:43:58] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit5 | 81.23    | 86.83    | 89.36     | 72.91 | 27.43  | 77.07    |[0m
[12/27 00:43:58] fastreid.utils.events INFO:  eta: 0:01:51  epoch/iter: 49/1299  total_loss: 24.4  loss_cls_b1: 2.621  loss_cls_b2: 2.854  loss_cls_b21: 2.857  loss_cls_b22: 3.029  loss_cls_b3: 2.916  loss_cls_b31: 3.008  loss_cls_b32: 3.086  loss_cls_b33: 3.059  loss_triplet_b1: 0.2201  loss_triplet_b2: 0.2281  loss_triplet_b3: 0.2404  loss_triplet_b22: 0.2203  loss_triplet_b33: 0.2566  time: 0.4549  data_time: 0.0006  lr: 2.39e-04  max_mem: 252M
[12/27 00:44:09] fastreid.utils.events INFO:  eta: 0:01:39  epoch/iter: 50/1325  total_loss: 22.75  loss_cls_b1: 2.305  loss_cls_b2: 2.632  loss_cls_b21: 2.656  loss_cls_b22: 2.82  loss_cls_b3: 2.613  loss_cls_b31: 2.796  loss_cls_b32: 2.87  loss_cls_b33: 2.793  loss_triplet_b1: 0.1919  loss_triplet_b2: 0.1947  loss_triplet_b3: 0.2142  loss_triplet_b22: 0.1933  loss_triplet_b33: 0.2112  time: 0.4545  data_time: 0.0006  lr: 2.43e-04  max_mem: 252M
[12/27 00:44:20] fastreid.utils.events INFO:  eta: 0:01:28  epoch/iter: 51/1351  total_loss: 20.62  loss_cls_b1: 2.115  loss_cls_b2: 2.331  loss_cls_b21: 2.395  loss_cls_b22: 2.444  loss_cls_b3: 2.401  loss_cls_b31: 2.586  loss_cls_b32: 2.626  loss_cls_b33: 2.562  loss_triplet_b1: 0.1742  loss_triplet_b2: 0.1592  loss_triplet_b3: 0.1933  loss_triplet_b22: 0.1708  loss_triplet_b33: 0.1828  time: 0.4539  data_time: 0.0010  lr: 2.47e-04  max_mem: 252M
[12/27 00:44:32] fastreid.utils.events INFO:  eta: 0:01:17  epoch/iter: 52/1377  total_loss: 19.42  loss_cls_b1: 1.987  loss_cls_b2: 2.153  loss_cls_b21: 2.312  loss_cls_b22: 2.322  loss_cls_b3: 2.216  loss_cls_b31: 2.368  loss_cls_b32: 2.472  loss_cls_b33: 2.415  loss_triplet_b1: 0.1569  loss_triplet_b2: 0.1477  loss_triplet_b3: 0.1704  loss_triplet_b22: 0.1492  loss_triplet_b33: 0.1709  time: 0.4533  data_time: 0.0004  lr: 2.51e-04  max_mem: 252M
[12/27 00:44:41] fastreid.utils.events INFO:  eta: 0:01:07  epoch/iter: 53/1399  total_loss: 17.59  loss_cls_b1: 1.709  loss_cls_b2: 1.96  loss_cls_b21: 2.087  loss_cls_b22: 2.154  loss_cls_b3: 2.023  loss_cls_b31: 2.215  loss_cls_b32: 2.292  loss_cls_b33: 2.21  loss_triplet_b1: 0.1306  loss_triplet_b2: 0.1349  loss_triplet_b3: 0.1376  loss_triplet_b22: 0.132  loss_triplet_b33: 0.1388  time: 0.4531  data_time: 0.0007  lr: 2.55e-04  max_mem: 252M
[12/27 00:44:43] fastreid.utils.events INFO:  eta: 0:01:06  epoch/iter: 53/1403  total_loss: 16.9  loss_cls_b1: 1.655  loss_cls_b2: 1.924  loss_cls_b21: 2.052  loss_cls_b22: 2.114  loss_cls_b3: 1.974  loss_cls_b31: 2.183  loss_cls_b32: 2.253  loss_cls_b33: 2.143  loss_triplet_b1: 0.1229  loss_triplet_b2: 0.1235  loss_triplet_b3: 0.1274  loss_triplet_b22: 0.1278  loss_triplet_b33: 0.1318  time: 0.4533  data_time: 0.0007  lr: 2.55e-04  max_mem: 252M
[12/27 00:44:55] fastreid.utils.events INFO:  eta: 0:00:55  epoch/iter: 54/1429  total_loss: 15.34  loss_cls_b1: 1.551  loss_cls_b2: 1.749  loss_cls_b21: 1.892  loss_cls_b22: 1.93  loss_cls_b3: 1.771  loss_cls_b31: 1.934  loss_cls_b32: 2.055  loss_cls_b33: 2.068  loss_triplet_b1: 0.09782  loss_triplet_b2: 0.1057  loss_triplet_b3: 0.1072  loss_triplet_b22: 0.09794  loss_triplet_b33: 0.09816  time: 0.4529  data_time: 0.0005  lr: 2.59e-04  max_mem: 252M
[12/27 00:45:06] fastreid.utils.events INFO:  eta: 0:00:43  epoch/iter: 55/1455  total_loss: 14.34  loss_cls_b1: 1.382  loss_cls_b2: 1.594  loss_cls_b21: 1.735  loss_cls_b22: 1.823  loss_cls_b3: 1.615  loss_cls_b31: 1.786  loss_cls_b32: 1.917  loss_cls_b33: 1.948  loss_triplet_b1: 0.08411  loss_triplet_b2: 0.07628  loss_triplet_b3: 0.08961  loss_triplet_b22: 0.07614  loss_triplet_b33: 0.08618  time: 0.4524  data_time: 0.0007  lr: 2.63e-04  max_mem: 252M
[12/27 00:45:17] fastreid.utils.events INFO:  eta: 0:00:32  epoch/iter: 56/1481  total_loss: 13.2  loss_cls_b1: 1.303  loss_cls_b2: 1.467  loss_cls_b21: 1.595  loss_cls_b22: 1.711  loss_cls_b3: 1.499  loss_cls_b31: 1.685  loss_cls_b32: 1.79  loss_cls_b33: 1.805  loss_triplet_b1: 0.06767  loss_triplet_b2: 0.0701  loss_triplet_b3: 0.07586  loss_triplet_b22: 0.05982  loss_triplet_b33: 0.07453  time: 0.4520  data_time: 0.0015  lr: 2.67e-04  max_mem: 252M
[12/27 00:45:28] fastreid.utils.events INFO:  eta: 0:00:21  epoch/iter: 57/1507  total_loss: 12.72  loss_cls_b1: 1.256  loss_cls_b2: 1.36  loss_cls_b21: 1.555  loss_cls_b22: 1.647  loss_cls_b3: 1.415  loss_cls_b31: 1.656  loss_cls_b32: 1.747  loss_cls_b33: 1.759  loss_triplet_b1: 0.06363  loss_triplet_b2: 0.06937  loss_triplet_b3: 0.07338  loss_triplet_b22: 0.05783  loss_triplet_b33: 0.06759  time: 0.4515  data_time: 0.0011  lr: 2.72e-04  max_mem: 252M
[12/27 00:45:40] fastreid.utils.events INFO:  eta: 0:00:10  epoch/iter: 58/1533  total_loss: 11.92  loss_cls_b1: 1.171  loss_cls_b2: 1.304  loss_cls_b21: 1.44  loss_cls_b22: 1.505  loss_cls_b3: 1.323  loss_cls_b31: 1.567  loss_cls_b32: 1.662  loss_cls_b33: 1.628  loss_triplet_b1: 0.0562  loss_triplet_b2: 0.06369  loss_triplet_b3: 0.06937  loss_triplet_b22: 0.05509  loss_triplet_b33: 0.0585  time: 0.4511  data_time: 0.0009  lr: 2.76e-04  max_mem: 252M
[12/27 00:45:51] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/1559  total_loss: 11.26  loss_cls_b1: 1.047  loss_cls_b2: 1.243  loss_cls_b21: 1.38  loss_cls_b22: 1.402  loss_cls_b3: 1.249  loss_cls_b31: 1.492  loss_cls_b32: 1.604  loss_cls_b33: 1.538  loss_triplet_b1: 0.0498  loss_triplet_b2: 0.05614  loss_triplet_b3: 0.0578  loss_triplet_b22: 0.04657  loss_triplet_b33: 0.047  time: 0.4507  data_time: 0.0009  lr: 2.80e-04  max_mem: 252M
[12/27 00:45:51] fastreid.engine.defaults INFO: Prepare testing set
[12/27 00:45:51] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 374        | 1           |
| gallery  | 297     | 1655       | 1           |[0m
[12/27 00:45:51] fastreid.evaluation.evaluator INFO: Start inference on 2029 images
[12/27 00:45:56] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.2873 s / batch. ETA=0:00:01
[12/27 00:45:58] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:03.108867 (0.282624 s / batch per device, on 1 devices)
[12/27 00:45:58] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:03 (0.281171 s / batch per device, on 1 devices)
[12/27 00:45:58] fastreid.engine.defaults INFO: Evaluation results for WildSplit5 in csv format:
[12/27 00:45:58] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit5 | 81.23    | 86.83    | 89.92     | 75.97 | 31.36  | 78.60    |[0m
[12/27 00:45:59] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit5/mgn_R50-ibn/model_best.pth
[12/27 00:46:07] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit5/mgn_R50-ibn/model_final.pth
[12/27 00:46:15] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/1559  total_loss: 11.26  loss_cls_b1: 1.047  loss_cls_b2: 1.243  loss_cls_b21: 1.38  loss_cls_b22: 1.402  loss_cls_b3: 1.249  loss_cls_b31: 1.492  loss_cls_b32: 1.604  loss_cls_b33: 1.538  loss_triplet_b1: 0.0498  loss_triplet_b2: 0.05614  loss_triplet_b3: 0.0578  loss_triplet_b22: 0.04657  loss_triplet_b33: 0.047  time: 0.4507  data_time: 0.0009  lr: 2.80e-04  max_mem: 252M
[12/27 00:46:15] fastreid.engine.hooks INFO: Overall training speed: 1558 iterations in 0:11:42 (0.4507 s / it)
[12/27 00:46:15] fastreid.engine.hooks INFO: Total training time: 0:13:17 (0:01:35 on hooks)
[07/09 13:11:25] fastreid INFO: Rank of current process: 0. World size: 1
[07/09 13:11:25] fastreid INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.19 (default, Mar 20 2024, 19:58:24) [GCC 11.2.0]
numpy                   1.24.3
fastreid                1.3 @/home/zhourui/hyf_lpl_multicamera/codes/./fastreid
FASTREID_ENV_MODULE     <not set>
PyTorch                 1.11.0 @/opt/anaconda3/envs/multicamera/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1,2,3             NVIDIA GeForce GTX 1080 Ti
CUDA_HOME               :/usr/local/cuda-10.2
Pillow                  10.3.0
torchvision             0.12.0 @/opt/anaconda3/envs/multicamera/lib/python3.8/site-packages/torchvision
torchvision arch flags  /opt/anaconda3/envs/multicamera/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
----------------------  ----------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[07/09 13:11:25] fastreid INFO: Command line arguments: Namespace(config_file='./configs/WildSplit5/mgn_R50-ibn.yml', dist_url='tcp://127.0.0.1:50154', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[07/09 13:11:25] fastreid INFO: Contents of args.config_file=./configs/WildSplit5/mgn_R50-ibn.yml:
_BASE_: ../Base-MGN.yml

MODEL:
  BACKBONE:
    WITH_IBN: True

DATASETS:
  NAMES: ("WildSplit5",)
  TESTS: ("WildSplit5",)

OUTPUT_DIR: logs/wildsplit5/mgn_R50-ibn

[07/09 13:11:25] fastreid INFO: Running with full config:
CUDNN_BENCHMARK: True
DATALOADER:
  NUM_INSTANCE: 16
  NUM_WORKERS: 8
  SAMPLER_TRAIN: NaiveIdentitySampler
  SET_WEIGHT: []
DATASETS:
  COMBINEALL: False
  NAMES: ('WildSplit5',)
  TESTS: ('WildSplit5',)
INPUT:
  AFFINE:
    ENABLED: False
  AUGMIX:
    ENABLED: False
    PROB: 0.0
  AUTOAUG:
    ENABLED: True
    PROB: 0.1
  CJ:
    BRIGHTNESS: 0.15
    CONTRAST: 0.15
    ENABLED: False
    HUE: 0.1
    PROB: 0.5
    SATURATION: 0.1
  CROP:
    ENABLED: False
    RATIO: [0.75, 1.3333333333333333]
    SCALE: [0.16, 1]
    SIZE: [224, 224]
  FLIP:
    ENABLED: True
    PROB: 0.5
  PADDING:
    ENABLED: True
    MODE: constant
    SIZE: 10
  REA:
    ENABLED: True
    PROB: 0.5
    VALUE: [123.675, 116.28, 103.53]
  RPT:
    ENABLED: False
    PROB: 0.5
  SIZE_TEST: [384, 128]
  SIZE_TRAIN: [384, 128]
KD:
  EMA:
    ENABLED: False
    MOMENTUM: 0.999
  MODEL_CONFIG: []
  MODEL_WEIGHTS: []
MODEL:
  BACKBONE:
    ATT_DROP_RATE: 0.0
    DEPTH: 50x
    DROP_PATH_RATIO: 0.1
    DROP_RATIO: 0.0
    FEAT_DIM: 2048
    LAST_STRIDE: 1
    NAME: build_resnet_backbone
    NORM: BN
    PRETRAIN: True
    PRETRAIN_PATH: 
    SIE_COE: 3.0
    STRIDE_SIZE: (16, 16)
    WITH_IBN: True
    WITH_NL: False
    WITH_SE: False
  DEVICE: cuda:1
  FREEZE_LAYERS: ['backbone', 'b1', 'b2', 'b3']
  HEADS:
    CLS_LAYER: CircleSoftmax
    EMBEDDING_DIM: 256
    MARGIN: 0.35
    NAME: EmbeddingHead
    NECK_FEAT: after
    NORM: BN
    NUM_CLASSES: 0
    POOL_LAYER: GeneralizedMeanPoolingP
    SCALE: 64
    WITH_BNNECK: True
  LOSSES:
    CE:
      ALPHA: 0.2
      EPSILON: 0.1
      SCALE: 1.0
    CIRCLE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    COSFACE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    FL:
      ALPHA: 0.25
      GAMMA: 2
      SCALE: 1.0
    NAME: ('CrossEntropyLoss', 'TripletLoss')
    TRI:
      HARD_MINING: True
      MARGIN: 0.0
      NORM_FEAT: False
      SCALE: 1.0
  META_ARCHITECTURE: MGN
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.120000000000005, 57.375]
  QUEUE_SIZE: 8192
  WEIGHTS: 
OUTPUT_DIR: logs/wildsplit5/mgn_R50-ibn
SOLVER:
  AMP:
    ENABLED: True
  BASE_LR: 0.00035
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 20
  CLIP_GRADIENTS:
    CLIP_TYPE: norm
    CLIP_VALUE: 5.0
    ENABLED: False
    NORM_TYPE: 2.0
  DELAY_EPOCHS: 30
  ETA_MIN_LR: 7e-07
  FREEZE_ITERS: 1000
  GAMMA: 0.1
  HEADS_LR_FACTOR: 1.0
  IMS_PER_BATCH: 64
  MAX_EPOCH: 60
  MOMENTUM: 0.9
  NESTEROV: False
  OPT: Adam
  SCHED: CosineAnnealingLR
  STEPS: [40, 90]
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 2000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0005
  WEIGHT_DECAY_BIAS: 0.0005
  WEIGHT_DECAY_NORM: 0.0005
TEST:
  AQE:
    ALPHA: 3.0
    ENABLED: False
    QE_K: 5
    QE_TIME: 1
  EVAL_PERIOD: 10
  FLIP:
    ENABLED: False
  IMS_PER_BATCH: 128
  METRIC: cosine
  PRECISE_BN:
    DATASET: Market1501
    ENABLED: False
    NUM_ITER: 300
  RERANK:
    ENABLED: False
    K1: 20
    K2: 6
    LAMBDA: 0.3
  ROC:
    ENABLED: False
[07/09 13:11:25] fastreid INFO: Full config saved to /home/zhourui/hyf_lpl_multicamera/codes/logs/wildsplit5/mgn_R50-ibn/config.yaml
[07/09 13:11:25] fastreid.utils.env INFO: Using a generated random seed 27367808
[07/09 13:11:25] fastreid.engine.defaults INFO: Prepare training set
[07/09 13:11:25] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| train    | 297     | 1665       | 1           |[0m
[07/09 13:11:25] fastreid.data.build INFO: Using training sampler NaiveIdentitySampler
[07/09 13:11:27] fastreid.engine.defaults INFO: Auto-scaling the num_classes=297
[07/09 13:11:27] fastreid.modeling.backbones.resnet INFO: Loading pretrained model from /home/zhourui/.cache/torch/checkpoints/resnet50_ibn_a-d9d0bb7b.pth
[07/09 13:11:28] fastreid.modeling.backbones.resnet INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc.{weight, bias}[0m
[07/09 13:11:30] fastreid.engine.defaults INFO: Model:
MGN(
  (backbone): Sequential(
    (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (5): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (6): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): IBN(
        (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (se): Identity()
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (b1): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b1_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b2): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b2_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b21_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b22_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b3): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b3_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b31_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b32_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b33_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
)
[07/09 13:11:34] fastreid.utils.checkpoint INFO: No checkpoint found. Training model from scratch
[07/09 13:11:34] fastreid.engine.train_loop INFO: Starting training from epoch 0
[07/09 13:11:34] fastreid.engine.hooks INFO: Freeze layer group "backbone, b1, b2, b3" training for 1000 iterations
[07/09 13:12:02] fastreid.utils.events INFO:  eta: 0:22:40  epoch/iter: 0/25  total_loss: 57  loss_cls_b1: 6.357  loss_cls_b2: 6.207  loss_cls_b21: 6.308  loss_cls_b22: 6.204  loss_cls_b3: 6.221  loss_cls_b31: 6.262  loss_cls_b32: 6.254  loss_cls_b33: 6.289  loss_triplet_b1: 1.283  loss_triplet_b2: 1.29  loss_triplet_b3: 1.27  loss_triplet_b22: 1.479  loss_triplet_b33: 1.661  time: 0.9085  data_time: 0.0007  lr: 3.83e-05  max_mem: 72M
[07/09 13:12:25] fastreid.utils.events INFO:  eta: 0:22:25  epoch/iter: 1/51  total_loss: 57.04  loss_cls_b1: 6.286  loss_cls_b2: 6.194  loss_cls_b21: 6.199  loss_cls_b22: 6.218  loss_cls_b3: 6.211  loss_cls_b31: 6.227  loss_cls_b32: 6.263  loss_cls_b33: 6.232  loss_triplet_b1: 1.302  loss_triplet_b2: 1.329  loss_triplet_b3: 1.299  loss_triplet_b22: 1.554  loss_triplet_b33: 1.743  time: 0.9031  data_time: 0.0006  lr: 4.24e-05  max_mem: 72M
[07/09 13:12:48] fastreid.utils.events INFO:  eta: 0:22:08  epoch/iter: 2/77  total_loss: 57.18  loss_cls_b1: 6.262  loss_cls_b2: 6.212  loss_cls_b21: 6.221  loss_cls_b22: 6.213  loss_cls_b3: 6.223  loss_cls_b31: 6.227  loss_cls_b32: 6.264  loss_cls_b33: 6.222  loss_triplet_b1: 1.314  loss_triplet_b2: 1.357  loss_triplet_b3: 1.325  loss_triplet_b22: 1.617  loss_triplet_b33: 1.841  time: 0.9018  data_time: 0.0006  lr: 4.65e-05  max_mem: 72M
[07/09 13:13:12] fastreid.utils.events INFO:  eta: 0:21:49  epoch/iter: 3/103  total_loss: 57.15  loss_cls_b1: 6.268  loss_cls_b2: 6.201  loss_cls_b21: 6.232  loss_cls_b22: 6.204  loss_cls_b3: 6.219  loss_cls_b31: 6.228  loss_cls_b32: 6.272  loss_cls_b33: 6.213  loss_triplet_b1: 1.328  loss_triplet_b2: 1.357  loss_triplet_b3: 1.325  loss_triplet_b22: 1.615  loss_triplet_b33: 1.863  time: 0.9059  data_time: 0.0007  lr: 5.06e-05  max_mem: 72M
[07/09 13:13:36] fastreid.utils.events INFO:  eta: 0:21:28  epoch/iter: 4/129  total_loss: 57.3  loss_cls_b1: 6.272  loss_cls_b2: 6.206  loss_cls_b21: 6.26  loss_cls_b22: 6.227  loss_cls_b3: 6.248  loss_cls_b31: 6.229  loss_cls_b32: 6.269  loss_cls_b33: 6.209  loss_triplet_b1: 1.345  loss_triplet_b2: 1.376  loss_triplet_b3: 1.358  loss_triplet_b22: 1.619  loss_triplet_b33: 1.868  time: 0.9092  data_time: 0.0006  lr: 5.47e-05  max_mem: 72M
[07/09 13:14:00] fastreid.utils.events INFO:  eta: 0:21:06  epoch/iter: 5/155  total_loss: 57.19  loss_cls_b1: 6.279  loss_cls_b2: 6.199  loss_cls_b21: 6.246  loss_cls_b22: 6.23  loss_cls_b3: 6.251  loss_cls_b31: 6.229  loss_cls_b32: 6.258  loss_cls_b33: 6.213  loss_triplet_b1: 1.334  loss_triplet_b2: 1.366  loss_triplet_b3: 1.325  loss_triplet_b22: 1.617  loss_triplet_b33: 1.847  time: 0.9123  data_time: 0.0007  lr: 5.88e-05  max_mem: 72M
[07/09 13:14:24] fastreid.utils.events INFO:  eta: 0:20:47  epoch/iter: 6/181  total_loss: 57.3  loss_cls_b1: 6.278  loss_cls_b2: 6.205  loss_cls_b21: 6.246  loss_cls_b22: 6.227  loss_cls_b3: 6.241  loss_cls_b31: 6.233  loss_cls_b32: 6.256  loss_cls_b33: 6.217  loss_triplet_b1: 1.375  loss_triplet_b2: 1.386  loss_triplet_b3: 1.354  loss_triplet_b22: 1.632  loss_triplet_b33: 1.863  time: 0.9135  data_time: 0.0006  lr: 6.29e-05  max_mem: 72M
[07/09 13:14:41] fastreid.utils.events INFO:  eta: 0:20:34  epoch/iter: 7/199  total_loss: 57.23  loss_cls_b1: 6.274  loss_cls_b2: 6.205  loss_cls_b21: 6.245  loss_cls_b22: 6.23  loss_cls_b3: 6.235  loss_cls_b31: 6.237  loss_cls_b32: 6.251  loss_cls_b33: 6.213  loss_triplet_b1: 1.341  loss_triplet_b2: 1.365  loss_triplet_b3: 1.341  loss_triplet_b22: 1.619  loss_triplet_b33: 1.84  time: 0.9146  data_time: 0.0005  lr: 6.56e-05  max_mem: 72M
[07/09 13:14:48] fastreid.utils.events INFO:  eta: 0:20:28  epoch/iter: 7/207  total_loss: 57.26  loss_cls_b1: 6.274  loss_cls_b2: 6.207  loss_cls_b21: 6.259  loss_cls_b22: 6.227  loss_cls_b3: 6.228  loss_cls_b31: 6.239  loss_cls_b32: 6.249  loss_cls_b33: 6.217  loss_triplet_b1: 1.345  loss_triplet_b2: 1.366  loss_triplet_b3: 1.343  loss_triplet_b22: 1.619  loss_triplet_b33: 1.829  time: 0.9150  data_time: 0.0005  lr: 6.68e-05  max_mem: 72M
[07/09 13:15:13] fastreid.utils.events INFO:  eta: 0:20:09  epoch/iter: 8/233  total_loss: 57.46  loss_cls_b1: 6.267  loss_cls_b2: 6.209  loss_cls_b21: 6.259  loss_cls_b22: 6.228  loss_cls_b3: 6.228  loss_cls_b31: 6.246  loss_cls_b32: 6.241  loss_cls_b33: 6.209  loss_triplet_b1: 1.378  loss_triplet_b2: 1.389  loss_triplet_b3: 1.346  loss_triplet_b22: 1.643  loss_triplet_b33: 1.863  time: 0.9165  data_time: 0.0006  lr: 7.09e-05  max_mem: 72M
[07/09 13:15:37] fastreid.engine.defaults INFO: Prepare testing set
[07/09 13:15:37] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 370        | 1           |
| gallery  | 297     | 1666       | 1           |[0m
[07/09 13:15:37] fastreid.evaluation.evaluator INFO: Start inference on 2036 images
[07/09 13:15:48] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.5719 s / batch. ETA=0:00:02
[07/09 13:15:52] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:07.711427 (0.701039 s / batch per device, on 1 devices)
[07/09 13:15:52] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:07 (0.698497 s / batch per device, on 1 devices)
[07/09 13:15:52] fastreid.engine.defaults INFO: Evaluation results for WildSplit5 in csv format:
[07/09 13:15:52] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit5 | 67.22    | 76.03    | 78.51     | 42.66 | 8.16   | 54.94    |[0m
[07/09 13:15:52] fastreid.utils.events INFO:  eta: 0:19:48  epoch/iter: 9/259  total_loss: 57.31  loss_cls_b1: 6.274  loss_cls_b2: 6.219  loss_cls_b21: 6.259  loss_cls_b22: 6.23  loss_cls_b3: 6.224  loss_cls_b31: 6.242  loss_cls_b32: 6.231  loss_cls_b33: 6.213  loss_triplet_b1: 1.366  loss_triplet_b2: 1.365  loss_triplet_b3: 1.338  loss_triplet_b22: 1.632  loss_triplet_b33: 1.831  time: 0.9182  data_time: 0.0006  lr: 7.50e-05  max_mem: 252M
[07/09 13:16:16] fastreid.utils.events INFO:  eta: 0:19:27  epoch/iter: 10/285  total_loss: 57.4  loss_cls_b1: 6.277  loss_cls_b2: 6.22  loss_cls_b21: 6.239  loss_cls_b22: 6.23  loss_cls_b3: 6.228  loss_cls_b31: 6.256  loss_cls_b32: 6.217  loss_cls_b33: 6.222  loss_triplet_b1: 1.377  loss_triplet_b2: 1.367  loss_triplet_b3: 1.348  loss_triplet_b22: 1.641  loss_triplet_b33: 1.828  time: 0.9199  data_time: 0.0008  lr: 7.89e-05  max_mem: 252M
[07/09 13:16:41] fastreid.utils.events INFO:  eta: 0:19:05  epoch/iter: 11/311  total_loss: 57.49  loss_cls_b1: 6.274  loss_cls_b2: 6.243  loss_cls_b21: 6.236  loss_cls_b22: 6.254  loss_cls_b3: 6.213  loss_cls_b31: 6.246  loss_cls_b32: 6.225  loss_cls_b33: 6.211  loss_triplet_b1: 1.384  loss_triplet_b2: 1.387  loss_triplet_b3: 1.365  loss_triplet_b22: 1.651  loss_triplet_b33: 1.822  time: 0.9209  data_time: 0.0007  lr: 8.30e-05  max_mem: 252M
[07/09 13:17:05] fastreid.utils.events INFO:  eta: 0:18:42  epoch/iter: 12/337  total_loss: 57.41  loss_cls_b1: 6.266  loss_cls_b2: 6.243  loss_cls_b21: 6.215  loss_cls_b22: 6.253  loss_cls_b3: 6.192  loss_cls_b31: 6.24  loss_cls_b32: 6.223  loss_cls_b33: 6.23  loss_triplet_b1: 1.388  loss_triplet_b2: 1.375  loss_triplet_b3: 1.365  loss_triplet_b22: 1.643  loss_triplet_b33: 1.807  time: 0.9212  data_time: 0.0007  lr: 8.71e-05  max_mem: 252M
[07/09 13:17:29] fastreid.utils.events INFO:  eta: 0:18:18  epoch/iter: 13/363  total_loss: 57.62  loss_cls_b1: 6.251  loss_cls_b2: 6.25  loss_cls_b21: 6.237  loss_cls_b22: 6.268  loss_cls_b3: 6.187  loss_cls_b31: 6.247  loss_cls_b32: 6.227  loss_cls_b33: 6.206  loss_triplet_b1: 1.409  loss_triplet_b2: 1.395  loss_triplet_b3: 1.408  loss_triplet_b22: 1.669  loss_triplet_b33: 1.831  time: 0.9221  data_time: 0.0005  lr: 9.12e-05  max_mem: 252M
[07/09 13:17:53] fastreid.utils.events INFO:  eta: 0:17:56  epoch/iter: 14/389  total_loss: 57.62  loss_cls_b1: 6.252  loss_cls_b2: 6.241  loss_cls_b21: 6.238  loss_cls_b22: 6.267  loss_cls_b3: 6.187  loss_cls_b31: 6.248  loss_cls_b32: 6.223  loss_cls_b33: 6.2  loss_triplet_b1: 1.424  loss_triplet_b2: 1.412  loss_triplet_b3: 1.42  loss_triplet_b22: 1.688  loss_triplet_b33: 1.83  time: 0.9226  data_time: 0.0007  lr: 9.53e-05  max_mem: 252M
[07/09 13:18:02] fastreid.utils.events INFO:  eta: 0:17:46  epoch/iter: 15/399  total_loss: 57.72  loss_cls_b1: 6.254  loss_cls_b2: 6.241  loss_cls_b21: 6.237  loss_cls_b22: 6.255  loss_cls_b3: 6.192  loss_cls_b31: 6.246  loss_cls_b32: 6.223  loss_cls_b33: 6.21  loss_triplet_b1: 1.433  loss_triplet_b2: 1.418  loss_triplet_b3: 1.423  loss_triplet_b22: 1.699  loss_triplet_b33: 1.832  time: 0.9225  data_time: 0.0006  lr: 9.69e-05  max_mem: 252M
[07/09 13:18:17] fastreid.utils.events INFO:  eta: 0:17:32  epoch/iter: 15/415  total_loss: 57.92  loss_cls_b1: 6.257  loss_cls_b2: 6.243  loss_cls_b21: 6.241  loss_cls_b22: 6.255  loss_cls_b3: 6.204  loss_cls_b31: 6.236  loss_cls_b32: 6.235  loss_cls_b33: 6.21  loss_triplet_b1: 1.473  loss_triplet_b2: 1.461  loss_triplet_b3: 1.442  loss_triplet_b22: 1.75  loss_triplet_b33: 1.901  time: 0.9228  data_time: 0.0005  lr: 9.94e-05  max_mem: 252M
[07/09 13:18:41] fastreid.utils.events INFO:  eta: 0:17:09  epoch/iter: 16/441  total_loss: 57.8  loss_cls_b1: 6.266  loss_cls_b2: 6.218  loss_cls_b21: 6.237  loss_cls_b22: 6.27  loss_cls_b3: 6.2  loss_cls_b31: 6.236  loss_cls_b32: 6.235  loss_cls_b33: 6.219  loss_triplet_b1: 1.455  loss_triplet_b2: 1.427  loss_triplet_b3: 1.444  loss_triplet_b22: 1.713  loss_triplet_b33: 1.869  time: 0.9233  data_time: 0.0007  lr: 1.04e-04  max_mem: 252M
[07/09 13:19:05] fastreid.utils.events INFO:  eta: 0:16:45  epoch/iter: 17/467  total_loss: 57.84  loss_cls_b1: 6.254  loss_cls_b2: 6.209  loss_cls_b21: 6.228  loss_cls_b22: 6.264  loss_cls_b3: 6.202  loss_cls_b31: 6.228  loss_cls_b32: 6.235  loss_cls_b33: 6.203  loss_triplet_b1: 1.48  loss_triplet_b2: 1.473  loss_triplet_b3: 1.457  loss_triplet_b22: 1.749  loss_triplet_b33: 1.858  time: 0.9235  data_time: 0.0006  lr: 1.08e-04  max_mem: 252M
[07/09 13:19:29] fastreid.utils.events INFO:  eta: 0:16:21  epoch/iter: 18/493  total_loss: 57.88  loss_cls_b1: 6.251  loss_cls_b2: 6.202  loss_cls_b21: 6.227  loss_cls_b22: 6.264  loss_cls_b3: 6.199  loss_cls_b31: 6.236  loss_cls_b32: 6.235  loss_cls_b33: 6.195  loss_triplet_b1: 1.493  loss_triplet_b2: 1.496  loss_triplet_b3: 1.465  loss_triplet_b22: 1.761  loss_triplet_b33: 1.9  time: 0.9235  data_time: 0.0007  lr: 1.12e-04  max_mem: 252M
[07/09 13:19:54] fastreid.engine.defaults INFO: Prepare testing set
[07/09 13:19:54] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 370        | 1           |
| gallery  | 297     | 1666       | 1           |[0m
[07/09 13:19:54] fastreid.evaluation.evaluator INFO: Start inference on 2036 images
[07/09 13:20:02] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.5426 s / batch. ETA=0:00:02
[07/09 13:20:04] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:05.813357 (0.528487 s / batch per device, on 1 devices)
[07/09 13:20:04] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:05 (0.527417 s / batch per device, on 1 devices)
[07/09 13:20:04] fastreid.engine.defaults INFO: Evaluation results for WildSplit5 in csv format:
[07/09 13:20:04] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit5 | 61.98    | 70.52    | 75.21     | 36.59 | 6.30   | 49.29    |[0m
[07/09 13:20:05] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit5/mgn_R50-ibn/model_best.pth
[07/09 13:20:05] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit5/mgn_R50-ibn/model_0019.pth
[07/09 13:20:06] fastreid.utils.events INFO:  eta: 0:15:58  epoch/iter: 19/519  total_loss: 57.8  loss_cls_b1: 6.254  loss_cls_b2: 6.209  loss_cls_b21: 6.205  loss_cls_b22: 6.257  loss_cls_b3: 6.216  loss_cls_b31: 6.24  loss_cls_b32: 6.231  loss_cls_b33: 6.19  loss_triplet_b1: 1.488  loss_triplet_b2: 1.484  loss_triplet_b3: 1.465  loss_triplet_b22: 1.718  loss_triplet_b33: 1.88  time: 0.9236  data_time: 0.0008  lr: 1.16e-04  max_mem: 252M
[07/09 13:20:30] fastreid.utils.events INFO:  eta: 0:15:33  epoch/iter: 20/545  total_loss: 57.93  loss_cls_b1: 6.256  loss_cls_b2: 6.227  loss_cls_b21: 6.205  loss_cls_b22: 6.254  loss_cls_b3: 6.221  loss_cls_b31: 6.238  loss_cls_b32: 6.239  loss_cls_b33: 6.185  loss_triplet_b1: 1.511  loss_triplet_b2: 1.519  loss_triplet_b3: 1.488  loss_triplet_b22: 1.757  loss_triplet_b33: 1.902  time: 0.9234  data_time: 0.0010  lr: 1.20e-04  max_mem: 252M
[07/09 13:20:54] fastreid.utils.events INFO:  eta: 0:15:10  epoch/iter: 21/571  total_loss: 57.84  loss_cls_b1: 6.264  loss_cls_b2: 6.22  loss_cls_b21: 6.202  loss_cls_b22: 6.253  loss_cls_b3: 6.219  loss_cls_b31: 6.24  loss_cls_b32: 6.235  loss_cls_b33: 6.195  loss_triplet_b1: 1.505  loss_triplet_b2: 1.491  loss_triplet_b3: 1.479  loss_triplet_b22: 1.718  loss_triplet_b33: 1.873  time: 0.9235  data_time: 0.0008  lr: 1.24e-04  max_mem: 252M
[07/09 13:21:18] fastreid.utils.events INFO:  eta: 0:14:46  epoch/iter: 22/597  total_loss: 58.07  loss_cls_b1: 6.264  loss_cls_b2: 6.231  loss_cls_b21: 6.213  loss_cls_b22: 6.254  loss_cls_b3: 6.21  loss_cls_b31: 6.24  loss_cls_b32: 6.237  loss_cls_b33: 6.18  loss_triplet_b1: 1.519  loss_triplet_b2: 1.527  loss_triplet_b3: 1.488  loss_triplet_b22: 1.78  loss_triplet_b33: 1.913  time: 0.9236  data_time: 0.0006  lr: 1.28e-04  max_mem: 252M
[07/09 13:21:20] fastreid.utils.events INFO:  eta: 0:14:44  epoch/iter: 23/599  total_loss: 58.07  loss_cls_b1: 6.265  loss_cls_b2: 6.229  loss_cls_b21: 6.216  loss_cls_b22: 6.254  loss_cls_b3: 6.216  loss_cls_b31: 6.238  loss_cls_b32: 6.238  loss_cls_b33: 6.177  loss_triplet_b1: 1.519  loss_triplet_b2: 1.527  loss_triplet_b3: 1.488  loss_triplet_b22: 1.78  loss_triplet_b33: 1.913  time: 0.9237  data_time: 0.0007  lr: 1.28e-04  max_mem: 252M
[07/09 13:21:42] fastreid.utils.events INFO:  eta: 0:14:22  epoch/iter: 23/623  total_loss: 58.07  loss_cls_b1: 6.28  loss_cls_b2: 6.23  loss_cls_b21: 6.202  loss_cls_b22: 6.249  loss_cls_b3: 6.202  loss_cls_b31: 6.24  loss_cls_b32: 6.234  loss_cls_b33: 6.177  loss_triplet_b1: 1.512  loss_triplet_b2: 1.511  loss_triplet_b3: 1.488  loss_triplet_b22: 1.774  loss_triplet_b33: 1.887  time: 0.9238  data_time: 0.0007  lr: 1.32e-04  max_mem: 252M
[07/09 13:22:06] fastreid.utils.events INFO:  eta: 0:13:58  epoch/iter: 24/649  total_loss: 58.07  loss_cls_b1: 6.274  loss_cls_b2: 6.25  loss_cls_b21: 6.197  loss_cls_b22: 6.249  loss_cls_b3: 6.2  loss_cls_b31: 6.24  loss_cls_b32: 6.241  loss_cls_b33: 6.186  loss_triplet_b1: 1.524  loss_triplet_b2: 1.52  loss_triplet_b3: 1.488  loss_triplet_b22: 1.772  loss_triplet_b33: 1.887  time: 0.9240  data_time: 0.0006  lr: 1.36e-04  max_mem: 252M
[07/09 13:22:31] fastreid.utils.events INFO:  eta: 0:13:34  epoch/iter: 25/675  total_loss: 58.03  loss_cls_b1: 6.266  loss_cls_b2: 6.263  loss_cls_b21: 6.218  loss_cls_b22: 6.25  loss_cls_b3: 6.202  loss_cls_b31: 6.25  loss_cls_b32: 6.246  loss_cls_b33: 6.195  loss_triplet_b1: 1.514  loss_triplet_b2: 1.507  loss_triplet_b3: 1.484  loss_triplet_b22: 1.772  loss_triplet_b33: 1.886  time: 0.9243  data_time: 0.0004  lr: 1.40e-04  max_mem: 252M
[07/09 13:22:55] fastreid.utils.events INFO:  eta: 0:13:10  epoch/iter: 26/701  total_loss: 58.01  loss_cls_b1: 6.28  loss_cls_b2: 6.255  loss_cls_b21: 6.23  loss_cls_b22: 6.254  loss_cls_b3: 6.202  loss_cls_b31: 6.242  loss_cls_b32: 6.236  loss_cls_b33: 6.192  loss_triplet_b1: 1.514  loss_triplet_b2: 1.483  loss_triplet_b3: 1.484  loss_triplet_b22: 1.775  loss_triplet_b33: 1.885  time: 0.9243  data_time: 0.0007  lr: 1.44e-04  max_mem: 252M
[07/09 13:23:19] fastreid.utils.events INFO:  eta: 0:12:46  epoch/iter: 27/727  total_loss: 58.1  loss_cls_b1: 6.28  loss_cls_b2: 6.254  loss_cls_b21: 6.235  loss_cls_b22: 6.25  loss_cls_b3: 6.203  loss_cls_b31: 6.252  loss_cls_b32: 6.238  loss_cls_b33: 6.209  loss_triplet_b1: 1.535  loss_triplet_b2: 1.514  loss_triplet_b3: 1.52  loss_triplet_b22: 1.802  loss_triplet_b33: 1.894  time: 0.9243  data_time: 0.0006  lr: 1.48e-04  max_mem: 252M
[07/09 13:23:43] fastreid.utils.events INFO:  eta: 0:12:22  epoch/iter: 28/753  total_loss: 58.01  loss_cls_b1: 6.282  loss_cls_b2: 6.256  loss_cls_b21: 6.233  loss_cls_b22: 6.246  loss_cls_b3: 6.207  loss_cls_b31: 6.245  loss_cls_b32: 6.24  loss_cls_b33: 6.212  loss_triplet_b1: 1.531  loss_triplet_b2: 1.508  loss_triplet_b3: 1.516  loss_triplet_b22: 1.802  loss_triplet_b33: 1.9  time: 0.9245  data_time: 0.0007  lr: 1.52e-04  max_mem: 252M
[07/09 13:24:07] fastreid.engine.defaults INFO: Prepare testing set
[07/09 13:24:07] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 370        | 1           |
| gallery  | 297     | 1666       | 1           |[0m
[07/09 13:24:07] fastreid.evaluation.evaluator INFO: Start inference on 2036 images
[07/09 13:24:15] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.5424 s / batch. ETA=0:00:02
[07/09 13:24:18] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:05.915179 (0.537744 s / batch per device, on 1 devices)
[07/09 13:24:18] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:05 (0.535731 s / batch per device, on 1 devices)
[07/09 13:24:18] fastreid.engine.defaults INFO: Evaluation results for WildSplit5 in csv format:
[07/09 13:24:18] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit5 | 62.81    | 72.18    | 75.76     | 36.84 | 6.34   | 49.83    |[0m
[07/09 13:24:18] fastreid.utils.events INFO:  eta: 0:11:58  epoch/iter: 29/779  total_loss: 58.09  loss_cls_b1: 6.28  loss_cls_b2: 6.261  loss_cls_b21: 6.242  loss_cls_b22: 6.25  loss_cls_b3: 6.21  loss_cls_b31: 6.241  loss_cls_b32: 6.24  loss_cls_b33: 6.216  loss_triplet_b1: 1.546  loss_triplet_b2: 1.537  loss_triplet_b3: 1.531  loss_triplet_b22: 1.809  loss_triplet_b33: 1.945  time: 0.9244  data_time: 0.0005  lr: 1.57e-04  max_mem: 252M
[07/09 13:24:37] fastreid.utils.events INFO:  eta: 0:11:40  epoch/iter: 30/799  total_loss: 57.98  loss_cls_b1: 6.276  loss_cls_b2: 6.256  loss_cls_b21: 6.232  loss_cls_b22: 6.255  loss_cls_b3: 6.21  loss_cls_b31: 6.241  loss_cls_b32: 6.242  loss_cls_b33: 6.222  loss_triplet_b1: 1.535  loss_triplet_b2: 1.507  loss_triplet_b3: 1.515  loss_triplet_b22: 1.783  loss_triplet_b33: 1.893  time: 0.9245  data_time: 0.0006  lr: 1.60e-04  max_mem: 252M
[07/09 13:24:42] fastreid.utils.events INFO:  eta: 0:11:34  epoch/iter: 30/805  total_loss: 57.98  loss_cls_b1: 6.265  loss_cls_b2: 6.268  loss_cls_b21: 6.229  loss_cls_b22: 6.26  loss_cls_b3: 6.207  loss_cls_b31: 6.241  loss_cls_b32: 6.244  loss_cls_b33: 6.221  loss_triplet_b1: 1.535  loss_triplet_b2: 1.507  loss_triplet_b3: 1.516  loss_triplet_b22: 1.781  loss_triplet_b33: 1.893  time: 0.9245  data_time: 0.0005  lr: 1.61e-04  max_mem: 252M
[07/09 13:25:06] fastreid.utils.events INFO:  eta: 0:11:10  epoch/iter: 31/831  total_loss: 57.98  loss_cls_b1: 6.265  loss_cls_b2: 6.249  loss_cls_b21: 6.233  loss_cls_b22: 6.255  loss_cls_b3: 6.224  loss_cls_b31: 6.244  loss_cls_b32: 6.244  loss_cls_b33: 6.208  loss_triplet_b1: 1.537  loss_triplet_b2: 1.515  loss_triplet_b3: 1.516  loss_triplet_b22: 1.798  loss_triplet_b33: 1.916  time: 0.9244  data_time: 0.0008  lr: 1.65e-04  max_mem: 252M
[07/09 13:25:30] fastreid.utils.events INFO:  eta: 0:10:46  epoch/iter: 32/857  total_loss: 57.99  loss_cls_b1: 6.276  loss_cls_b2: 6.241  loss_cls_b21: 6.239  loss_cls_b22: 6.257  loss_cls_b3: 6.236  loss_cls_b31: 6.239  loss_cls_b32: 6.242  loss_cls_b33: 6.206  loss_triplet_b1: 1.529  loss_triplet_b2: 1.502  loss_triplet_b3: 1.515  loss_triplet_b22: 1.779  loss_triplet_b33: 1.909  time: 0.9245  data_time: 0.0007  lr: 1.69e-04  max_mem: 252M
[07/09 13:25:54] fastreid.utils.events INFO:  eta: 0:10:22  epoch/iter: 33/883  total_loss: 58.01  loss_cls_b1: 6.279  loss_cls_b2: 6.243  loss_cls_b21: 6.229  loss_cls_b22: 6.253  loss_cls_b3: 6.218  loss_cls_b31: 6.227  loss_cls_b32: 6.244  loss_cls_b33: 6.209  loss_triplet_b1: 1.533  loss_triplet_b2: 1.514  loss_triplet_b3: 1.516  loss_triplet_b22: 1.782  loss_triplet_b33: 1.923  time: 0.9245  data_time: 0.0007  lr: 1.73e-04  max_mem: 252M
[07/09 13:26:18] fastreid.utils.events INFO:  eta: 0:09:59  epoch/iter: 34/909  total_loss: 58.01  loss_cls_b1: 6.265  loss_cls_b2: 6.245  loss_cls_b21: 6.215  loss_cls_b22: 6.245  loss_cls_b3: 6.222  loss_cls_b31: 6.235  loss_cls_b32: 6.245  loss_cls_b33: 6.208  loss_triplet_b1: 1.533  loss_triplet_b2: 1.517  loss_triplet_b3: 1.515  loss_triplet_b22: 1.796  loss_triplet_b33: 1.922  time: 0.9245  data_time: 0.0007  lr: 1.77e-04  max_mem: 252M
[07/09 13:26:43] fastreid.utils.events INFO:  eta: 0:09:35  epoch/iter: 35/935  total_loss: 58  loss_cls_b1: 6.255  loss_cls_b2: 6.24  loss_cls_b21: 6.215  loss_cls_b22: 6.272  loss_cls_b3: 6.219  loss_cls_b31: 6.225  loss_cls_b32: 6.246  loss_cls_b33: 6.208  loss_triplet_b1: 1.505  loss_triplet_b2: 1.5  loss_triplet_b3: 1.503  loss_triplet_b22: 1.755  loss_triplet_b33: 1.914  time: 0.9247  data_time: 0.0008  lr: 1.81e-04  max_mem: 252M
[07/09 13:27:07] fastreid.utils.events INFO:  eta: 0:09:11  epoch/iter: 36/961  total_loss: 58.07  loss_cls_b1: 6.269  loss_cls_b2: 6.242  loss_cls_b21: 6.215  loss_cls_b22: 6.277  loss_cls_b3: 6.222  loss_cls_b31: 6.225  loss_cls_b32: 6.246  loss_cls_b33: 6.197  loss_triplet_b1: 1.504  loss_triplet_b2: 1.497  loss_triplet_b3: 1.486  loss_triplet_b22: 1.765  loss_triplet_b33: 1.922  time: 0.9247  data_time: 0.0008  lr: 1.85e-04  max_mem: 252M
[07/09 13:27:31] fastreid.utils.events INFO:  eta: 0:08:47  epoch/iter: 37/987  total_loss: 57.97  loss_cls_b1: 6.265  loss_cls_b2: 6.227  loss_cls_b21: 6.208  loss_cls_b22: 6.247  loss_cls_b3: 6.222  loss_cls_b31: 6.216  loss_cls_b32: 6.246  loss_cls_b33: 6.202  loss_triplet_b1: 1.489  loss_triplet_b2: 1.481  loss_triplet_b3: 1.469  loss_triplet_b22: 1.726  loss_triplet_b33: 1.863  time: 0.9247  data_time: 0.0006  lr: 1.89e-04  max_mem: 252M
[07/09 13:27:42] fastreid.utils.events INFO:  eta: 0:08:36  epoch/iter: 38/999  total_loss: 57.95  loss_cls_b1: 6.265  loss_cls_b2: 6.226  loss_cls_b21: 6.206  loss_cls_b22: 6.245  loss_cls_b3: 6.222  loss_cls_b31: 6.216  loss_cls_b32: 6.251  loss_cls_b33: 6.2  loss_triplet_b1: 1.479  loss_triplet_b2: 1.483  loss_triplet_b3: 1.478  loss_triplet_b22: 1.726  loss_triplet_b33: 1.871  time: 0.9247  data_time: 0.0009  lr: 1.91e-04  max_mem: 252M
[07/09 13:27:42] fastreid.engine.hooks INFO: Open layer group "backbone, b1, b2, b3" training
[07/09 13:27:55] fastreid.utils.events INFO:  eta: 0:08:23  epoch/iter: 38/1013  total_loss: 57.89  loss_cls_b1: 6.269  loss_cls_b2: 6.22  loss_cls_b21: 6.209  loss_cls_b22: 6.235  loss_cls_b3: 6.203  loss_cls_b31: 6.212  loss_cls_b32: 6.246  loss_cls_b33: 6.197  loss_triplet_b1: 1.477  loss_triplet_b2: 1.478  loss_triplet_b3: 1.457  loss_triplet_b22: 1.708  loss_triplet_b33: 1.853  time: 0.9248  data_time: 0.0008  lr: 1.93e-04  max_mem: 252M
[07/09 13:28:20] fastreid.engine.defaults INFO: Prepare testing set
[07/09 13:28:20] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 370        | 1           |
| gallery  | 297     | 1666       | 1           |[0m
[07/09 13:28:20] fastreid.evaluation.evaluator INFO: Start inference on 2036 images
[07/09 13:28:28] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.5382 s / batch. ETA=0:00:02
[07/09 13:28:30] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:05.794731 (0.526794 s / batch per device, on 1 devices)
[07/09 13:28:30] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:05 (0.525304 s / batch per device, on 1 devices)
[07/09 13:28:30] fastreid.engine.defaults INFO: Evaluation results for WildSplit5 in csv format:
[07/09 13:28:30] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit5 | 73.00    | 82.09    | 84.57     | 55.79 | 10.81  | 64.40    |[0m
[07/09 13:28:31] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit5/mgn_R50-ibn/model_best.pth
[07/09 13:28:35] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit5/mgn_R50-ibn/model_0039.pth
[07/09 13:28:37] fastreid.utils.events INFO:  eta: 0:07:59  epoch/iter: 39/1039  total_loss: 57.57  loss_cls_b1: 6.247  loss_cls_b2: 6.215  loss_cls_b21: 6.184  loss_cls_b22: 6.235  loss_cls_b3: 6.193  loss_cls_b31: 6.21  loss_cls_b32: 6.232  loss_cls_b33: 6.197  loss_triplet_b1: 1.423  loss_triplet_b2: 1.412  loss_triplet_b3: 1.417  loss_triplet_b22: 1.661  loss_triplet_b33: 1.779  time: 0.9253  data_time: 0.0006  lr: 1.98e-04  max_mem: 252M
[07/09 13:29:01] fastreid.utils.events INFO:  eta: 0:07:36  epoch/iter: 40/1065  total_loss: 57.2  loss_cls_b1: 6.223  loss_cls_b2: 6.211  loss_cls_b21: 6.17  loss_cls_b22: 6.217  loss_cls_b3: 6.175  loss_cls_b31: 6.195  loss_cls_b32: 6.207  loss_cls_b33: 6.187  loss_triplet_b1: 1.374  loss_triplet_b2: 1.361  loss_triplet_b3: 1.347  loss_triplet_b22: 1.582  loss_triplet_b33: 1.672  time: 0.9255  data_time: 0.0006  lr: 2.02e-04  max_mem: 252M
[07/09 13:29:26] fastreid.utils.events INFO:  eta: 0:07:12  epoch/iter: 41/1091  total_loss: 56.49  loss_cls_b1: 6.176  loss_cls_b2: 6.163  loss_cls_b21: 6.11  loss_cls_b22: 6.167  loss_cls_b3: 6.135  loss_cls_b31: 6.142  loss_cls_b32: 6.163  loss_cls_b33: 6.134  loss_triplet_b1: 1.247  loss_triplet_b2: 1.196  loss_triplet_b3: 1.254  loss_triplet_b22: 1.397  loss_triplet_b33: 1.516  time: 0.9259  data_time: 0.0007  lr: 2.06e-04  max_mem: 252M
[07/09 13:29:50] fastreid.utils.events INFO:  eta: 0:06:48  epoch/iter: 42/1117  total_loss: 54.61  loss_cls_b1: 6.076  loss_cls_b2: 6.091  loss_cls_b21: 6.063  loss_cls_b22: 6.085  loss_cls_b3: 6.056  loss_cls_b31: 6.063  loss_cls_b32: 6.068  loss_cls_b33: 6.047  loss_triplet_b1: 1.022  loss_triplet_b2: 0.9364  loss_triplet_b3: 0.9367  loss_triplet_b22: 1.109  loss_triplet_b33: 1.175  time: 0.9264  data_time: 0.0007  lr: 2.10e-04  max_mem: 252M
[07/09 13:30:15] fastreid.utils.events INFO:  eta: 0:06:24  epoch/iter: 43/1143  total_loss: 50.83  loss_cls_b1: 5.749  loss_cls_b2: 5.805  loss_cls_b21: 5.679  loss_cls_b22: 5.803  loss_cls_b3: 5.845  loss_cls_b31: 5.853  loss_cls_b32: 5.787  loss_cls_b33: 5.816  loss_triplet_b1: 0.7685  loss_triplet_b2: 0.7077  loss_triplet_b3: 0.7254  loss_triplet_b22: 0.8091  loss_triplet_b33: 0.8625  time: 0.9269  data_time: 0.0004  lr: 2.14e-04  max_mem: 252M
[07/09 13:30:39] fastreid.utils.events INFO:  eta: 0:06:01  epoch/iter: 44/1169  total_loss: 43.6  loss_cls_b1: 4.863  loss_cls_b2: 5.087  loss_cls_b21: 5.024  loss_cls_b22: 5.05  loss_cls_b3: 5.141  loss_cls_b31: 5.07  loss_cls_b32: 5.173  loss_cls_b33: 5.126  loss_triplet_b1: 0.6392  loss_triplet_b2: 0.6012  loss_triplet_b3: 0.5978  loss_triplet_b22: 0.6285  loss_triplet_b33: 0.716  time: 0.9273  data_time: 0.0007  lr: 2.18e-04  max_mem: 252M
[07/09 13:31:04] fastreid.utils.events INFO:  eta: 0:05:37  epoch/iter: 45/1195  total_loss: 40.01  loss_cls_b1: 4.36  loss_cls_b2: 4.601  loss_cls_b21: 4.604  loss_cls_b22: 4.624  loss_cls_b3: 4.698  loss_cls_b31: 4.618  loss_cls_b32: 4.667  loss_cls_b33: 4.621  loss_triplet_b1: 0.5183  loss_triplet_b2: 0.4901  loss_triplet_b3: 0.4985  loss_triplet_b22: 0.5397  loss_triplet_b33: 0.5792  time: 0.9276  data_time: 0.0004  lr: 2.22e-04  max_mem: 252M
[07/09 13:31:08] fastreid.utils.events INFO:  eta: 0:05:33  epoch/iter: 46/1199  total_loss: 38.84  loss_cls_b1: 4.297  loss_cls_b2: 4.538  loss_cls_b21: 4.553  loss_cls_b22: 4.579  loss_cls_b3: 4.643  loss_cls_b31: 4.601  loss_cls_b32: 4.603  loss_cls_b33: 4.561  loss_triplet_b1: 0.5035  loss_triplet_b2: 0.4768  loss_triplet_b3: 0.4871  loss_triplet_b22: 0.5192  loss_triplet_b33: 0.562  time: 0.9277  data_time: 0.0004  lr: 2.23e-04  max_mem: 252M
[07/09 13:31:29] fastreid.utils.events INFO:  eta: 0:05:13  epoch/iter: 46/1221  total_loss: 35.47  loss_cls_b1: 3.751  loss_cls_b2: 4.146  loss_cls_b21: 4.11  loss_cls_b22: 4.206  loss_cls_b3: 4.152  loss_cls_b31: 4.128  loss_cls_b32: 4.142  loss_cls_b33: 4.209  loss_triplet_b1: 0.4369  loss_triplet_b2: 0.4151  loss_triplet_b3: 0.4289  loss_triplet_b22: 0.441  loss_triplet_b33: 0.4875  time: 0.9279  data_time: 0.0005  lr: 2.26e-04  max_mem: 252M
[07/09 13:31:53] fastreid.utils.events INFO:  eta: 0:04:49  epoch/iter: 47/1247  total_loss: 31.16  loss_cls_b1: 3.226  loss_cls_b2: 3.628  loss_cls_b21: 3.613  loss_cls_b22: 3.771  loss_cls_b3: 3.685  loss_cls_b31: 3.718  loss_cls_b32: 3.759  loss_cls_b33: 3.812  loss_triplet_b1: 0.3586  loss_triplet_b2: 0.3664  loss_triplet_b3: 0.3607  loss_triplet_b22: 0.3668  loss_triplet_b33: 0.3954  time: 0.9282  data_time: 0.0005  lr: 2.30e-04  max_mem: 252M
[07/09 13:32:18] fastreid.utils.events INFO:  eta: 0:04:25  epoch/iter: 48/1273  total_loss: 27.5  loss_cls_b1: 2.824  loss_cls_b2: 3.15  loss_cls_b21: 3.229  loss_cls_b22: 3.384  loss_cls_b3: 3.218  loss_cls_b31: 3.282  loss_cls_b32: 3.414  loss_cls_b33: 3.322  loss_triplet_b1: 0.2919  loss_triplet_b2: 0.3064  loss_triplet_b3: 0.2978  loss_triplet_b22: 0.3142  loss_triplet_b33: 0.3166  time: 0.9285  data_time: 0.0006  lr: 2.34e-04  max_mem: 252M
[07/09 13:32:42] fastreid.engine.defaults INFO: Prepare testing set
[07/09 13:32:42] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 370        | 1           |
| gallery  | 297     | 1666       | 1           |[0m
[07/09 13:32:42] fastreid.evaluation.evaluator INFO: Start inference on 2036 images
[07/09 13:32:50] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.5471 s / batch. ETA=0:00:02
[07/09 13:32:53] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:05.842904 (0.531173 s / batch per device, on 1 devices)
[07/09 13:32:53] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:05 (0.529310 s / batch per device, on 1 devices)
[07/09 13:32:53] fastreid.engine.defaults INFO: Evaluation results for WildSplit5 in csv format:
[07/09 13:32:53] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit5 | 77.13    | 87.33    | 89.81     | 70.16 | 20.91  | 73.65    |[0m
[07/09 13:32:53] fastreid.utils.events INFO:  eta: 0:04:01  epoch/iter: 49/1299  total_loss: 24.35  loss_cls_b1: 2.447  loss_cls_b2: 2.776  loss_cls_b21: 2.914  loss_cls_b22: 2.963  loss_cls_b3: 2.824  loss_cls_b31: 2.91  loss_cls_b32: 3.044  loss_cls_b33: 3.092  loss_triplet_b1: 0.265  loss_triplet_b2: 0.2536  loss_triplet_b3: 0.2478  loss_triplet_b22: 0.2457  loss_triplet_b33: 0.2601  time: 0.9287  data_time: 0.0006  lr: 2.38e-04  max_mem: 252M
[07/09 13:33:18] fastreid.utils.events INFO:  eta: 0:03:37  epoch/iter: 50/1325  total_loss: 21.65  loss_cls_b1: 2.183  loss_cls_b2: 2.514  loss_cls_b21: 2.62  loss_cls_b22: 2.667  loss_cls_b3: 2.555  loss_cls_b31: 2.655  loss_cls_b32: 2.741  loss_cls_b33: 2.822  loss_triplet_b1: 0.2029  loss_triplet_b2: 0.1914  loss_triplet_b3: 0.204  loss_triplet_b22: 0.2096  loss_triplet_b33: 0.2076  time: 0.9292  data_time: 0.0005  lr: 2.43e-04  max_mem: 252M
[07/09 13:33:42] fastreid.utils.events INFO:  eta: 0:03:13  epoch/iter: 51/1351  total_loss: 19.94  loss_cls_b1: 2.017  loss_cls_b2: 2.297  loss_cls_b21: 2.444  loss_cls_b22: 2.542  loss_cls_b3: 2.31  loss_cls_b31: 2.482  loss_cls_b32: 2.61  loss_cls_b33: 2.621  loss_triplet_b1: 0.1573  loss_triplet_b2: 0.16  loss_triplet_b3: 0.156  loss_triplet_b22: 0.1701  loss_triplet_b33: 0.1727  time: 0.9294  data_time: 0.0006  lr: 2.47e-04  max_mem: 252M
[07/09 13:34:07] fastreid.utils.events INFO:  eta: 0:02:49  epoch/iter: 52/1377  total_loss: 17.78  loss_cls_b1: 1.715  loss_cls_b2: 2.006  loss_cls_b21: 2.082  loss_cls_b22: 2.366  loss_cls_b3: 2.119  loss_cls_b31: 2.214  loss_cls_b32: 2.403  loss_cls_b33: 2.39  loss_triplet_b1: 0.1392  loss_triplet_b2: 0.145  loss_triplet_b3: 0.137  loss_triplet_b22: 0.1423  loss_triplet_b33: 0.1558  time: 0.9296  data_time: 0.0004  lr: 2.51e-04  max_mem: 252M
[07/09 13:34:28] fastreid.utils.events INFO:  eta: 0:02:28  epoch/iter: 53/1399  total_loss: 17.1  loss_cls_b1: 1.642  loss_cls_b2: 1.878  loss_cls_b21: 1.998  loss_cls_b22: 2.173  loss_cls_b3: 1.958  loss_cls_b31: 2.093  loss_cls_b32: 2.333  loss_cls_b33: 2.313  loss_triplet_b1: 0.1092  loss_triplet_b2: 0.1288  loss_triplet_b3: 0.1305  loss_triplet_b22: 0.1202  loss_triplet_b33: 0.1341  time: 0.9299  data_time: 0.0006  lr: 2.54e-04  max_mem: 252M
[07/09 13:34:31] fastreid.utils.events INFO:  eta: 0:02:25  epoch/iter: 53/1403  total_loss: 16.87  loss_cls_b1: 1.625  loss_cls_b2: 1.83  loss_cls_b21: 1.982  loss_cls_b22: 2.142  loss_cls_b3: 1.929  loss_cls_b31: 2.06  loss_cls_b32: 2.291  loss_cls_b33: 2.287  loss_triplet_b1: 0.1044  loss_triplet_b2: 0.1257  loss_triplet_b3: 0.1267  loss_triplet_b22: 0.109  loss_triplet_b33: 0.1282  time: 0.9299  data_time: 0.0007  lr: 2.55e-04  max_mem: 252M
[07/09 13:34:56] fastreid.utils.events INFO:  eta: 0:02:00  epoch/iter: 54/1429  total_loss: 15.44  loss_cls_b1: 1.466  loss_cls_b2: 1.714  loss_cls_b21: 1.845  loss_cls_b22: 1.966  loss_cls_b3: 1.748  loss_cls_b31: 1.888  loss_cls_b32: 2.043  loss_cls_b33: 2.095  loss_triplet_b1: 0.09423  loss_triplet_b2: 0.1007  loss_triplet_b3: 0.1143  loss_triplet_b22: 0.09222  loss_triplet_b33: 0.1046  time: 0.9301  data_time: 0.0006  lr: 2.59e-04  max_mem: 252M
[07/09 13:35:20] fastreid.utils.events INFO:  eta: 0:01:36  epoch/iter: 55/1455  total_loss: 14.44  loss_cls_b1: 1.372  loss_cls_b2: 1.608  loss_cls_b21: 1.746  loss_cls_b22: 1.857  loss_cls_b3: 1.647  loss_cls_b31: 1.806  loss_cls_b32: 1.958  loss_cls_b33: 1.922  loss_triplet_b1: 0.08424  loss_triplet_b2: 0.08611  loss_triplet_b3: 0.1064  loss_triplet_b22: 0.08215  loss_triplet_b33: 0.08876  time: 0.9304  data_time: 0.0006  lr: 2.63e-04  max_mem: 252M
[07/09 13:35:45] fastreid.utils.events INFO:  eta: 0:01:12  epoch/iter: 56/1481  total_loss: 13.46  loss_cls_b1: 1.248  loss_cls_b2: 1.486  loss_cls_b21: 1.661  loss_cls_b22: 1.743  loss_cls_b3: 1.538  loss_cls_b31: 1.736  loss_cls_b32: 1.831  loss_cls_b33: 1.808  loss_triplet_b1: 0.07389  loss_triplet_b2: 0.07953  loss_triplet_b3: 0.08678  loss_triplet_b22: 0.0718  loss_triplet_b33: 0.07961  time: 0.9307  data_time: 0.0006  lr: 2.67e-04  max_mem: 252M
[07/09 13:36:10] fastreid.utils.events INFO:  eta: 0:00:48  epoch/iter: 57/1507  total_loss: 12.38  loss_cls_b1: 1.109  loss_cls_b2: 1.356  loss_cls_b21: 1.49  loss_cls_b22: 1.619  loss_cls_b3: 1.398  loss_cls_b31: 1.58  loss_cls_b32: 1.727  loss_cls_b33: 1.712  loss_triplet_b1: 0.05867  loss_triplet_b2: 0.06548  loss_triplet_b3: 0.06958  loss_triplet_b22: 0.0599  loss_triplet_b33: 0.06632  time: 0.9309  data_time: 0.0005  lr: 2.71e-04  max_mem: 252M
[07/09 13:36:34] fastreid.utils.events INFO:  eta: 0:00:24  epoch/iter: 58/1533  total_loss: 11.83  loss_cls_b1: 1.062  loss_cls_b2: 1.274  loss_cls_b21: 1.425  loss_cls_b22: 1.552  loss_cls_b3: 1.339  loss_cls_b31: 1.554  loss_cls_b32: 1.682  loss_cls_b33: 1.656  loss_triplet_b1: 0.05674  loss_triplet_b2: 0.0606  loss_triplet_b3: 0.06548  loss_triplet_b22: 0.0531  loss_triplet_b33: 0.06121  time: 0.9311  data_time: 0.0007  lr: 2.75e-04  max_mem: 252M
[07/09 13:36:59] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/1559  total_loss: 10.78  loss_cls_b1: 0.9918  loss_cls_b2: 1.146  loss_cls_b21: 1.316  loss_cls_b22: 1.422  loss_cls_b3: 1.23  loss_cls_b31: 1.449  loss_cls_b32: 1.525  loss_cls_b33: 1.549  loss_triplet_b1: 0.05003  loss_triplet_b2: 0.05227  loss_triplet_b3: 0.06081  loss_triplet_b22: 0.04362  loss_triplet_b33: 0.05433  time: 0.9314  data_time: 0.0006  lr: 2.79e-04  max_mem: 252M
[07/09 13:36:59] fastreid.engine.defaults INFO: Prepare testing set
[07/09 13:36:59] fastreid.data.datasets.bases INFO: => Loaded WildSplit5 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 370        | 1           |
| gallery  | 297     | 1666       | 1           |[0m
[07/09 13:36:59] fastreid.evaluation.evaluator INFO: Start inference on 2036 images
[07/09 13:37:07] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.5388 s / batch. ETA=0:00:02
[07/09 13:37:10] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:05.788885 (0.526262 s / batch per device, on 1 devices)
[07/09 13:37:10] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:05 (0.524558 s / batch per device, on 1 devices)
[07/09 13:37:10] fastreid.engine.defaults INFO: Evaluation results for WildSplit5 in csv format:
[07/09 13:37:10] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit5 | 79.89    | 88.15    | 90.63     | 74.29 | 25.72  | 77.09    |[0m
[07/09 13:37:10] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit5/mgn_R50-ibn/model_best.pth
[07/09 13:37:14] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit5/mgn_R50-ibn/model_final.pth
[07/09 13:37:16] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/1559  total_loss: 10.78  loss_cls_b1: 0.9918  loss_cls_b2: 1.146  loss_cls_b21: 1.316  loss_cls_b22: 1.422  loss_cls_b3: 1.23  loss_cls_b31: 1.449  loss_cls_b32: 1.525  loss_cls_b33: 1.549  loss_triplet_b1: 0.05003  loss_triplet_b2: 0.05227  loss_triplet_b3: 0.06081  loss_triplet_b22: 0.04362  loss_triplet_b33: 0.05433  time: 0.9314  data_time: 0.0006  lr: 2.79e-04  max_mem: 252M
[07/09 13:37:16] fastreid.engine.hooks INFO: Overall training speed: 1558 iterations in 0:24:11 (0.9314 s / it)
[07/09 13:37:16] fastreid.engine.hooks INFO: Total training time: 0:25:36 (0:01:25 on hooks)
