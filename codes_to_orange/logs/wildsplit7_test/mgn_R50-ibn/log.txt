[07/31 11:10:57] fastreid INFO: Rank of current process: 0. World size: 1
[07/31 11:10:58] fastreid INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.19 (default, Mar 20 2024, 19:58:24) [GCC 11.2.0]
numpy                   1.24.3
fastreid                1.3 @/home/zhourui/hyf_lpl_multicamera/demo/codes_to_orange/./fastreid
FASTREID_ENV_MODULE     <not set>
PyTorch                 1.11.0+cu113 @/opt/anaconda3/envs/multicamera/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1,2,3             NVIDIA GeForce GTX 1080 Ti
CUDA_HOME               :/usr/local/cuda-10.2
Pillow                  10.3.0
torchvision             0.12.0+cu113 @/opt/anaconda3/envs/multicamera/lib/python3.8/site-packages/torchvision
torchvision arch flags  /opt/anaconda3/envs/multicamera/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
----------------------  ----------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[07/31 11:10:58] fastreid INFO: Command line arguments: Namespace(config_file='./configs/WildSplit7/mgn_R50-ibn.yml', dist_url='tcp://127.0.0.1:50154', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[07/31 11:10:58] fastreid INFO: Contents of args.config_file=./configs/WildSplit7/mgn_R50-ibn.yml:
_BASE_: ../Base-MGN.yml

MODEL:
  BACKBONE:
    WITH_IBN: True

DATASETS:
  NAMES: ("WildSplit7",)
  TESTS: ("WildSplit7",)

OUTPUT_DIR: logs/wildsplit7_test/mgn_R50-ibn

[07/31 11:10:58] fastreid INFO: Running with full config:
CUDNN_BENCHMARK: True
DATALOADER:
  NUM_INSTANCE: 16
  NUM_WORKERS: 8
  SAMPLER_TRAIN: NaiveIdentitySampler
  SET_WEIGHT: []
DATASETS:
  COMBINEALL: False
  NAMES: ('WildSplit7',)
  TESTS: ('WildSplit7',)
INPUT:
  AFFINE:
    ENABLED: False
  AUGMIX:
    ENABLED: False
    PROB: 0.0
  AUTOAUG:
    ENABLED: True
    PROB: 0.1
  CJ:
    BRIGHTNESS: 0.15
    CONTRAST: 0.15
    ENABLED: False
    HUE: 0.1
    PROB: 0.5
    SATURATION: 0.1
  CROP:
    ENABLED: False
    RATIO: [0.75, 1.3333333333333333]
    SCALE: [0.16, 1]
    SIZE: [224, 224]
  FLIP:
    ENABLED: True
    PROB: 0.5
  PADDING:
    ENABLED: True
    MODE: constant
    SIZE: 10
  REA:
    ENABLED: True
    PROB: 0.5
    VALUE: [123.675, 116.28, 103.53]
  RPT:
    ENABLED: False
    PROB: 0.5
  SIZE_TEST: [384, 128]
  SIZE_TRAIN: [384, 128]
KD:
  EMA:
    ENABLED: False
    MOMENTUM: 0.999
  MODEL_CONFIG: []
  MODEL_WEIGHTS: []
MODEL:
  BACKBONE:
    ATT_DROP_RATE: 0.0
    DEPTH: 50x
    DROP_PATH_RATIO: 0.1
    DROP_RATIO: 0.0
    FEAT_DIM: 2048
    LAST_STRIDE: 1
    NAME: build_resnet_backbone
    NORM: BN
    PRETRAIN: True
    PRETRAIN_PATH: 
    SIE_COE: 3.0
    STRIDE_SIZE: (16, 16)
    WITH_IBN: True
    WITH_NL: False
    WITH_SE: False
  DEVICE: cuda:1
  FREEZE_LAYERS: ['backbone', 'b1', 'b2', 'b3']
  HEADS:
    CLS_LAYER: CircleSoftmax
    EMBEDDING_DIM: 256
    MARGIN: 0.35
    NAME: EmbeddingHead
    NECK_FEAT: after
    NORM: BN
    NUM_CLASSES: 0
    POOL_LAYER: GeneralizedMeanPoolingP
    SCALE: 64
    WITH_BNNECK: True
  LOSSES:
    CE:
      ALPHA: 0.2
      EPSILON: 0.1
      SCALE: 1.0
    CIRCLE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    COSFACE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    FL:
      ALPHA: 0.25
      GAMMA: 2
      SCALE: 1.0
    NAME: ('CrossEntropyLoss', 'TripletLoss')
    TRI:
      HARD_MINING: True
      MARGIN: 0.0
      NORM_FEAT: False
      SCALE: 1.0
  META_ARCHITECTURE: MGN
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.120000000000005, 57.375]
  QUEUE_SIZE: 8192
  WEIGHTS: 
OUTPUT_DIR: logs/wildsplit7_test/mgn_R50-ibn
SOLVER:
  AMP:
    ENABLED: True
  BASE_LR: 0.00035
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 20
  CLIP_GRADIENTS:
    CLIP_TYPE: norm
    CLIP_VALUE: 5.0
    ENABLED: False
    NORM_TYPE: 2.0
  DELAY_EPOCHS: 30
  ETA_MIN_LR: 7e-07
  FREEZE_ITERS: 1000
  GAMMA: 0.1
  HEADS_LR_FACTOR: 1.0
  IMS_PER_BATCH: 64
  MAX_EPOCH: 60
  MOMENTUM: 0.9
  NESTEROV: False
  OPT: Adam
  SCHED: CosineAnnealingLR
  STEPS: [40, 90]
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 2000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0005
  WEIGHT_DECAY_BIAS: 0.0005
  WEIGHT_DECAY_NORM: 0.0005
TEST:
  AQE:
    ALPHA: 3.0
    ENABLED: False
    QE_K: 5
    QE_TIME: 1
  EVAL_PERIOD: 10
  FLIP:
    ENABLED: False
  IMS_PER_BATCH: 128
  METRIC: cosine
  PRECISE_BN:
    DATASET: Market1501
    ENABLED: False
    NUM_ITER: 300
  RERANK:
    ENABLED: False
    K1: 20
    K2: 6
    LAMBDA: 0.3
  ROC:
    ENABLED: False
[07/31 11:10:58] fastreid INFO: Full config saved to /home/zhourui/hyf_lpl_multicamera/demo/codes_to_orange/logs/wildsplit7_test/mgn_R50-ibn/config.yaml
[07/31 11:10:58] fastreid.utils.env INFO: Using a generated random seed 61548121
[07/31 11:10:58] fastreid.engine.defaults INFO: Prepare training set
[07/31 11:10:58] fastreid.data.datasets.bases INFO: => Loaded WildSplit7 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| train    | 96      | 1633       | 1           |[0m
[07/31 11:10:58] fastreid.data.build INFO: Using training sampler NaiveIdentitySampler
[07/31 11:10:58] fastreid.engine.defaults INFO: Auto-scaling the num_classes=96
[07/31 11:10:58] fastreid.modeling.backbones.resnet INFO: Loading pretrained model from /home/zhourui/.cache/torch/checkpoints/resnet50_ibn_a-d9d0bb7b.pth
[07/31 11:10:59] fastreid.modeling.backbones.resnet INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc.{weight, bias}[0m
[07/31 11:11:02] fastreid.engine.defaults INFO: Model:
MGN(
  (backbone): Sequential(
    (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (5): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (6): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): IBN(
        (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (se): Identity()
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (b1): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b1_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=96, scale=64, margin=0.35)
  )
  (b2): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b2_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=96, scale=64, margin=0.35)
  )
  (b21_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=96, scale=64, margin=0.35)
  )
  (b22_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=96, scale=64, margin=0.35)
  )
  (b3): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b3_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=96, scale=64, margin=0.35)
  )
  (b31_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=96, scale=64, margin=0.35)
  )
  (b32_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=96, scale=64, margin=0.35)
  )
  (b33_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=96, scale=64, margin=0.35)
  )
)
[07/31 11:11:09] fastreid.utils.checkpoint INFO: No checkpoint found. Training model from scratch
[07/31 11:11:09] fastreid.engine.train_loop INFO: Starting training from epoch 0
[07/31 11:11:09] fastreid.engine.hooks INFO: Freeze layer group "backbone, b1, b2, b3" training for 1000 iterations
[07/31 11:11:39] fastreid.utils.events INFO:  eta: 0:25:13  epoch/iter: 0/24  total_loss: 55.36  loss_cls_b1: 6.048  loss_cls_b2: 6.084  loss_cls_b21: 6.035  loss_cls_b22: 5.925  loss_cls_b3: 6.088  loss_cls_b31: 5.972  loss_cls_b32: 6.059  loss_cls_b33: 6.075  loss_triplet_b1: 1.268  loss_triplet_b2: 1.245  loss_triplet_b3: 1.308  loss_triplet_b22: 1.52  loss_triplet_b33: 1.638  time: 1.0356  data_time: 0.0007  lr: 3.81e-05  max_mem: 72M
[07/31 11:12:05] fastreid.utils.events INFO:  eta: 0:25:01  epoch/iter: 1/49  total_loss: 55.97  loss_cls_b1: 6.063  loss_cls_b2: 6.025  loss_cls_b21: 5.987  loss_cls_b22: 5.92  loss_cls_b3: 6.077  loss_cls_b31: 6.029  loss_cls_b32: 6.058  loss_cls_b33: 6.08  loss_triplet_b1: 1.328  loss_triplet_b2: 1.296  loss_triplet_b3: 1.338  loss_triplet_b22: 1.531  loss_triplet_b33: 1.736  time: 1.0382  data_time: 0.0006  lr: 4.21e-05  max_mem: 72M
[07/31 11:12:31] fastreid.utils.events INFO:  eta: 0:24:38  epoch/iter: 2/74  total_loss: 56.03  loss_cls_b1: 6.065  loss_cls_b2: 6.043  loss_cls_b21: 6.005  loss_cls_b22: 5.921  loss_cls_b3: 6.028  loss_cls_b31: 6.04  loss_cls_b32: 6.065  loss_cls_b33: 6.071  loss_triplet_b1: 1.404  loss_triplet_b2: 1.361  loss_triplet_b3: 1.351  loss_triplet_b22: 1.633  loss_triplet_b33: 1.767  time: 1.0411  data_time: 0.0006  lr: 4.59e-05  max_mem: 72M
[07/31 11:12:57] fastreid.utils.events INFO:  eta: 0:24:19  epoch/iter: 3/99  total_loss: 56  loss_cls_b1: 6.079  loss_cls_b2: 6.046  loss_cls_b21: 6.007  loss_cls_b22: 5.923  loss_cls_b3: 6.028  loss_cls_b31: 6.027  loss_cls_b32: 6.065  loss_cls_b33: 6.073  loss_triplet_b1: 1.38  loss_triplet_b2: 1.351  loss_triplet_b3: 1.347  loss_triplet_b22: 1.617  loss_triplet_b33: 1.762  time: 1.0462  data_time: 0.0004  lr: 4.98e-05  max_mem: 72M
[07/31 11:13:25] fastreid.utils.events INFO:  eta: 0:24:00  epoch/iter: 4/124  total_loss: 56.14  loss_cls_b1: 6.084  loss_cls_b2: 6.049  loss_cls_b21: 6.005  loss_cls_b22: 5.932  loss_cls_b3: 6.026  loss_cls_b31: 6.016  loss_cls_b32: 6.066  loss_cls_b33: 6.074  loss_triplet_b1: 1.404  loss_triplet_b2: 1.372  loss_triplet_b3: 1.399  loss_triplet_b22: 1.664  loss_triplet_b33: 1.812  time: 1.0552  data_time: 0.0006  lr: 5.37e-05  max_mem: 72M
[07/31 11:13:51] fastreid.utils.events INFO:  eta: 0:23:37  epoch/iter: 5/149  total_loss: 56.16  loss_cls_b1: 6.089  loss_cls_b2: 6.047  loss_cls_b21: 5.997  loss_cls_b22: 5.945  loss_cls_b3: 6.044  loss_cls_b31: 6.016  loss_cls_b32: 6.068  loss_cls_b33: 6.073  loss_triplet_b1: 1.404  loss_triplet_b2: 1.383  loss_triplet_b3: 1.433  loss_triplet_b22: 1.682  loss_triplet_b33: 1.814  time: 1.0580  data_time: 0.0008  lr: 5.77e-05  max_mem: 72M
[07/31 11:14:19] fastreid.utils.events INFO:  eta: 0:23:15  epoch/iter: 6/174  total_loss: 56.16  loss_cls_b1: 6.089  loss_cls_b2: 6.049  loss_cls_b21: 5.978  loss_cls_b22: 5.947  loss_cls_b3: 6.047  loss_cls_b31: 6.028  loss_cls_b32: 6.065  loss_cls_b33: 6.07  loss_triplet_b1: 1.408  loss_triplet_b2: 1.39  loss_triplet_b3: 1.434  loss_triplet_b22: 1.68  loss_triplet_b33: 1.812  time: 1.0634  data_time: 0.0007  lr: 6.16e-05  max_mem: 72M
[07/31 11:14:47] fastreid.utils.events INFO:  eta: 0:22:52  epoch/iter: 7/199  total_loss: 56.04  loss_cls_b1: 6.086  loss_cls_b2: 6.045  loss_cls_b21: 5.985  loss_cls_b22: 5.945  loss_cls_b3: 6.036  loss_cls_b31: 6.028  loss_cls_b32: 6.064  loss_cls_b33: 6.071  loss_triplet_b1: 1.402  loss_triplet_b2: 1.378  loss_triplet_b3: 1.407  loss_triplet_b22: 1.661  loss_triplet_b33: 1.809  time: 1.0690  data_time: 0.0005  lr: 6.56e-05  max_mem: 72M
[07/31 11:14:47] fastreid.utils.events INFO:  eta: 0:22:52  epoch/iter: 7/199  total_loss: 56.04  loss_cls_b1: 6.086  loss_cls_b2: 6.045  loss_cls_b21: 5.985  loss_cls_b22: 5.945  loss_cls_b3: 6.036  loss_cls_b31: 6.028  loss_cls_b32: 6.064  loss_cls_b33: 6.071  loss_triplet_b1: 1.402  loss_triplet_b2: 1.378  loss_triplet_b3: 1.407  loss_triplet_b22: 1.661  loss_triplet_b33: 1.809  time: 1.0690  data_time: 0.0005  lr: 6.56e-05  max_mem: 72M
[07/31 11:15:14] fastreid.utils.events INFO:  eta: 0:22:30  epoch/iter: 8/224  total_loss: 56.17  loss_cls_b1: 6.086  loss_cls_b2: 6.047  loss_cls_b21: 5.979  loss_cls_b22: 5.945  loss_cls_b3: 6.046  loss_cls_b31: 6.032  loss_cls_b32: 6.063  loss_cls_b33: 6.068  loss_triplet_b1: 1.432  loss_triplet_b2: 1.402  loss_triplet_b3: 1.433  loss_triplet_b22: 1.686  loss_triplet_b33: 1.825  time: 1.0708  data_time: 0.0009  lr: 6.95e-05  max_mem: 72M
[07/31 11:15:41] fastreid.engine.defaults INFO: Prepare testing set
[07/31 11:15:41] fastreid.data.datasets.bases INFO: => Loaded WildSplit7 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 67      | 363        | 1           |
| gallery  | 96      | 1634       | 1           |[0m
[07/31 11:15:41] fastreid.evaluation.evaluator INFO: Start inference on 1997 images
[07/31 11:15:53] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.7260 s / batch. ETA=0:00:03
[07/31 11:15:57] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:08.504779 (0.773162 s / batch per device, on 1 devices)
[07/31 11:15:57] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:08 (0.769857 s / batch per device, on 1 devices)
[07/31 11:15:57] fastreid.engine.defaults INFO: Evaluation results for WildSplit7 in csv format:
[07/31 11:15:57] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit7 | 84.08    | 91.90    | 93.02     | 56.40 | 10.19  | 70.24    |[0m
[07/31 11:15:57] fastreid.utils.events INFO:  eta: 0:22:06  epoch/iter: 9/249  total_loss: 56.16  loss_cls_b1: 6.089  loss_cls_b2: 6.056  loss_cls_b21: 5.973  loss_cls_b22: 5.968  loss_cls_b3: 6.031  loss_cls_b31: 6.037  loss_cls_b32: 6.053  loss_cls_b33: 6.063  loss_triplet_b1: 1.442  loss_triplet_b2: 1.408  loss_triplet_b3: 1.407  loss_triplet_b22: 1.686  loss_triplet_b33: 1.825  time: 1.0722  data_time: 0.0006  lr: 7.34e-05  max_mem: 252M
[07/31 11:16:22] fastreid.utils.events INFO:  eta: 0:21:36  epoch/iter: 10/274  total_loss: 56.18  loss_cls_b1: 6.104  loss_cls_b2: 6.055  loss_cls_b21: 5.974  loss_cls_b22: 5.973  loss_cls_b3: 6.054  loss_cls_b31: 6.041  loss_cls_b32: 6.044  loss_cls_b33: 6.066  loss_triplet_b1: 1.454  loss_triplet_b2: 1.429  loss_triplet_b3: 1.433  loss_triplet_b22: 1.69  loss_triplet_b33: 1.835  time: 1.0665  data_time: 0.0009  lr: 7.74e-05  max_mem: 252M
[07/31 11:16:48] fastreid.utils.events INFO:  eta: 0:21:06  epoch/iter: 11/299  total_loss: 56.19  loss_cls_b1: 6.092  loss_cls_b2: 6.055  loss_cls_b21: 5.976  loss_cls_b22: 5.985  loss_cls_b3: 6.058  loss_cls_b31: 6.042  loss_cls_b32: 6.043  loss_cls_b33: 6.066  loss_triplet_b1: 1.443  loss_triplet_b2: 1.433  loss_triplet_b3: 1.438  loss_triplet_b22: 1.69  loss_triplet_b33: 1.834  time: 1.0618  data_time: 0.0009  lr: 8.13e-05  max_mem: 252M
[07/31 11:17:13] fastreid.utils.events INFO:  eta: 0:20:37  epoch/iter: 12/324  total_loss: 56.19  loss_cls_b1: 6.086  loss_cls_b2: 6.065  loss_cls_b21: 5.978  loss_cls_b22: 5.973  loss_cls_b3: 6.066  loss_cls_b31: 6.042  loss_cls_b32: 6.044  loss_cls_b33: 6.068  loss_triplet_b1: 1.443  loss_triplet_b2: 1.433  loss_triplet_b3: 1.43  loss_triplet_b22: 1.688  loss_triplet_b33: 1.831  time: 1.0577  data_time: 0.0007  lr: 8.51e-05  max_mem: 252M
[07/31 11:17:38] fastreid.utils.events INFO:  eta: 0:20:08  epoch/iter: 13/349  total_loss: 56.33  loss_cls_b1: 6.084  loss_cls_b2: 6.065  loss_cls_b21: 6.008  loss_cls_b22: 5.968  loss_cls_b3: 6.065  loss_cls_b31: 6.031  loss_cls_b32: 6.044  loss_cls_b33: 6.068  loss_triplet_b1: 1.472  loss_triplet_b2: 1.454  loss_triplet_b3: 1.447  loss_triplet_b22: 1.7  loss_triplet_b33: 1.854  time: 1.0542  data_time: 0.0007  lr: 8.90e-05  max_mem: 252M
[07/31 11:18:04] fastreid.utils.events INFO:  eta: 0:19:39  epoch/iter: 14/374  total_loss: 56.48  loss_cls_b1: 6.089  loss_cls_b2: 6.058  loss_cls_b21: 6.04  loss_cls_b22: 5.979  loss_cls_b3: 6.073  loss_cls_b31: 6.022  loss_cls_b32: 6.047  loss_cls_b33: 6.072  loss_triplet_b1: 1.478  loss_triplet_b2: 1.462  loss_triplet_b3: 1.454  loss_triplet_b22: 1.71  loss_triplet_b33: 1.859  time: 1.0516  data_time: 0.0008  lr: 9.30e-05  max_mem: 252M
[07/31 11:18:29] fastreid.utils.events INFO:  eta: 0:19:10  epoch/iter: 15/399  total_loss: 56.65  loss_cls_b1: 6.096  loss_cls_b2: 6.075  loss_cls_b21: 6.044  loss_cls_b22: 5.986  loss_cls_b3: 6.074  loss_cls_b31: 6.023  loss_cls_b32: 6.049  loss_cls_b33: 6.074  loss_triplet_b1: 1.504  loss_triplet_b2: 1.507  loss_triplet_b3: 1.496  loss_triplet_b22: 1.758  loss_triplet_b33: 1.94  time: 1.0491  data_time: 0.0009  lr: 9.69e-05  max_mem: 252M
[07/31 11:18:29] fastreid.utils.events INFO:  eta: 0:19:10  epoch/iter: 15/399  total_loss: 56.65  loss_cls_b1: 6.096  loss_cls_b2: 6.075  loss_cls_b21: 6.044  loss_cls_b22: 5.986  loss_cls_b3: 6.074  loss_cls_b31: 6.023  loss_cls_b32: 6.049  loss_cls_b33: 6.074  loss_triplet_b1: 1.504  loss_triplet_b2: 1.507  loss_triplet_b3: 1.496  loss_triplet_b22: 1.758  loss_triplet_b33: 1.94  time: 1.0491  data_time: 0.0009  lr: 9.69e-05  max_mem: 252M
[07/31 11:18:54] fastreid.utils.events INFO:  eta: 0:18:41  epoch/iter: 16/424  total_loss: 56.83  loss_cls_b1: 6.106  loss_cls_b2: 6.069  loss_cls_b21: 6.051  loss_cls_b22: 5.988  loss_cls_b3: 6.079  loss_cls_b31: 6.015  loss_cls_b32: 6.049  loss_cls_b33: 6.086  loss_triplet_b1: 1.517  loss_triplet_b2: 1.534  loss_triplet_b3: 1.518  loss_triplet_b22: 1.776  loss_triplet_b33: 1.976  time: 1.0468  data_time: 0.0006  lr: 1.01e-04  max_mem: 252M
[07/31 11:19:20] fastreid.utils.events INFO:  eta: 0:18:14  epoch/iter: 17/449  total_loss: 56.96  loss_cls_b1: 6.104  loss_cls_b2: 6.067  loss_cls_b21: 6.07  loss_cls_b22: 5.992  loss_cls_b3: 6.094  loss_cls_b31: 6.009  loss_cls_b32: 6.053  loss_cls_b33: 6.088  loss_triplet_b1: 1.54  loss_triplet_b2: 1.572  loss_triplet_b3: 1.549  loss_triplet_b22: 1.776  loss_triplet_b33: 1.985  time: 1.0457  data_time: 0.0005  lr: 1.05e-04  max_mem: 252M
[07/31 11:19:45] fastreid.utils.events INFO:  eta: 0:17:44  epoch/iter: 18/474  total_loss: 56.9  loss_cls_b1: 6.091  loss_cls_b2: 6.078  loss_cls_b21: 6.075  loss_cls_b22: 5.99  loss_cls_b3: 6.094  loss_cls_b31: 6.01  loss_cls_b32: 6.053  loss_cls_b33: 6.089  loss_triplet_b1: 1.517  loss_triplet_b2: 1.554  loss_triplet_b3: 1.542  loss_triplet_b22: 1.772  loss_triplet_b33: 1.976  time: 1.0433  data_time: 0.0008  lr: 1.09e-04  max_mem: 252M
[07/31 11:20:10] fastreid.engine.defaults INFO: Prepare testing set
[07/31 11:20:10] fastreid.data.datasets.bases INFO: => Loaded WildSplit7 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 67      | 363        | 1           |
| gallery  | 96      | 1634       | 1           |[0m
[07/31 11:20:10] fastreid.evaluation.evaluator INFO: Start inference on 1997 images
[07/31 11:20:18] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.5383 s / batch. ETA=0:00:02
[07/31 11:20:21] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:05.683754 (0.516705 s / batch per device, on 1 devices)
[07/31 11:20:21] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:05 (0.514224 s / batch per device, on 1 devices)
[07/31 11:20:21] fastreid.engine.defaults INFO: Evaluation results for WildSplit7 in csv format:
[07/31 11:20:21] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit7 | 80.45    | 89.39    | 93.02     | 51.58 | 9.53   | 66.01    |[0m
[07/31 11:20:21] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit7_test/mgn_R50-ibn/model_best.pth
[07/31 11:20:22] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit7_test/mgn_R50-ibn/model_0019.pth
[07/31 11:20:23] fastreid.utils.events INFO:  eta: 0:17:16  epoch/iter: 19/499  total_loss: 57.03  loss_cls_b1: 6.098  loss_cls_b2: 6.08  loss_cls_b21: 6.058  loss_cls_b22: 5.983  loss_cls_b3: 6.091  loss_cls_b31: 6.015  loss_cls_b32: 6.049  loss_cls_b33: 6.089  loss_triplet_b1: 1.548  loss_triplet_b2: 1.587  loss_triplet_b3: 1.582  loss_triplet_b22: 1.783  loss_triplet_b33: 2.014  time: 1.0414  data_time: 0.0006  lr: 1.13e-04  max_mem: 252M
[07/31 11:20:48] fastreid.utils.events INFO:  eta: 0:16:49  epoch/iter: 20/524  total_loss: 56.95  loss_cls_b1: 6.101  loss_cls_b2: 6.072  loss_cls_b21: 6.059  loss_cls_b22: 5.99  loss_cls_b3: 6.093  loss_cls_b31: 6.015  loss_cls_b32: 6.043  loss_cls_b33: 6.089  loss_triplet_b1: 1.546  loss_triplet_b2: 1.577  loss_triplet_b3: 1.556  loss_triplet_b22: 1.783  loss_triplet_b33: 1.989  time: 1.0392  data_time: 0.0005  lr: 1.17e-04  max_mem: 252M
[07/31 11:21:13] fastreid.utils.events INFO:  eta: 0:16:21  epoch/iter: 21/549  total_loss: 56.93  loss_cls_b1: 6.099  loss_cls_b2: 6.077  loss_cls_b21: 6.069  loss_cls_b22: 5.99  loss_cls_b3: 6.103  loss_cls_b31: 6.015  loss_cls_b32: 6.046  loss_cls_b33: 6.09  loss_triplet_b1: 1.544  loss_triplet_b2: 1.567  loss_triplet_b3: 1.556  loss_triplet_b22: 1.779  loss_triplet_b33: 1.965  time: 1.0376  data_time: 0.0007  lr: 1.21e-04  max_mem: 252M
[07/31 11:21:38] fastreid.utils.events INFO:  eta: 0:15:53  epoch/iter: 22/574  total_loss: 56.91  loss_cls_b1: 6.092  loss_cls_b2: 6.086  loss_cls_b21: 6.056  loss_cls_b22: 5.987  loss_cls_b3: 6.103  loss_cls_b31: 6.029  loss_cls_b32: 6.04  loss_cls_b33: 6.093  loss_triplet_b1: 1.543  loss_triplet_b2: 1.553  loss_triplet_b3: 1.555  loss_triplet_b22: 1.784  loss_triplet_b33: 1.974  time: 1.0364  data_time: 0.0008  lr: 1.24e-04  max_mem: 252M
[07/31 11:22:03] fastreid.utils.events INFO:  eta: 0:15:26  epoch/iter: 23/599  total_loss: 56.88  loss_cls_b1: 6.09  loss_cls_b2: 6.06  loss_cls_b21: 6.05  loss_cls_b22: 5.985  loss_cls_b3: 6.109  loss_cls_b31: 6.014  loss_cls_b32: 6.04  loss_cls_b33: 6.086  loss_triplet_b1: 1.522  loss_triplet_b2: 1.551  loss_triplet_b3: 1.542  loss_triplet_b22: 1.776  loss_triplet_b33: 1.94  time: 1.0348  data_time: 0.0005  lr: 1.28e-04  max_mem: 252M
[07/31 11:22:03] fastreid.utils.events INFO:  eta: 0:15:26  epoch/iter: 23/599  total_loss: 56.88  loss_cls_b1: 6.09  loss_cls_b2: 6.06  loss_cls_b21: 6.05  loss_cls_b22: 5.985  loss_cls_b3: 6.109  loss_cls_b31: 6.014  loss_cls_b32: 6.04  loss_cls_b33: 6.086  loss_triplet_b1: 1.522  loss_triplet_b2: 1.551  loss_triplet_b3: 1.542  loss_triplet_b22: 1.776  loss_triplet_b33: 1.94  time: 1.0348  data_time: 0.0005  lr: 1.28e-04  max_mem: 252M
[07/31 11:22:28] fastreid.utils.events INFO:  eta: 0:14:59  epoch/iter: 24/624  total_loss: 56.84  loss_cls_b1: 6.084  loss_cls_b2: 6.068  loss_cls_b21: 6.048  loss_cls_b22: 5.997  loss_cls_b3: 6.109  loss_cls_b31: 6.037  loss_cls_b32: 6.04  loss_cls_b33: 6.091  loss_triplet_b1: 1.517  loss_triplet_b2: 1.535  loss_triplet_b3: 1.539  loss_triplet_b22: 1.731  loss_triplet_b33: 1.935  time: 1.0337  data_time: 0.0007  lr: 1.32e-04  max_mem: 252M
[07/31 11:22:53] fastreid.utils.events INFO:  eta: 0:14:32  epoch/iter: 25/649  total_loss: 56.88  loss_cls_b1: 6.084  loss_cls_b2: 6.055  loss_cls_b21: 6.039  loss_cls_b22: 5.985  loss_cls_b3: 6.106  loss_cls_b31: 6.037  loss_cls_b32: 6.039  loss_cls_b33: 6.089  loss_triplet_b1: 1.533  loss_triplet_b2: 1.544  loss_triplet_b3: 1.539  loss_triplet_b22: 1.767  loss_triplet_b33: 1.952  time: 1.0327  data_time: 0.0006  lr: 1.36e-04  max_mem: 252M
[07/31 11:23:18] fastreid.utils.events INFO:  eta: 0:14:05  epoch/iter: 26/674  total_loss: 56.88  loss_cls_b1: 6.083  loss_cls_b2: 6.04  loss_cls_b21: 6.022  loss_cls_b22: 5.992  loss_cls_b3: 6.086  loss_cls_b31: 6.013  loss_cls_b32: 6.04  loss_cls_b33: 6.103  loss_triplet_b1: 1.547  loss_triplet_b2: 1.552  loss_triplet_b3: 1.539  loss_triplet_b22: 1.775  loss_triplet_b33: 1.962  time: 1.0314  data_time: 0.0006  lr: 1.40e-04  max_mem: 252M
[07/31 11:23:43] fastreid.utils.events INFO:  eta: 0:13:38  epoch/iter: 27/699  total_loss: 56.8  loss_cls_b1: 6.074  loss_cls_b2: 6.037  loss_cls_b21: 6.034  loss_cls_b22: 5.997  loss_cls_b3: 6.107  loss_cls_b31: 6.007  loss_cls_b32: 6.047  loss_cls_b33: 6.083  loss_triplet_b1: 1.545  loss_triplet_b2: 1.551  loss_triplet_b3: 1.53  loss_triplet_b22: 1.758  loss_triplet_b33: 1.949  time: 1.0304  data_time: 0.0007  lr: 1.44e-04  max_mem: 252M
[07/31 11:24:09] fastreid.utils.events INFO:  eta: 0:13:13  epoch/iter: 28/724  total_loss: 56.8  loss_cls_b1: 6.071  loss_cls_b2: 6.04  loss_cls_b21: 6.037  loss_cls_b22: 6.007  loss_cls_b3: 6.098  loss_cls_b31: 6.005  loss_cls_b32: 6.045  loss_cls_b33: 6.075  loss_triplet_b1: 1.538  loss_triplet_b2: 1.551  loss_triplet_b3: 1.551  loss_triplet_b22: 1.751  loss_triplet_b33: 1.955  time: 1.0296  data_time: 0.0008  lr: 1.48e-04  max_mem: 252M
[07/31 11:24:34] fastreid.engine.defaults INFO: Prepare testing set
[07/31 11:24:34] fastreid.data.datasets.bases INFO: => Loaded WildSplit7 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 67      | 363        | 1           |
| gallery  | 96      | 1634       | 1           |[0m
[07/31 11:24:34] fastreid.evaluation.evaluator INFO: Start inference on 1997 images
[07/31 11:24:42] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.5422 s / batch. ETA=0:00:02
[07/31 11:24:44] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:05.696053 (0.517823 s / batch per device, on 1 devices)
[07/31 11:24:44] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:05 (0.516412 s / batch per device, on 1 devices)
[07/31 11:24:44] fastreid.engine.defaults INFO: Evaluation results for WildSplit7 in csv format:
[07/31 11:24:44] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit7 | 79.61    | 87.43    | 91.34     | 51.17 | 9.40   | 65.39    |[0m
[07/31 11:24:45] fastreid.utils.events INFO:  eta: 0:12:46  epoch/iter: 29/749  total_loss: 56.76  loss_cls_b1: 6.071  loss_cls_b2: 6.04  loss_cls_b21: 6.031  loss_cls_b22: 6.004  loss_cls_b3: 6.106  loss_cls_b31: 6.011  loss_cls_b32: 6.028  loss_cls_b33: 6.084  loss_triplet_b1: 1.522  loss_triplet_b2: 1.528  loss_triplet_b3: 1.54  loss_triplet_b22: 1.727  loss_triplet_b33: 1.94  time: 1.0286  data_time: 0.0006  lr: 1.52e-04  max_mem: 252M
[07/31 11:25:10] fastreid.utils.events INFO:  eta: 0:12:20  epoch/iter: 30/774  total_loss: 56.8  loss_cls_b1: 6.077  loss_cls_b2: 6.041  loss_cls_b21: 6.037  loss_cls_b22: 6.004  loss_cls_b3: 6.117  loss_cls_b31: 6.005  loss_cls_b32: 6.036  loss_cls_b33: 6.075  loss_triplet_b1: 1.538  loss_triplet_b2: 1.554  loss_triplet_b3: 1.562  loss_triplet_b22: 1.73  loss_triplet_b33: 1.943  time: 1.0279  data_time: 0.0005  lr: 1.56e-04  max_mem: 252M
[07/31 11:25:35] fastreid.utils.events INFO:  eta: 0:11:54  epoch/iter: 31/799  total_loss: 56.87  loss_cls_b1: 6.083  loss_cls_b2: 6.058  loss_cls_b21: 6.05  loss_cls_b22: 6.009  loss_cls_b3: 6.12  loss_cls_b31: 6.014  loss_cls_b32: 6.039  loss_cls_b33: 6.075  loss_triplet_b1: 1.545  loss_triplet_b2: 1.554  loss_triplet_b3: 1.572  loss_triplet_b22: 1.744  loss_triplet_b33: 1.944  time: 1.0270  data_time: 0.0006  lr: 1.60e-04  max_mem: 252M
[07/31 11:25:35] fastreid.utils.events INFO:  eta: 0:11:54  epoch/iter: 31/799  total_loss: 56.87  loss_cls_b1: 6.083  loss_cls_b2: 6.058  loss_cls_b21: 6.05  loss_cls_b22: 6.009  loss_cls_b3: 6.12  loss_cls_b31: 6.014  loss_cls_b32: 6.039  loss_cls_b33: 6.075  loss_triplet_b1: 1.545  loss_triplet_b2: 1.554  loss_triplet_b3: 1.572  loss_triplet_b22: 1.744  loss_triplet_b33: 1.944  time: 1.0270  data_time: 0.0006  lr: 1.60e-04  max_mem: 252M
[07/31 11:26:00] fastreid.utils.events INFO:  eta: 0:11:27  epoch/iter: 32/824  total_loss: 56.85  loss_cls_b1: 6.085  loss_cls_b2: 6.049  loss_cls_b21: 6.064  loss_cls_b22: 5.993  loss_cls_b3: 6.108  loss_cls_b31: 6  loss_cls_b32: 6.035  loss_cls_b33: 6.073  loss_triplet_b1: 1.551  loss_triplet_b2: 1.554  loss_triplet_b3: 1.575  loss_triplet_b22: 1.778  loss_triplet_b33: 1.94  time: 1.0262  data_time: 0.0008  lr: 1.64e-04  max_mem: 252M
[07/31 11:26:25] fastreid.utils.events INFO:  eta: 0:11:01  epoch/iter: 33/849  total_loss: 56.76  loss_cls_b1: 6.084  loss_cls_b2: 6.049  loss_cls_b21: 6.068  loss_cls_b22: 5.994  loss_cls_b3: 6.114  loss_cls_b31: 6.009  loss_cls_b32: 6.036  loss_cls_b33: 6.084  loss_triplet_b1: 1.535  loss_triplet_b2: 1.546  loss_triplet_b3: 1.559  loss_triplet_b22: 1.758  loss_triplet_b33: 1.938  time: 1.0254  data_time: 0.0005  lr: 1.68e-04  max_mem: 252M
[07/31 11:26:50] fastreid.utils.events INFO:  eta: 0:10:35  epoch/iter: 34/874  total_loss: 56.74  loss_cls_b1: 6.094  loss_cls_b2: 6.051  loss_cls_b21: 6.073  loss_cls_b22: 5.993  loss_cls_b3: 6.106  loss_cls_b31: 6.028  loss_cls_b32: 6.034  loss_cls_b33: 6.073  loss_triplet_b1: 1.53  loss_triplet_b2: 1.529  loss_triplet_b3: 1.545  loss_triplet_b22: 1.751  loss_triplet_b33: 1.936  time: 1.0247  data_time: 0.0006  lr: 1.72e-04  max_mem: 252M
[07/31 11:27:15] fastreid.utils.events INFO:  eta: 0:10:09  epoch/iter: 35/899  total_loss: 56.77  loss_cls_b1: 6.089  loss_cls_b2: 6.06  loss_cls_b21: 6.077  loss_cls_b22: 6.002  loss_cls_b3: 6.102  loss_cls_b31: 6.035  loss_cls_b32: 6.023  loss_cls_b33: 6.072  loss_triplet_b1: 1.535  loss_triplet_b2: 1.536  loss_triplet_b3: 1.559  loss_triplet_b22: 1.796  loss_triplet_b33: 1.943  time: 1.0238  data_time: 0.0005  lr: 1.76e-04  max_mem: 252M
[07/31 11:27:40] fastreid.utils.events INFO:  eta: 0:09:43  epoch/iter: 36/924  total_loss: 56.92  loss_cls_b1: 6.09  loss_cls_b2: 6.062  loss_cls_b21: 6.077  loss_cls_b22: 5.986  loss_cls_b3: 6.102  loss_cls_b31: 6.041  loss_cls_b32: 6.036  loss_cls_b33: 6.078  loss_triplet_b1: 1.56  loss_triplet_b2: 1.559  loss_triplet_b3: 1.57  loss_triplet_b22: 1.81  loss_triplet_b33: 1.972  time: 1.0232  data_time: 0.0008  lr: 1.80e-04  max_mem: 252M
[07/31 11:28:05] fastreid.utils.events INFO:  eta: 0:09:17  epoch/iter: 37/949  total_loss: 57.09  loss_cls_b1: 6.089  loss_cls_b2: 6.064  loss_cls_b21: 6.089  loss_cls_b22: 5.98  loss_cls_b3: 6.082  loss_cls_b31: 6.033  loss_cls_b32: 6.043  loss_cls_b33: 6.088  loss_triplet_b1: 1.575  loss_triplet_b2: 1.578  loss_triplet_b3: 1.583  loss_triplet_b22: 1.833  loss_triplet_b33: 1.989  time: 1.0227  data_time: 0.0006  lr: 1.84e-04  max_mem: 252M
[07/31 11:28:30] fastreid.utils.events INFO:  eta: 0:08:52  epoch/iter: 38/974  total_loss: 56.92  loss_cls_b1: 6.082  loss_cls_b2: 6.069  loss_cls_b21: 6.087  loss_cls_b22: 5.986  loss_cls_b3: 6.078  loss_cls_b31: 6.017  loss_cls_b32: 6.038  loss_cls_b33: 6.089  loss_triplet_b1: 1.563  loss_triplet_b2: 1.548  loss_triplet_b3: 1.559  loss_triplet_b22: 1.774  loss_triplet_b33: 1.948  time: 1.0219  data_time: 0.0008  lr: 1.87e-04  max_mem: 252M
[07/31 11:28:55] fastreid.utils.events INFO:  eta: 0:08:26  epoch/iter: 39/999  total_loss: 56.87  loss_cls_b1: 6.071  loss_cls_b2: 6.066  loss_cls_b21: 6.072  loss_cls_b22: 5.983  loss_cls_b3: 6.078  loss_cls_b31: 6.016  loss_cls_b32: 6.036  loss_cls_b33: 6.089  loss_triplet_b1: 1.564  loss_triplet_b2: 1.547  loss_triplet_b3: 1.53  loss_triplet_b22: 1.786  loss_triplet_b33: 1.966  time: 1.0213  data_time: 0.0007  lr: 1.91e-04  max_mem: 252M
[07/31 11:28:55] fastreid.engine.defaults INFO: Prepare testing set
[07/31 11:28:55] fastreid.data.datasets.bases INFO: => Loaded WildSplit7 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 67      | 363        | 1           |
| gallery  | 96      | 1634       | 1           |[0m
[07/31 11:28:55] fastreid.evaluation.evaluator INFO: Start inference on 1997 images
[07/31 11:29:03] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.5369 s / batch. ETA=0:00:02
[07/31 11:29:05] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:05.689753 (0.517250 s / batch per device, on 1 devices)
[07/31 11:29:05] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:05 (0.514656 s / batch per device, on 1 devices)
[07/31 11:29:05] fastreid.engine.defaults INFO: Evaluation results for WildSplit7 in csv format:
[07/31 11:29:05] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit7 | 79.89    | 87.71    | 90.78     | 51.25 | 9.48   | 65.57    |[0m
[07/31 11:29:06] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit7_test/mgn_R50-ibn/model_0039.pth
[07/31 11:29:06] fastreid.utils.events INFO:  eta: 0:08:26  epoch/iter: 39/999  total_loss: 56.87  loss_cls_b1: 6.071  loss_cls_b2: 6.066  loss_cls_b21: 6.072  loss_cls_b22: 5.983  loss_cls_b3: 6.078  loss_cls_b31: 6.016  loss_cls_b32: 6.036  loss_cls_b33: 6.089  loss_triplet_b1: 1.564  loss_triplet_b2: 1.547  loss_triplet_b3: 1.53  loss_triplet_b22: 1.786  loss_triplet_b33: 1.966  time: 1.0213  data_time: 0.0007  lr: 1.91e-04  max_mem: 252M
[07/31 11:29:06] fastreid.engine.hooks INFO: Open layer group "backbone, b1, b2, b3" training
[07/31 11:29:32] fastreid.utils.events INFO:  eta: 0:08:00  epoch/iter: 40/1024  total_loss: 56.6  loss_cls_b1: 6.063  loss_cls_b2: 6.058  loss_cls_b21: 6.047  loss_cls_b22: 5.977  loss_cls_b3: 6.066  loss_cls_b31: 5.986  loss_cls_b32: 6.034  loss_cls_b33: 6.06  loss_triplet_b1: 1.52  loss_triplet_b2: 1.534  loss_triplet_b3: 1.49  loss_triplet_b22: 1.746  loss_triplet_b33: 1.91  time: 1.0210  data_time: 0.0005  lr: 1.95e-04  max_mem: 252M
[07/31 11:29:57] fastreid.utils.events INFO:  eta: 0:07:34  epoch/iter: 41/1049  total_loss: 56.19  loss_cls_b1: 6.013  loss_cls_b2: 6.024  loss_cls_b21: 5.997  loss_cls_b22: 5.962  loss_cls_b3: 6.033  loss_cls_b31: 5.965  loss_cls_b32: 6.001  loss_cls_b33: 6.035  loss_triplet_b1: 1.454  loss_triplet_b2: 1.479  loss_triplet_b3: 1.443  loss_triplet_b22: 1.65  loss_triplet_b33: 1.827  time: 1.0209  data_time: 0.0006  lr: 1.99e-04  max_mem: 252M
[07/31 11:30:23] fastreid.utils.events INFO:  eta: 0:07:09  epoch/iter: 42/1074  total_loss: 55.63  loss_cls_b1: 5.947  loss_cls_b2: 5.97  loss_cls_b21: 5.942  loss_cls_b22: 5.916  loss_cls_b3: 5.994  loss_cls_b31: 5.901  loss_cls_b32: 5.949  loss_cls_b33: 5.982  loss_triplet_b1: 1.337  loss_triplet_b2: 1.304  loss_triplet_b3: 1.333  loss_triplet_b22: 1.505  loss_triplet_b33: 1.694  time: 1.0208  data_time: 0.0007  lr: 2.03e-04  max_mem: 252M
[07/31 11:30:48] fastreid.utils.events INFO:  eta: 0:06:43  epoch/iter: 43/1099  total_loss: 54.64  loss_cls_b1: 5.874  loss_cls_b2: 5.879  loss_cls_b21: 5.863  loss_cls_b22: 5.807  loss_cls_b3: 5.91  loss_cls_b31: 5.804  loss_cls_b32: 5.882  loss_cls_b33: 5.917  loss_triplet_b1: 1.173  loss_triplet_b2: 1.14  loss_triplet_b3: 1.142  loss_triplet_b22: 1.294  loss_triplet_b33: 1.39  time: 1.0207  data_time: 0.0007  lr: 2.07e-04  max_mem: 252M
[07/31 11:31:13] fastreid.utils.events INFO:  eta: 0:06:17  epoch/iter: 44/1124  total_loss: 47.54  loss_cls_b1: 5.218  loss_cls_b2: 5.317  loss_cls_b21: 5.338  loss_cls_b22: 5.164  loss_cls_b3: 5.432  loss_cls_b31: 5.331  loss_cls_b32: 5.291  loss_cls_b33: 5.64  loss_triplet_b1: 0.8608  loss_triplet_b2: 0.8644  loss_triplet_b3: 0.8607  loss_triplet_b22: 0.9855  loss_triplet_b33: 1.035  time: 1.0206  data_time: 0.0005  lr: 2.11e-04  max_mem: 252M
[07/31 11:31:39] fastreid.utils.events INFO:  eta: 0:05:52  epoch/iter: 45/1149  total_loss: 38.26  loss_cls_b1: 4.108  loss_cls_b2: 4.436  loss_cls_b21: 4.178  loss_cls_b22: 4.425  loss_cls_b3: 4.509  loss_cls_b31: 4.314  loss_cls_b32: 4.423  loss_cls_b33: 4.61  loss_triplet_b1: 0.6219  loss_triplet_b2: 0.6088  loss_triplet_b3: 0.6016  loss_triplet_b22: 0.6229  loss_triplet_b33: 0.6329  time: 1.0207  data_time: 0.0006  lr: 2.15e-04  max_mem: 252M
[07/31 11:32:04] fastreid.utils.events INFO:  eta: 0:05:26  epoch/iter: 46/1174  total_loss: 30.36  loss_cls_b1: 3.127  loss_cls_b2: 3.506  loss_cls_b21: 3.362  loss_cls_b22: 3.57  loss_cls_b3: 3.569  loss_cls_b31: 3.458  loss_cls_b32: 3.506  loss_cls_b33: 3.667  loss_triplet_b1: 0.4598  loss_triplet_b2: 0.4607  loss_triplet_b3: 0.4416  loss_triplet_b22: 0.4508  loss_triplet_b33: 0.4755  time: 1.0205  data_time: 0.0008  lr: 2.19e-04  max_mem: 252M
[07/31 11:32:30] fastreid.utils.events INFO:  eta: 0:05:01  epoch/iter: 47/1199  total_loss: 26.03  loss_cls_b1: 2.704  loss_cls_b2: 3.008  loss_cls_b21: 2.953  loss_cls_b22: 3.245  loss_cls_b3: 3.098  loss_cls_b31: 3.001  loss_cls_b32: 3.096  loss_cls_b33: 3.323  loss_triplet_b1: 0.3369  loss_triplet_b2: 0.3421  loss_triplet_b3: 0.3461  loss_triplet_b22: 0.3437  loss_triplet_b33: 0.36  time: 1.0204  data_time: 0.0006  lr: 2.23e-04  max_mem: 252M
[07/31 11:32:30] fastreid.utils.events INFO:  eta: 0:05:01  epoch/iter: 47/1199  total_loss: 26.03  loss_cls_b1: 2.704  loss_cls_b2: 3.008  loss_cls_b21: 2.953  loss_cls_b22: 3.245  loss_cls_b3: 3.098  loss_cls_b31: 3.001  loss_cls_b32: 3.096  loss_cls_b33: 3.323  loss_triplet_b1: 0.3369  loss_triplet_b2: 0.3421  loss_triplet_b3: 0.3461  loss_triplet_b22: 0.3437  loss_triplet_b33: 0.36  time: 1.0204  data_time: 0.0006  lr: 2.23e-04  max_mem: 252M
[07/31 11:32:55] fastreid.utils.events INFO:  eta: 0:04:36  epoch/iter: 48/1224  total_loss: 22.18  loss_cls_b1: 2.286  loss_cls_b2: 2.541  loss_cls_b21: 2.56  loss_cls_b22: 2.744  loss_cls_b3: 2.618  loss_cls_b31: 2.708  loss_cls_b32: 2.644  loss_cls_b33: 2.972  loss_triplet_b1: 0.2631  loss_triplet_b2: 0.2684  loss_triplet_b3: 0.2936  loss_triplet_b22: 0.2566  loss_triplet_b33: 0.2728  time: 1.0204  data_time: 0.0007  lr: 2.27e-04  max_mem: 252M
[07/31 11:33:21] fastreid.engine.defaults INFO: Prepare testing set
[07/31 11:33:21] fastreid.data.datasets.bases INFO: => Loaded WildSplit7 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 67      | 363        | 1           |
| gallery  | 96      | 1634       | 1           |[0m
[07/31 11:33:21] fastreid.evaluation.evaluator INFO: Start inference on 1997 images
[07/31 11:33:29] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.5382 s / batch. ETA=0:00:02
[07/31 11:33:31] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:05.671332 (0.515576 s / batch per device, on 1 devices)
[07/31 11:33:31] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:05 (0.514346 s / batch per device, on 1 devices)
[07/31 11:33:32] fastreid.engine.defaults INFO: Evaluation results for WildSplit7 in csv format:
[07/31 11:33:32] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit7 | 94.69    | 97.49    | 98.60     | 89.09 | 67.13  | 91.89    |[0m
[07/31 11:33:32] fastreid.utils.events INFO:  eta: 0:04:11  epoch/iter: 49/1249  total_loss: 20  loss_cls_b1: 1.884  loss_cls_b2: 2.182  loss_cls_b21: 2.171  loss_cls_b22: 2.388  loss_cls_b3: 2.298  loss_cls_b31: 2.312  loss_cls_b32: 2.325  loss_cls_b33: 2.638  loss_triplet_b1: 0.2156  loss_triplet_b2: 0.2253  loss_triplet_b3: 0.2287  loss_triplet_b22: 0.2153  loss_triplet_b33: 0.1872  time: 1.0203  data_time: 0.0009  lr: 2.31e-04  max_mem: 252M
[07/31 11:33:57] fastreid.utils.events INFO:  eta: 0:03:45  epoch/iter: 50/1274  total_loss: 16.05  loss_cls_b1: 1.589  loss_cls_b2: 1.873  loss_cls_b21: 1.833  loss_cls_b22: 1.95  loss_cls_b3: 1.82  loss_cls_b31: 1.951  loss_cls_b32: 2.037  loss_cls_b33: 2.278  loss_triplet_b1: 0.1586  loss_triplet_b2: 0.1792  loss_triplet_b3: 0.1697  loss_triplet_b22: 0.1562  loss_triplet_b33: 0.1444  time: 1.0204  data_time: 0.0006  lr: 2.35e-04  max_mem: 252M
[07/31 11:34:23] fastreid.utils.events INFO:  eta: 0:03:20  epoch/iter: 51/1299  total_loss: 14.52  loss_cls_b1: 1.376  loss_cls_b2: 1.656  loss_cls_b21: 1.67  loss_cls_b22: 1.827  loss_cls_b3: 1.688  loss_cls_b31: 1.781  loss_cls_b32: 1.847  loss_cls_b33: 2.11  loss_triplet_b1: 0.1283  loss_triplet_b2: 0.1452  loss_triplet_b3: 0.1494  loss_triplet_b22: 0.1279  loss_triplet_b33: 0.1191  time: 1.0204  data_time: 0.0007  lr: 2.39e-04  max_mem: 252M
[07/31 11:34:49] fastreid.utils.events INFO:  eta: 0:02:55  epoch/iter: 52/1324  total_loss: 13.96  loss_cls_b1: 1.284  loss_cls_b2: 1.526  loss_cls_b21: 1.558  loss_cls_b22: 1.764  loss_cls_b3: 1.568  loss_cls_b31: 1.679  loss_cls_b32: 1.743  loss_cls_b33: 2.005  loss_triplet_b1: 0.1002  loss_triplet_b2: 0.1247  loss_triplet_b3: 0.127  loss_triplet_b22: 0.1151  loss_triplet_b33: 0.1112  time: 1.0205  data_time: 0.0006  lr: 2.43e-04  max_mem: 252M
[07/31 11:35:14] fastreid.utils.events INFO:  eta: 0:02:30  epoch/iter: 53/1349  total_loss: 12.45  loss_cls_b1: 1.156  loss_cls_b2: 1.37  loss_cls_b21: 1.384  loss_cls_b22: 1.632  loss_cls_b3: 1.375  loss_cls_b31: 1.505  loss_cls_b32: 1.615  loss_cls_b33: 1.821  loss_triplet_b1: 0.08702  loss_triplet_b2: 0.1031  loss_triplet_b3: 0.1117  loss_triplet_b22: 0.09073  loss_triplet_b33: 0.07873  time: 1.0204  data_time: 0.0007  lr: 2.47e-04  max_mem: 252M
[07/31 11:35:40] fastreid.utils.events INFO:  eta: 0:02:05  epoch/iter: 54/1374  total_loss: 11.51  loss_cls_b1: 1.053  loss_cls_b2: 1.225  loss_cls_b21: 1.296  loss_cls_b22: 1.53  loss_cls_b3: 1.282  loss_cls_b31: 1.408  loss_cls_b32: 1.52  loss_cls_b33: 1.727  loss_triplet_b1: 0.06578  loss_triplet_b2: 0.08627  loss_triplet_b3: 0.08746  loss_triplet_b22: 0.07451  loss_triplet_b33: 0.07082  time: 1.0205  data_time: 0.0006  lr: 2.50e-04  max_mem: 252M
[07/31 11:36:05] fastreid.utils.events INFO:  eta: 0:01:40  epoch/iter: 55/1399  total_loss: 11.05  loss_cls_b1: 0.9791  loss_cls_b2: 1.154  loss_cls_b21: 1.25  loss_cls_b22: 1.418  loss_cls_b3: 1.219  loss_cls_b31: 1.323  loss_cls_b32: 1.446  loss_cls_b33: 1.669  loss_triplet_b1: 0.05822  loss_triplet_b2: 0.084  loss_triplet_b3: 0.07599  loss_triplet_b22: 0.05569  loss_triplet_b33: 0.06632  time: 1.0204  data_time: 0.0007  lr: 2.54e-04  max_mem: 252M
[07/31 11:36:05] fastreid.utils.events INFO:  eta: 0:01:40  epoch/iter: 55/1399  total_loss: 11.05  loss_cls_b1: 0.9791  loss_cls_b2: 1.154  loss_cls_b21: 1.25  loss_cls_b22: 1.418  loss_cls_b3: 1.219  loss_cls_b31: 1.323  loss_cls_b32: 1.446  loss_cls_b33: 1.669  loss_triplet_b1: 0.05822  loss_triplet_b2: 0.084  loss_triplet_b3: 0.07599  loss_triplet_b22: 0.05569  loss_triplet_b33: 0.06632  time: 1.0204  data_time: 0.0007  lr: 2.54e-04  max_mem: 252M
[07/31 11:36:31] fastreid.utils.events INFO:  eta: 0:01:15  epoch/iter: 56/1424  total_loss: 10.16  loss_cls_b1: 0.8868  loss_cls_b2: 1.06  loss_cls_b21: 1.144  loss_cls_b22: 1.241  loss_cls_b3: 1.13  loss_cls_b31: 1.237  loss_cls_b32: 1.31  loss_cls_b33: 1.586  loss_triplet_b1: 0.05601  loss_triplet_b2: 0.07204  loss_triplet_b3: 0.06483  loss_triplet_b22: 0.04829  loss_triplet_b33: 0.04449  time: 1.0205  data_time: 0.0006  lr: 2.58e-04  max_mem: 252M
[07/31 11:36:56] fastreid.utils.events INFO:  eta: 0:00:50  epoch/iter: 57/1449  total_loss: 8.884  loss_cls_b1: 0.7976  loss_cls_b2: 0.9348  loss_cls_b21: 0.9866  loss_cls_b22: 1.129  loss_cls_b3: 0.9407  loss_cls_b31: 1.104  loss_cls_b32: 1.199  loss_cls_b33: 1.398  loss_triplet_b1: 0.04123  loss_triplet_b2: 0.05977  loss_triplet_b3: 0.05338  loss_triplet_b22: 0.03663  loss_triplet_b33: 0.03683  time: 1.0205  data_time: 0.0006  lr: 2.62e-04  max_mem: 252M
[07/31 11:37:22] fastreid.utils.events INFO:  eta: 0:00:25  epoch/iter: 58/1474  total_loss: 8.529  loss_cls_b1: 0.7807  loss_cls_b2: 0.8767  loss_cls_b21: 0.9684  loss_cls_b22: 1.099  loss_cls_b3: 0.9015  loss_cls_b31: 1.072  loss_cls_b32: 1.131  loss_cls_b33: 1.338  loss_triplet_b1: 0.0381  loss_triplet_b2: 0.0494  loss_triplet_b3: 0.04974  loss_triplet_b22: 0.03462  loss_triplet_b33: 0.02989  time: 1.0206  data_time: 0.0011  lr: 2.66e-04  max_mem: 252M
[07/31 11:37:47] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/1499  total_loss: 8.122  loss_cls_b1: 0.7467  loss_cls_b2: 0.8365  loss_cls_b21: 0.9332  loss_cls_b22: 1.05  loss_cls_b3: 0.8572  loss_cls_b31: 1.003  loss_cls_b32: 1.09  loss_cls_b33: 1.304  loss_triplet_b1: 0.03476  loss_triplet_b2: 0.03738  loss_triplet_b3: 0.04281  loss_triplet_b22: 0.02661  loss_triplet_b33: 0.02416  time: 1.0206  data_time: 0.0008  lr: 2.70e-04  max_mem: 252M
[07/31 11:37:47] fastreid.engine.defaults INFO: Prepare testing set
[07/31 11:37:47] fastreid.data.datasets.bases INFO: => Loaded WildSplit7 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 67      | 363        | 1           |
| gallery  | 96      | 1634       | 1           |[0m
[07/31 11:37:47] fastreid.evaluation.evaluator INFO: Start inference on 1997 images
[07/31 11:37:56] fastreid.evaluation.evaluator INFO: Inference done 11/16. 0.5427 s / batch. ETA=0:00:02
[07/31 11:37:58] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:05.739037 (0.521731 s / batch per device, on 1 devices)
[07/31 11:37:58] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:05 (0.517353 s / batch per device, on 1 devices)
[07/31 11:37:58] fastreid.engine.defaults INFO: Evaluation results for WildSplit7 in csv format:
[07/31 11:37:58] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit7 | 96.09    | 98.32    | 98.88     | 92.26 | 76.75  | 94.17    |[0m
[07/31 11:37:59] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit7_test/mgn_R50-ibn/model_best.pth
[07/31 11:38:03] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit7_test/mgn_R50-ibn/model_final.pth
[07/31 11:38:05] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/1499  total_loss: 8.122  loss_cls_b1: 0.7467  loss_cls_b2: 0.8365  loss_cls_b21: 0.9332  loss_cls_b22: 1.05  loss_cls_b3: 0.8572  loss_cls_b31: 1.003  loss_cls_b32: 1.09  loss_cls_b33: 1.304  loss_triplet_b1: 0.03476  loss_triplet_b2: 0.03738  loss_triplet_b3: 0.04281  loss_triplet_b22: 0.02661  loss_triplet_b33: 0.02416  time: 1.0206  data_time: 0.0008  lr: 2.70e-04  max_mem: 252M
[07/31 11:38:05] fastreid.engine.hooks INFO: Overall training speed: 1498 iterations in 0:25:28 (1.0206 s / it)
[07/31 11:38:05] fastreid.engine.hooks INFO: Total training time: 0:26:49 (0:01:21 on hooks)
