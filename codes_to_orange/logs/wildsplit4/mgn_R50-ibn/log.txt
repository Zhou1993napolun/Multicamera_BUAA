[05/30 17:14:39] fastreid INFO: Rank of current process: 0. World size: 1
[05/30 17:14:39] fastreid INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.14 | packaged by conda-forge | (default, Nov 21 2022, 13:18:34) [GCC 10.4.0]
numpy                   1.23.5
fastreid                1.3 @/data01/zhangleiting/_codes/fast-reid/./fastreid
FASTREID_ENV_MODULE     <not set>
PyTorch                 1.11.0+cu113 @/data01/zhangleiting/anaconda3/envs/fast/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0                   NVIDIA A100-PCIE-40GB
CUDA_HOME               /usr/local/cuda-11.4
Pillow                  9.3.0
torchvision             0.12.0+cu113 @/data01/zhangleiting/anaconda3/envs/fast/lib/python3.8/site-packages/torchvision
torchvision arch flags  sm_35, sm_50, sm_60, sm_70, sm_75, sm_80, sm_86
cv2                     4.6.0
----------------------  ----------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[05/30 17:14:39] fastreid INFO: Command line arguments: Namespace(config_file='./configs/WildSplit4/mgn_R50-ibn.yml', dist_url='tcp://127.0.0.1:50163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[05/30 17:14:39] fastreid INFO: Contents of args.config_file=./configs/WildSplit4/mgn_R50-ibn.yml:
_BASE_: ../Base-MGN.yml

MODEL:
  BACKBONE:
    WITH_IBN: True

DATASETS:
  NAMES: ("WildSplit4",)
  TESTS: ("WildSplit4",)

OUTPUT_DIR: logs/wildsplit4/mgn_R50-ibn

[05/30 17:14:39] fastreid INFO: Running with full config:
CUDNN_BENCHMARK: True
DATALOADER:
  NUM_INSTANCE: 16
  NUM_WORKERS: 8
  SAMPLER_TRAIN: NaiveIdentitySampler
  SET_WEIGHT: []
DATASETS:
  COMBINEALL: False
  NAMES: ('WildSplit4',)
  TESTS: ('WildSplit4',)
INPUT:
  AFFINE:
    ENABLED: False
  AUGMIX:
    ENABLED: False
    PROB: 0.0
  AUTOAUG:
    ENABLED: True
    PROB: 0.1
  CJ:
    BRIGHTNESS: 0.15
    CONTRAST: 0.15
    ENABLED: False
    HUE: 0.1
    PROB: 0.5
    SATURATION: 0.1
  CROP:
    ENABLED: False
    RATIO: [0.75, 1.3333333333333333]
    SCALE: [0.16, 1]
    SIZE: [224, 224]
  FLIP:
    ENABLED: True
    PROB: 0.5
  PADDING:
    ENABLED: True
    MODE: constant
    SIZE: 10
  REA:
    ENABLED: True
    PROB: 0.5
    VALUE: [123.675, 116.28, 103.53]
  RPT:
    ENABLED: False
    PROB: 0.5
  SIZE_TEST: [384, 128]
  SIZE_TRAIN: [384, 128]
KD:
  EMA:
    ENABLED: False
    MOMENTUM: 0.999
  MODEL_CONFIG: []
  MODEL_WEIGHTS: []
MODEL:
  BACKBONE:
    ATT_DROP_RATE: 0.0
    DEPTH: 50x
    DROP_PATH_RATIO: 0.1
    DROP_RATIO: 0.0
    FEAT_DIM: 2048
    LAST_STRIDE: 1
    NAME: build_resnet_backbone
    NORM: BN
    PRETRAIN: True
    PRETRAIN_PATH: 
    SIE_COE: 3.0
    STRIDE_SIZE: (16, 16)
    WITH_IBN: True
    WITH_NL: False
    WITH_SE: False
  DEVICE: cuda
  FREEZE_LAYERS: ['backbone', 'b1', 'b2', 'b3']
  HEADS:
    CLS_LAYER: CircleSoftmax
    EMBEDDING_DIM: 256
    MARGIN: 0.35
    NAME: EmbeddingHead
    NECK_FEAT: after
    NORM: BN
    NUM_CLASSES: 0
    POOL_LAYER: GeneralizedMeanPoolingP
    SCALE: 64
    WITH_BNNECK: True
  LOSSES:
    CE:
      ALPHA: 0.2
      EPSILON: 0.1
      SCALE: 1.0
    CIRCLE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    COSFACE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    FL:
      ALPHA: 0.25
      GAMMA: 2
      SCALE: 1.0
    NAME: ('CrossEntropyLoss', 'TripletLoss')
    TRI:
      HARD_MINING: True
      MARGIN: 0.0
      NORM_FEAT: False
      SCALE: 1.0
  META_ARCHITECTURE: MGN
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.120000000000005, 57.375]
  QUEUE_SIZE: 8192
  WEIGHTS: 
OUTPUT_DIR: logs/wildsplit4/mgn_R50-ibn
SOLVER:
  AMP:
    ENABLED: True
  BASE_LR: 0.00035
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 20
  CLIP_GRADIENTS:
    CLIP_TYPE: norm
    CLIP_VALUE: 5.0
    ENABLED: False
    NORM_TYPE: 2.0
  DELAY_EPOCHS: 30
  ETA_MIN_LR: 7e-07
  FREEZE_ITERS: 1000
  GAMMA: 0.1
  HEADS_LR_FACTOR: 1.0
  IMS_PER_BATCH: 64
  MAX_EPOCH: 60
  MOMENTUM: 0.9
  NESTEROV: False
  OPT: Adam
  SCHED: CosineAnnealingLR
  STEPS: [40, 90]
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 2000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0005
  WEIGHT_DECAY_BIAS: 0.0005
  WEIGHT_DECAY_NORM: 0.0005
TEST:
  AQE:
    ALPHA: 3.0
    ENABLED: False
    QE_K: 5
    QE_TIME: 1
  EVAL_PERIOD: 10
  FLIP:
    ENABLED: False
  IMS_PER_BATCH: 128
  METRIC: cosine
  PRECISE_BN:
    DATASET: Market1501
    ENABLED: False
    NUM_ITER: 300
  RERANK:
    ENABLED: False
    K1: 20
    K2: 6
    LAMBDA: 0.3
  ROC:
    ENABLED: False
[05/30 17:14:39] fastreid INFO: Full config saved to /data01/zhangleiting/_codes/fast-reid/logs/wildsplit4/mgn_R50-ibn/config.yaml
[05/30 17:14:39] fastreid.utils.env INFO: Using a generated random seed 40480733
[05/30 17:14:39] fastreid.engine.defaults INFO: Prepare training set
[05/30 17:14:39] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| train    | 87      | 630        | 1           |[0m
[05/30 17:14:39] fastreid.data.build INFO: Using training sampler NaiveIdentitySampler
[05/30 17:14:40] fastreid.engine.defaults INFO: Auto-scaling the num_classes=87
[05/30 17:14:40] fastreid.modeling.backbones.resnet INFO: Loading pretrained model from /data01/zhangleiting/.cache/torch/checkpoints/resnet50_ibn_a-d9d0bb7b.pth
[05/30 17:14:41] fastreid.modeling.backbones.resnet INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc.{weight, bias}[0m
[05/30 17:14:47] fastreid.engine.defaults INFO: Model:
MGN(
  (backbone): Sequential(
    (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (5): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (6): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): IBN(
        (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (se): Identity()
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (b1): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b1_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=87, scale=64, margin=0.35)
  )
  (b2): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b2_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=87, scale=64, margin=0.35)
  )
  (b21_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=87, scale=64, margin=0.35)
  )
  (b22_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=87, scale=64, margin=0.35)
  )
  (b3): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b3_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=87, scale=64, margin=0.35)
  )
  (b31_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=87, scale=64, margin=0.35)
  )
  (b32_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=87, scale=64, margin=0.35)
  )
  (b33_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=87, scale=64, margin=0.35)
  )
)
[05/30 17:14:48] fastreid.utils.checkpoint INFO: No checkpoint found. Training model from scratch
[05/30 17:14:48] fastreid.engine.train_loop INFO: Starting training from epoch 0
[05/30 17:14:48] fastreid.engine.hooks INFO: Freeze layer group "backbone, b1, b2, b3" training for 1000 iterations
[05/30 17:14:55] fastreid.utils.events INFO:  eta: 0:02:15  epoch/iter: 0/8  total_loss: 54.99  loss_cls_b1: 5.903  loss_cls_b2: 5.998  loss_cls_b21: 5.888  loss_cls_b22: 6.118  loss_cls_b3: 5.971  loss_cls_b31: 6.053  loss_cls_b32: 6  loss_cls_b33: 5.997  loss_triplet_b1: 1.399  loss_triplet_b2: 1.417  loss_triplet_b3: 1.25  loss_triplet_b22: 1.492  loss_triplet_b33: 1.619  time: 0.2572  data_time: 0.0010  lr: 3.56e-05  max_mem: 23741M
[05/30 17:14:58] fastreid.utils.events INFO:  eta: 0:02:13  epoch/iter: 1/17  total_loss: 55.29  loss_cls_b1: 6.042  loss_cls_b2: 5.98  loss_cls_b21: 6.01  loss_cls_b22: 6.124  loss_cls_b3: 6.113  loss_cls_b31: 6.059  loss_cls_b32: 6.02  loss_cls_b33: 6.003  loss_triplet_b1: 1.351  loss_triplet_b2: 1.295  loss_triplet_b3: 1.241  loss_triplet_b22: 1.446  loss_triplet_b33: 1.556  time: 0.2582  data_time: 0.0011  lr: 3.70e-05  max_mem: 23741M
[05/30 17:15:00] fastreid.utils.events INFO:  eta: 0:02:10  epoch/iter: 2/26  total_loss: 55.1  loss_cls_b1: 6.032  loss_cls_b2: 5.963  loss_cls_b21: 6.025  loss_cls_b22: 6.088  loss_cls_b3: 6.127  loss_cls_b31: 6.053  loss_cls_b32: 6.036  loss_cls_b33: 5.951  loss_triplet_b1: 1.35  loss_triplet_b2: 1.321  loss_triplet_b3: 1.232  loss_triplet_b22: 1.451  loss_triplet_b33: 1.552  time: 0.2546  data_time: 0.0009  lr: 3.85e-05  max_mem: 23741M
[05/30 17:15:02] fastreid.utils.events INFO:  eta: 0:02:07  epoch/iter: 3/35  total_loss: 55.31  loss_cls_b1: 6.014  loss_cls_b2: 6.016  loss_cls_b21: 6.033  loss_cls_b22: 6.026  loss_cls_b3: 6.113  loss_cls_b31: 6.07  loss_cls_b32: 6.015  loss_cls_b33: 5.989  loss_triplet_b1: 1.322  loss_triplet_b2: 1.314  loss_triplet_b3: 1.236  loss_triplet_b22: 1.486  loss_triplet_b33: 1.577  time: 0.2535  data_time: 0.0008  lr: 3.99e-05  max_mem: 23741M
[05/30 17:15:05] fastreid.utils.events INFO:  eta: 0:02:04  epoch/iter: 4/44  total_loss: 55.51  loss_cls_b1: 6.032  loss_cls_b2: 5.998  loss_cls_b21: 6.058  loss_cls_b22: 6.052  loss_cls_b3: 6.125  loss_cls_b31: 6.055  loss_cls_b32: 6  loss_cls_b33: 5.991  loss_triplet_b1: 1.351  loss_triplet_b2: 1.321  loss_triplet_b3: 1.25  loss_triplet_b22: 1.492  loss_triplet_b33: 1.58  time: 0.2532  data_time: 0.0007  lr: 4.11e-05  max_mem: 23741M
[05/30 17:15:07] fastreid.utils.events INFO:  eta: 0:02:02  epoch/iter: 5/53  total_loss: 55.59  loss_cls_b1: 6.038  loss_cls_b2: 6.018  loss_cls_b21: 6.089  loss_cls_b22: 6.021  loss_cls_b3: 6.094  loss_cls_b31: 6.053  loss_cls_b32: 6.015  loss_cls_b33: 5.969  loss_triplet_b1: 1.351  loss_triplet_b2: 1.356  loss_triplet_b3: 1.25  loss_triplet_b22: 1.496  loss_triplet_b33: 1.599  time: 0.2529  data_time: 0.0007  lr: 4.26e-05  max_mem: 23741M
[05/30 17:15:09] fastreid.utils.events INFO:  eta: 0:02:00  epoch/iter: 6/62  total_loss: 55.51  loss_cls_b1: 6.032  loss_cls_b2: 6.022  loss_cls_b21: 6.087  loss_cls_b22: 6.044  loss_cls_b3: 6.101  loss_cls_b31: 6.055  loss_cls_b32: 5.997  loss_cls_b33: 5.987  loss_triplet_b1: 1.351  loss_triplet_b2: 1.368  loss_triplet_b3: 1.25  loss_triplet_b22: 1.492  loss_triplet_b33: 1.573  time: 0.2524  data_time: 0.0007  lr: 4.40e-05  max_mem: 23741M
[05/30 17:15:12] fastreid.utils.events INFO:  eta: 0:01:57  epoch/iter: 7/71  total_loss: 55.31  loss_cls_b1: 6.016  loss_cls_b2: 6.018  loss_cls_b21: 6.089  loss_cls_b22: 6.043  loss_cls_b3: 6.121  loss_cls_b31: 6.06  loss_cls_b32: 5.999  loss_cls_b33: 5.989  loss_triplet_b1: 1.344  loss_triplet_b2: 1.321  loss_triplet_b3: 1.245  loss_triplet_b22: 1.487  loss_triplet_b33: 1.564  time: 0.2521  data_time: 0.0008  lr: 4.54e-05  max_mem: 23741M
[05/30 17:15:14] fastreid.utils.events INFO:  eta: 0:01:55  epoch/iter: 8/80  total_loss: 55.1  loss_cls_b1: 6  loss_cls_b2: 6.013  loss_cls_b21: 6.087  loss_cls_b22: 6.044  loss_cls_b3: 6.117  loss_cls_b31: 6.055  loss_cls_b32: 5.997  loss_cls_b33: 5.987  loss_triplet_b1: 1.337  loss_triplet_b2: 1.321  loss_triplet_b3: 1.232  loss_triplet_b22: 1.481  loss_triplet_b33: 1.556  time: 0.2517  data_time: 0.0008  lr: 4.68e-05  max_mem: 23741M
[05/30 17:15:16] fastreid.engine.defaults INFO: Prepare testing set
[05/30 17:15:16] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 46      | 138        | 1           |
| gallery  | 81      | 610        | 1           |[0m
[05/30 17:15:16] fastreid.evaluation.evaluator INFO: Start inference on 748 images
[05/30 17:15:21] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:01.525756 (1.525756 s / batch per device, on 1 devices)
[05/30 17:15:21] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:01 (1.523841 s / batch per device, on 1 devices)
[05/30 17:15:22] fastreid.engine.defaults INFO: Evaluation results for WildSplit4 in csv format:
[05/30 17:15:22] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit4 | 70.99    | 85.50    | 89.31     | 51.53 | 23.43  | 61.26    |[0m
[05/30 17:15:22] fastreid.utils.events INFO:  eta: 0:01:52  epoch/iter: 9/89  total_loss: 55.33  loss_cls_b1: 6.038  loss_cls_b2: 6.028  loss_cls_b21: 6.098  loss_cls_b22: 6.043  loss_cls_b3: 6.094  loss_cls_b31: 6.06  loss_cls_b32: 6.032  loss_cls_b33: 5.987  loss_triplet_b1: 1.351  loss_triplet_b2: 1.321  loss_triplet_b3: 1.245  loss_triplet_b22: 1.487  loss_triplet_b33: 1.564  time: 0.2514  data_time: 0.0010  lr: 4.82e-05  max_mem: 23741M
[05/30 17:15:24] fastreid.utils.events INFO:  eta: 0:01:50  epoch/iter: 10/98  total_loss: 55.55  loss_cls_b1: 6.032  loss_cls_b2: 6.013  loss_cls_b21: 6.116  loss_cls_b22: 6.036  loss_cls_b3: 6.117  loss_cls_b31: 6.054  loss_cls_b32: 6.031  loss_cls_b33: 5.987  loss_triplet_b1: 1.361  loss_triplet_b2: 1.37  loss_triplet_b3: 1.255  loss_triplet_b22: 1.499  loss_triplet_b33: 1.593  time: 0.2523  data_time: 0.0012  lr: 4.96e-05  max_mem: 23741M
[05/30 17:15:26] fastreid.utils.events INFO:  eta: 0:01:48  epoch/iter: 11/107  total_loss: 55.56  loss_cls_b1: 6.027  loss_cls_b2: 6.006  loss_cls_b21: 6.108  loss_cls_b22: 6.043  loss_cls_b3: 6.112  loss_cls_b31: 6.055  loss_cls_b32: 6.007  loss_cls_b33: 5.994  loss_triplet_b1: 1.385  loss_triplet_b2: 1.381  loss_triplet_b3: 1.268  loss_triplet_b22: 1.52  loss_triplet_b33: 1.618  time: 0.2525  data_time: 0.0008  lr: 5.11e-05  max_mem: 23741M
[05/30 17:15:29] fastreid.utils.events INFO:  eta: 0:01:46  epoch/iter: 12/116  total_loss: 55.58  loss_cls_b1: 6.035  loss_cls_b2: 6.013  loss_cls_b21: 6.112  loss_cls_b22: 6.044  loss_cls_b3: 6.117  loss_cls_b31: 6.055  loss_cls_b32: 6.013  loss_cls_b33: 5.997  loss_triplet_b1: 1.396  loss_triplet_b2: 1.374  loss_triplet_b3: 1.268  loss_triplet_b22: 1.52  loss_triplet_b33: 1.617  time: 0.2539  data_time: 0.0006  lr: 5.25e-05  max_mem: 23741M
[05/30 17:15:31] fastreid.utils.events INFO:  eta: 0:01:44  epoch/iter: 13/125  total_loss: 55.62  loss_cls_b1: 6.034  loss_cls_b2: 6.013  loss_cls_b21: 6.104  loss_cls_b22: 6.043  loss_cls_b3: 6.124  loss_cls_b31: 6.055  loss_cls_b32: 5.997  loss_cls_b33: 6.005  loss_triplet_b1: 1.41  loss_triplet_b2: 1.394  loss_triplet_b3: 1.312  loss_triplet_b22: 1.535  loss_triplet_b33: 1.624  time: 0.2550  data_time: 0.0005  lr: 5.39e-05  max_mem: 23741M
[05/30 17:15:34] fastreid.utils.events INFO:  eta: 0:01:42  epoch/iter: 14/134  total_loss: 55.6  loss_cls_b1: 6.042  loss_cls_b2: 6.012  loss_cls_b21: 6.093  loss_cls_b22: 6.042  loss_cls_b3: 6.124  loss_cls_b31: 6.06  loss_cls_b32: 5.994  loss_cls_b33: 6.009  loss_triplet_b1: 1.407  loss_triplet_b2: 1.391  loss_triplet_b3: 1.305  loss_triplet_b22: 1.528  loss_triplet_b33: 1.617  time: 0.2584  data_time: 0.0007  lr: 5.53e-05  max_mem: 23741M
[05/30 17:15:42] fastreid.utils.events INFO:  eta: 0:01:40  epoch/iter: 15/143  total_loss: 55.67  loss_cls_b1: 6.049  loss_cls_b2: 6.016  loss_cls_b21: 6.092  loss_cls_b22: 6.043  loss_cls_b3: 6.126  loss_cls_b31: 6.053  loss_cls_b32: 5.993  loss_cls_b33: 6.005  loss_triplet_b1: 1.417  loss_triplet_b2: 1.397  loss_triplet_b3: 1.324  loss_triplet_b22: 1.54  loss_triplet_b33: 1.632  time: 0.2921  data_time: 0.0006  lr: 5.67e-05  max_mem: 23741M
[05/30 17:15:55] fastreid.utils.events INFO:  eta: 0:01:37  epoch/iter: 16/152  total_loss: 55.64  loss_cls_b1: 6.05  loss_cls_b2: 6.022  loss_cls_b21: 6.092  loss_cls_b22: 6.036  loss_cls_b3: 6.125  loss_cls_b31: 6.054  loss_cls_b32: 5.981  loss_cls_b33: 6.01  loss_triplet_b1: 1.419  loss_triplet_b2: 1.398  loss_triplet_b3: 1.32  loss_triplet_b22: 1.539  loss_triplet_b33: 1.63  time: 0.3638  data_time: 0.0007  lr: 5.82e-05  max_mem: 23741M
[05/30 17:16:09] fastreid.utils.events INFO:  eta: 0:01:36  epoch/iter: 17/161  total_loss: 55.71  loss_cls_b1: 6.051  loss_cls_b2: 6.022  loss_cls_b21: 6.093  loss_cls_b22: 6.043  loss_cls_b3: 6.124  loss_cls_b31: 6.058  loss_cls_b32: 5.981  loss_cls_b33: 6.009  loss_triplet_b1: 1.421  loss_triplet_b2: 1.404  loss_triplet_b3: 1.332  loss_triplet_b22: 1.546  loss_triplet_b33: 1.634  time: 0.4251  data_time: 0.0009  lr: 5.96e-05  max_mem: 23741M
[05/30 17:16:22] fastreid.utils.events INFO:  eta: 0:01:34  epoch/iter: 18/170  total_loss: 55.81  loss_cls_b1: 6.042  loss_cls_b2: 6.035  loss_cls_b21: 6.092  loss_cls_b22: 6.049  loss_cls_b3: 6.123  loss_cls_b31: 6.054  loss_cls_b32: 5.981  loss_cls_b33: 6.012  loss_triplet_b1: 1.427  loss_triplet_b2: 1.412  loss_triplet_b3: 1.342  loss_triplet_b22: 1.553  loss_triplet_b33: 1.647  time: 0.4790  data_time: 0.0010  lr: 6.10e-05  max_mem: 23741M
[05/30 17:16:36] fastreid.engine.defaults INFO: Prepare testing set
[05/30 17:16:36] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 46      | 138        | 1           |
| gallery  | 81      | 610        | 1           |[0m
[05/30 17:16:36] fastreid.evaluation.evaluator INFO: Start inference on 748 images
[05/30 17:16:39] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:00.384541 (0.384541 s / batch per device, on 1 devices)
[05/30 17:16:39] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.382667 s / batch per device, on 1 devices)
[05/30 17:16:39] fastreid.engine.defaults INFO: Evaluation results for WildSplit4 in csv format:
[05/30 17:16:39] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit4 | 70.23    | 82.44    | 88.55     | 48.62 | 20.04  | 59.43    |[0m
[05/30 17:16:39] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit4/mgn_R50-ibn/model_best.pth
[05/30 17:16:40] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit4/mgn_R50-ibn/model_0019.pth
[05/30 17:16:41] fastreid.utils.events INFO:  eta: 0:01:32  epoch/iter: 19/179  total_loss: 55.82  loss_cls_b1: 6.049  loss_cls_b2: 6.036  loss_cls_b21: 6.092  loss_cls_b22: 6.053  loss_cls_b3: 6.124  loss_cls_b31: 6.058  loss_cls_b32: 5.979  loss_cls_b33: 6.011  loss_triplet_b1: 1.424  loss_triplet_b2: 1.404  loss_triplet_b3: 1.334  loss_triplet_b22: 1.551  loss_triplet_b33: 1.648  time: 0.5325  data_time: 0.0010  lr: 6.24e-05  max_mem: 23741M
[05/30 17:16:53] fastreid.utils.events INFO:  eta: 0:01:30  epoch/iter: 20/188  total_loss: 55.84  loss_cls_b1: 6.048  loss_cls_b2: 6.037  loss_cls_b21: 6.092  loss_cls_b22: 6.046  loss_cls_b3: 6.124  loss_cls_b31: 6.06  loss_cls_b32: 5.979  loss_cls_b33: 6.009  loss_triplet_b1: 1.429  loss_triplet_b2: 1.412  loss_triplet_b3: 1.342  loss_triplet_b22: 1.55  loss_triplet_b33: 1.649  time: 0.5752  data_time: 0.0015  lr: 6.38e-05  max_mem: 23741M
[05/30 17:17:07] fastreid.utils.events INFO:  eta: 0:01:28  epoch/iter: 21/197  total_loss: 55.83  loss_cls_b1: 6.045  loss_cls_b2: 6.039  loss_cls_b21: 6.092  loss_cls_b22: 6.044  loss_cls_b3: 6.129  loss_cls_b31: 6.058  loss_cls_b32: 5.98  loss_cls_b33: 6.022  loss_triplet_b1: 1.421  loss_triplet_b2: 1.404  loss_triplet_b3: 1.338  loss_triplet_b22: 1.549  loss_triplet_b33: 1.651  time: 0.6186  data_time: 0.0015  lr: 6.52e-05  max_mem: 23741M
[05/30 17:17:10] fastreid.utils.events INFO:  eta: 0:01:27  epoch/iter: 22/199  total_loss: 55.83  loss_cls_b1: 6.049  loss_cls_b2: 6.039  loss_cls_b21: 6.092  loss_cls_b22: 6.044  loss_cls_b3: 6.127  loss_cls_b31: 6.058  loss_cls_b32: 5.981  loss_cls_b33: 6.016  loss_triplet_b1: 1.421  loss_triplet_b2: 1.404  loss_triplet_b3: 1.338  loss_triplet_b22: 1.549  loss_triplet_b33: 1.651  time: 0.6277  data_time: 0.0014  lr: 6.56e-05  max_mem: 23741M
[05/30 17:17:21] fastreid.utils.events INFO:  eta: 0:01:26  epoch/iter: 22/206  total_loss: 55.87  loss_cls_b1: 6.045  loss_cls_b2: 6.053  loss_cls_b21: 6.092  loss_cls_b22: 6.045  loss_cls_b3: 6.127  loss_cls_b31: 6.048  loss_cls_b32: 5.978  loss_cls_b33: 6.022  loss_triplet_b1: 1.428  loss_triplet_b2: 1.404  loss_triplet_b3: 1.348  loss_triplet_b22: 1.551  loss_triplet_b33: 1.651  time: 0.6551  data_time: 0.0008  lr: 6.67e-05  max_mem: 23741M
[05/30 17:17:35] fastreid.utils.events INFO:  eta: 0:01:25  epoch/iter: 23/215  total_loss: 56.01  loss_cls_b1: 6.039  loss_cls_b2: 6.053  loss_cls_b21: 6.092  loss_cls_b22: 6.043  loss_cls_b3: 6.13  loss_cls_b31: 6.052  loss_cls_b32: 5.97  loss_cls_b33: 6.024  loss_triplet_b1: 1.432  loss_triplet_b2: 1.414  loss_triplet_b3: 1.361  loss_triplet_b22: 1.564  loss_triplet_b33: 1.669  time: 0.6925  data_time: 0.0009  lr: 6.81e-05  max_mem: 23741M
[05/30 17:17:49] fastreid.utils.events INFO:  eta: 0:01:24  epoch/iter: 24/224  total_loss: 56.05  loss_cls_b1: 6.051  loss_cls_b2: 6.053  loss_cls_b21: 6.087  loss_cls_b22: 6.041  loss_cls_b3: 6.124  loss_cls_b31: 6.048  loss_cls_b32: 5.975  loss_cls_b33: 6.021  loss_triplet_b1: 1.438  loss_triplet_b2: 1.426  loss_triplet_b3: 1.374  loss_triplet_b22: 1.567  loss_triplet_b33: 1.673  time: 0.7271  data_time: 0.0010  lr: 6.95e-05  max_mem: 23741M
[05/30 17:18:03] fastreid.utils.events INFO:  eta: 0:01:23  epoch/iter: 25/233  total_loss: 56.01  loss_cls_b1: 6.038  loss_cls_b2: 6.037  loss_cls_b21: 6.082  loss_cls_b22: 6.043  loss_cls_b3: 6.127  loss_cls_b31: 6.04  loss_cls_b32: 5.978  loss_cls_b33: 6.026  loss_triplet_b1: 1.433  loss_triplet_b2: 1.419  loss_triplet_b3: 1.374  loss_triplet_b22: 1.559  loss_triplet_b33: 1.673  time: 0.7586  data_time: 0.0008  lr: 7.09e-05  max_mem: 23741M
[05/30 17:18:17] fastreid.utils.events INFO:  eta: 0:01:22  epoch/iter: 26/242  total_loss: 56.05  loss_cls_b1: 6.034  loss_cls_b2: 6.042  loss_cls_b21: 6.082  loss_cls_b22: 6.038  loss_cls_b3: 6.127  loss_cls_b31: 6.046  loss_cls_b32: 5.975  loss_cls_b33: 6.031  loss_triplet_b1: 1.435  loss_triplet_b2: 1.428  loss_triplet_b3: 1.38  loss_triplet_b22: 1.564  loss_triplet_b33: 1.697  time: 0.7882  data_time: 0.0007  lr: 7.23e-05  max_mem: 23741M
[05/30 17:18:30] fastreid.utils.events INFO:  eta: 0:01:21  epoch/iter: 27/251  total_loss: 55.92  loss_cls_b1: 6.028  loss_cls_b2: 6.042  loss_cls_b21: 6.074  loss_cls_b22: 6.038  loss_cls_b3: 6.127  loss_cls_b31: 6.042  loss_cls_b32: 5.974  loss_cls_b33: 6.032  loss_triplet_b1: 1.433  loss_triplet_b2: 1.426  loss_triplet_b3: 1.38  loss_triplet_b22: 1.561  loss_triplet_b33: 1.678  time: 0.8134  data_time: 0.0008  lr: 7.37e-05  max_mem: 23741M
[05/30 17:18:44] fastreid.utils.events INFO:  eta: 0:01:21  epoch/iter: 28/260  total_loss: 55.87  loss_cls_b1: 6.031  loss_cls_b2: 6.039  loss_cls_b21: 6.075  loss_cls_b22: 6.035  loss_cls_b3: 6.127  loss_cls_b31: 6.036  loss_cls_b32: 5.98  loss_cls_b33: 6.031  loss_triplet_b1: 1.435  loss_triplet_b2: 1.419  loss_triplet_b3: 1.374  loss_triplet_b22: 1.561  loss_triplet_b33: 1.686  time: 0.8371  data_time: 0.0008  lr: 7.52e-05  max_mem: 23741M
[05/30 17:18:58] fastreid.engine.defaults INFO: Prepare testing set
[05/30 17:18:58] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 46      | 138        | 1           |
| gallery  | 81      | 610        | 1           |[0m
[05/30 17:18:58] fastreid.evaluation.evaluator INFO: Start inference on 748 images
[05/30 17:19:01] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:00.398596 (0.398596 s / batch per device, on 1 devices)
[05/30 17:19:01] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.396614 s / batch per device, on 1 devices)
[05/30 17:19:01] fastreid.engine.defaults INFO: Evaluation results for WildSplit4 in csv format:
[05/30 17:19:01] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit4 | 70.99    | 82.44    | 88.55     | 48.09 | 20.27  | 59.54    |[0m
[05/30 17:19:01] fastreid.utils.events INFO:  eta: 0:01:41  epoch/iter: 29/269  total_loss: 56.03  loss_cls_b1: 6.033  loss_cls_b2: 6.044  loss_cls_b21: 6.074  loss_cls_b22: 6.035  loss_cls_b3: 6.125  loss_cls_b31: 6.039  loss_cls_b32: 5.979  loss_cls_b33: 6.034  loss_triplet_b1: 1.447  loss_triplet_b2: 1.439  loss_triplet_b3: 1.386  loss_triplet_b22: 1.572  loss_triplet_b33: 1.735  time: 0.8608  data_time: 0.0008  lr: 7.66e-05  max_mem: 23741M
[05/30 17:19:15] fastreid.utils.events INFO:  eta: 0:03:31  epoch/iter: 30/278  total_loss: 56.03  loss_cls_b1: 6.035  loss_cls_b2: 6.046  loss_cls_b21: 6.07  loss_cls_b22: 6.031  loss_cls_b3: 6.125  loss_cls_b31: 6.046  loss_cls_b32: 5.979  loss_cls_b33: 6.031  loss_triplet_b1: 1.452  loss_triplet_b2: 1.453  loss_triplet_b3: 1.391  loss_triplet_b22: 1.569  loss_triplet_b33: 1.743  time: 0.8822  data_time: 0.0011  lr: 7.80e-05  max_mem: 23741M
[05/30 17:19:29] fastreid.utils.events INFO:  eta: 0:04:08  epoch/iter: 31/287  total_loss: 56.03  loss_cls_b1: 6.035  loss_cls_b2: 6.042  loss_cls_b21: 6.074  loss_cls_b22: 6.021  loss_cls_b3: 6.128  loss_cls_b31: 6.046  loss_cls_b32: 5.972  loss_cls_b33: 6.036  loss_triplet_b1: 1.442  loss_triplet_b2: 1.453  loss_triplet_b3: 1.382  loss_triplet_b22: 1.568  loss_triplet_b33: 1.738  time: 0.9034  data_time: 0.0011  lr: 7.94e-05  max_mem: 23741M
[05/30 17:19:42] fastreid.utils.events INFO:  eta: 0:05:35  epoch/iter: 32/296  total_loss: 56.03  loss_cls_b1: 6.038  loss_cls_b2: 6.045  loss_cls_b21: 6.065  loss_cls_b22: 6.021  loss_cls_b3: 6.127  loss_cls_b31: 6.039  loss_cls_b32: 5.971  loss_cls_b33: 6.046  loss_triplet_b1: 1.446  loss_triplet_b2: 1.456  loss_triplet_b3: 1.383  loss_triplet_b22: 1.568  loss_triplet_b33: 1.73  time: 0.9207  data_time: 0.0008  lr: 8.08e-05  max_mem: 23741M
[05/30 17:19:56] fastreid.utils.events INFO:  eta: 0:05:35  epoch/iter: 33/305  total_loss: 56.01  loss_cls_b1: 6.043  loss_cls_b2: 6.048  loss_cls_b21: 6.057  loss_cls_b22: 6.013  loss_cls_b3: 6.127  loss_cls_b31: 6.046  loss_cls_b32: 5.971  loss_cls_b33: 6.046  loss_triplet_b1: 1.452  loss_triplet_b2: 1.456  loss_triplet_b3: 1.383  loss_triplet_b22: 1.568  loss_triplet_b33: 1.719  time: 0.9393  data_time: 0.0007  lr: 8.22e-05  max_mem: 23741M
[05/30 17:20:10] fastreid.utils.events INFO:  eta: 0:05:27  epoch/iter: 34/314  total_loss: 56.06  loss_cls_b1: 6.035  loss_cls_b2: 6.046  loss_cls_b21: 6.059  loss_cls_b22: 6.017  loss_cls_b3: 6.126  loss_cls_b31: 6.041  loss_cls_b32: 5.972  loss_cls_b33: 6.049  loss_triplet_b1: 1.456  loss_triplet_b2: 1.462  loss_triplet_b3: 1.386  loss_triplet_b22: 1.574  loss_triplet_b33: 1.743  time: 0.9561  data_time: 0.0009  lr: 8.37e-05  max_mem: 23741M
[05/30 17:20:23] fastreid.utils.events INFO:  eta: 0:05:16  epoch/iter: 35/323  total_loss: 56.06  loss_cls_b1: 6.044  loss_cls_b2: 6.044  loss_cls_b21: 6.057  loss_cls_b22: 6.027  loss_cls_b3: 6.118  loss_cls_b31: 6.037  loss_cls_b32: 5.974  loss_cls_b33: 6.055  loss_triplet_b1: 1.446  loss_triplet_b2: 1.462  loss_triplet_b3: 1.385  loss_triplet_b22: 1.592  loss_triplet_b33: 1.743  time: 0.9697  data_time: 0.0010  lr: 8.51e-05  max_mem: 23741M
[05/30 17:20:37] fastreid.utils.events INFO:  eta: 0:05:05  epoch/iter: 36/332  total_loss: 56.08  loss_cls_b1: 6.035  loss_cls_b2: 6.045  loss_cls_b21: 6.06  loss_cls_b22: 6.031  loss_cls_b3: 6.113  loss_cls_b31: 6.037  loss_cls_b32: 5.979  loss_cls_b33: 6.061  loss_triplet_b1: 1.456  loss_triplet_b2: 1.478  loss_triplet_b3: 1.391  loss_triplet_b22: 1.611  loss_triplet_b33: 1.753  time: 0.9855  data_time: 0.0009  lr: 8.65e-05  max_mem: 23741M
[05/30 17:20:51] fastreid.utils.events INFO:  eta: 0:04:53  epoch/iter: 37/341  total_loss: 56.1  loss_cls_b1: 6.031  loss_cls_b2: 6.044  loss_cls_b21: 6.064  loss_cls_b22: 6.027  loss_cls_b3: 6.109  loss_cls_b31: 6.048  loss_cls_b32: 5.979  loss_cls_b33: 6.067  loss_triplet_b1: 1.453  loss_triplet_b2: 1.473  loss_triplet_b3: 1.397  loss_triplet_b22: 1.618  loss_triplet_b33: 1.751  time: 1.0001  data_time: 0.0010  lr: 8.79e-05  max_mem: 23741M
[05/30 17:21:04] fastreid.utils.events INFO:  eta: 0:04:40  epoch/iter: 38/350  total_loss: 56.15  loss_cls_b1: 6.031  loss_cls_b2: 6.045  loss_cls_b21: 6.061  loss_cls_b22: 6.036  loss_cls_b3: 6.107  loss_cls_b31: 6.041  loss_cls_b32: 5.982  loss_cls_b33: 6.07  loss_triplet_b1: 1.462  loss_triplet_b2: 1.482  loss_triplet_b3: 1.401  loss_triplet_b22: 1.618  loss_triplet_b33: 1.756  time: 1.0112  data_time: 0.0008  lr: 8.93e-05  max_mem: 23741M
[05/30 17:21:18] fastreid.engine.defaults INFO: Prepare testing set
[05/30 17:21:18] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 46      | 138        | 1           |
| gallery  | 81      | 610        | 1           |[0m
[05/30 17:21:18] fastreid.evaluation.evaluator INFO: Start inference on 748 images
[05/30 17:21:22] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:00.404434 (0.404434 s / batch per device, on 1 devices)
[05/30 17:21:22] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.402565 s / batch per device, on 1 devices)
[05/30 17:21:22] fastreid.engine.defaults INFO: Evaluation results for WildSplit4 in csv format:
[05/30 17:21:22] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit4 | 68.70    | 82.44    | 89.31     | 47.47 | 19.02  | 58.09    |[0m
[05/30 17:21:22] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit4/mgn_R50-ibn/model_0039.pth
[05/30 17:21:23] fastreid.utils.events INFO:  eta: 0:04:27  epoch/iter: 39/359  total_loss: 56.15  loss_cls_b1: 6.026  loss_cls_b2: 6.045  loss_cls_b21: 6.067  loss_cls_b22: 6.035  loss_cls_b3: 6.109  loss_cls_b31: 6.032  loss_cls_b32: 5.987  loss_cls_b33: 6.074  loss_triplet_b1: 1.471  loss_triplet_b2: 1.482  loss_triplet_b3: 1.4  loss_triplet_b22: 1.622  loss_triplet_b33: 1.764  time: 1.0245  data_time: 0.0012  lr: 9.08e-05  max_mem: 23741M
[05/30 17:21:27] fastreid.utils.events INFO:  eta: 0:04:13  epoch/iter: 40/368  total_loss: 56.15  loss_cls_b1: 6.03  loss_cls_b2: 6.042  loss_cls_b21: 6.073  loss_cls_b22: 6.017  loss_cls_b3: 6.117  loss_cls_b31: 6.037  loss_cls_b32: 5.987  loss_cls_b33: 6.07  loss_triplet_b1: 1.471  loss_triplet_b2: 1.485  loss_triplet_b3: 1.4  loss_triplet_b22: 1.639  loss_triplet_b33: 1.769  time: 1.0106  data_time: 0.0018  lr: 9.22e-05  max_mem: 23741M
[05/30 17:21:38] fastreid.utils.events INFO:  eta: 0:03:59  epoch/iter: 41/377  total_loss: 56.14  loss_cls_b1: 6.03  loss_cls_b2: 6.041  loss_cls_b21: 6.072  loss_cls_b22: 6.01  loss_cls_b3: 6.117  loss_cls_b31: 6.037  loss_cls_b32: 5.984  loss_cls_b33: 6.074  loss_triplet_b1: 1.476  loss_triplet_b2: 1.487  loss_triplet_b3: 1.401  loss_triplet_b22: 1.626  loss_triplet_b33: 1.769  time: 1.0150  data_time: 0.0015  lr: 9.36e-05  max_mem: 23741M
[05/30 17:21:52] fastreid.utils.events INFO:  eta: 0:03:46  epoch/iter: 42/386  total_loss: 56.11  loss_cls_b1: 6.017  loss_cls_b2: 6.029  loss_cls_b21: 6.07  loss_cls_b22: 6.017  loss_cls_b3: 6.109  loss_cls_b31: 6.037  loss_cls_b32: 5.984  loss_cls_b33: 6.082  loss_triplet_b1: 1.471  loss_triplet_b2: 1.482  loss_triplet_b3: 1.401  loss_triplet_b22: 1.631  loss_triplet_b33: 1.764  time: 1.0276  data_time: 0.0008  lr: 9.50e-05  max_mem: 23741M
[05/30 17:22:06] fastreid.utils.events INFO:  eta: 0:03:34  epoch/iter: 43/395  total_loss: 56.11  loss_cls_b1: 6.017  loss_cls_b2: 6.029  loss_cls_b21: 6.072  loss_cls_b22: 6.021  loss_cls_b3: 6.105  loss_cls_b31: 6.037  loss_cls_b32: 5.978  loss_cls_b33: 6.074  loss_triplet_b1: 1.471  loss_triplet_b2: 1.478  loss_triplet_b3: 1.403  loss_triplet_b22: 1.631  loss_triplet_b33: 1.769  time: 1.0392  data_time: 0.0008  lr: 9.64e-05  max_mem: 23741M
[05/30 17:22:12] fastreid.utils.events INFO:  eta: 0:03:28  epoch/iter: 44/399  total_loss: 56.11  loss_cls_b1: 6.013  loss_cls_b2: 6.029  loss_cls_b21: 6.073  loss_cls_b22: 6.029  loss_cls_b3: 6.105  loss_cls_b31: 6.041  loss_cls_b32: 5.976  loss_cls_b33: 6.074  loss_triplet_b1: 1.471  loss_triplet_b2: 1.482  loss_triplet_b3: 1.401  loss_triplet_b22: 1.631  loss_triplet_b33: 1.769  time: 1.0441  data_time: 0.0008  lr: 9.71e-05  max_mem: 23741M
[05/30 17:22:19] fastreid.utils.events INFO:  eta: 0:03:21  epoch/iter: 44/404  total_loss: 56.11  loss_cls_b1: 6.015  loss_cls_b2: 6.029  loss_cls_b21: 6.073  loss_cls_b22: 6.027  loss_cls_b3: 6.106  loss_cls_b31: 6.044  loss_cls_b32: 5.98  loss_cls_b33: 6.08  loss_triplet_b1: 1.476  loss_triplet_b2: 1.487  loss_triplet_b3: 1.405  loss_triplet_b22: 1.639  loss_triplet_b33: 1.773  time: 1.0498  data_time: 0.0008  lr: 9.78e-05  max_mem: 23741M
[05/30 17:22:33] fastreid.utils.events INFO:  eta: 0:03:08  epoch/iter: 45/413  total_loss: 56.11  loss_cls_b1: 6.021  loss_cls_b2: 6.029  loss_cls_b21: 6.073  loss_cls_b22: 6.033  loss_cls_b3: 6.104  loss_cls_b31: 6.05  loss_cls_b32: 5.986  loss_cls_b33: 6.082  loss_triplet_b1: 1.471  loss_triplet_b2: 1.485  loss_triplet_b3: 1.401  loss_triplet_b22: 1.639  loss_triplet_b33: 1.777  time: 1.0598  data_time: 0.0011  lr: 9.93e-05  max_mem: 23741M
[05/30 17:22:47] fastreid.utils.events INFO:  eta: 0:02:55  epoch/iter: 46/422  total_loss: 56.11  loss_cls_b1: 6.015  loss_cls_b2: 6.029  loss_cls_b21: 6.08  loss_cls_b22: 6.029  loss_cls_b3: 6.107  loss_cls_b31: 6.06  loss_cls_b32: 5.989  loss_cls_b33: 6.088  loss_triplet_b1: 1.465  loss_triplet_b2: 1.483  loss_triplet_b3: 1.4  loss_triplet_b22: 1.631  loss_triplet_b33: 1.769  time: 1.0701  data_time: 0.0010  lr: 1.01e-04  max_mem: 23741M
[05/30 17:23:00] fastreid.utils.events INFO:  eta: 0:02:41  epoch/iter: 47/431  total_loss: 56.11  loss_cls_b1: 6.028  loss_cls_b2: 6.03  loss_cls_b21: 6.082  loss_cls_b22: 6.035  loss_cls_b3: 6.104  loss_cls_b31: 6.06  loss_cls_b32: 5.989  loss_cls_b33: 6.082  loss_triplet_b1: 1.48  loss_triplet_b2: 1.488  loss_triplet_b3: 1.405  loss_triplet_b22: 1.631  loss_triplet_b33: 1.777  time: 1.0781  data_time: 0.0009  lr: 1.02e-04  max_mem: 23741M
[05/30 17:23:14] fastreid.utils.events INFO:  eta: 0:02:28  epoch/iter: 48/440  total_loss: 56.11  loss_cls_b1: 6.033  loss_cls_b2: 6.024  loss_cls_b21: 6.082  loss_cls_b22: 6.035  loss_cls_b3: 6.102  loss_cls_b31: 6.05  loss_cls_b32: 5.987  loss_cls_b33: 6.082  loss_triplet_b1: 1.48  loss_triplet_b2: 1.488  loss_triplet_b3: 1.4  loss_triplet_b22: 1.631  loss_triplet_b33: 1.777  time: 1.0880  data_time: 0.0008  lr: 1.04e-04  max_mem: 23741M
[05/30 17:23:28] fastreid.engine.defaults INFO: Prepare testing set
[05/30 17:23:28] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 46      | 138        | 1           |
| gallery  | 81      | 610        | 1           |[0m
[05/30 17:23:28] fastreid.evaluation.evaluator INFO: Start inference on 748 images
[05/30 17:23:31] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:00.388747 (0.388747 s / batch per device, on 1 devices)
[05/30 17:23:31] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.386853 s / batch per device, on 1 devices)
[05/30 17:23:31] fastreid.engine.defaults INFO: Evaluation results for WildSplit4 in csv format:
[05/30 17:23:31] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit4 | 68.70    | 81.68    | 89.31     | 47.76 | 19.63  | 58.23    |[0m
[05/30 17:23:31] fastreid.utils.events INFO:  eta: 0:02:14  epoch/iter: 49/449  total_loss: 56.11  loss_cls_b1: 6.033  loss_cls_b2: 6.026  loss_cls_b21: 6.094  loss_cls_b22: 6.035  loss_cls_b3: 6.097  loss_cls_b31: 6.044  loss_cls_b32: 5.987  loss_cls_b33: 6.084  loss_triplet_b1: 1.486  loss_triplet_b2: 1.485  loss_triplet_b3: 1.4  loss_triplet_b22: 1.639  loss_triplet_b33: 1.778  time: 1.0955  data_time: 0.0009  lr: 1.05e-04  max_mem: 23741M
[05/30 17:23:45] fastreid.utils.events INFO:  eta: 0:02:01  epoch/iter: 50/458  total_loss: 56.15  loss_cls_b1: 6.034  loss_cls_b2: 6.024  loss_cls_b21: 6.082  loss_cls_b22: 6.035  loss_cls_b3: 6.102  loss_cls_b31: 6.056  loss_cls_b32: 5.983  loss_cls_b33: 6.084  loss_triplet_b1: 1.491  loss_triplet_b2: 1.493  loss_triplet_b3: 1.41  loss_triplet_b22: 1.643  loss_triplet_b33: 1.79  time: 1.1045  data_time: 0.0012  lr: 1.06e-04  max_mem: 23741M
[05/30 17:23:59] fastreid.utils.events INFO:  eta: 0:01:47  epoch/iter: 51/467  total_loss: 56.23  loss_cls_b1: 6.021  loss_cls_b2: 6.026  loss_cls_b21: 6.076  loss_cls_b22: 6.036  loss_cls_b3: 6.1  loss_cls_b31: 6.057  loss_cls_b32: 5.983  loss_cls_b33: 6.084  loss_triplet_b1: 1.498  loss_triplet_b2: 1.504  loss_triplet_b3: 1.415  loss_triplet_b22: 1.647  loss_triplet_b33: 1.79  time: 1.1115  data_time: 0.0011  lr: 1.08e-04  max_mem: 23741M
[05/30 17:24:12] fastreid.utils.events INFO:  eta: 0:01:34  epoch/iter: 52/476  total_loss: 56.33  loss_cls_b1: 6.028  loss_cls_b2: 6.026  loss_cls_b21: 6.094  loss_cls_b22: 6.036  loss_cls_b3: 6.1  loss_cls_b31: 6.053  loss_cls_b32: 5.979  loss_cls_b33: 6.086  loss_triplet_b1: 1.524  loss_triplet_b2: 1.509  loss_triplet_b3: 1.43  loss_triplet_b22: 1.649  loss_triplet_b33: 1.804  time: 1.1185  data_time: 0.0009  lr: 1.09e-04  max_mem: 23741M
[05/30 17:24:26] fastreid.utils.events INFO:  eta: 0:01:21  epoch/iter: 53/485  total_loss: 56.42  loss_cls_b1: 6.023  loss_cls_b2: 6.022  loss_cls_b21: 6.088  loss_cls_b22: 6.037  loss_cls_b3: 6.106  loss_cls_b31: 6.046  loss_cls_b32: 5.974  loss_cls_b33: 6.089  loss_triplet_b1: 1.526  loss_triplet_b2: 1.514  loss_triplet_b3: 1.458  loss_triplet_b22: 1.66  loss_triplet_b33: 1.813  time: 1.1265  data_time: 0.0009  lr: 1.11e-04  max_mem: 23741M
[05/30 17:24:39] fastreid.utils.events INFO:  eta: 0:01:07  epoch/iter: 54/494  total_loss: 56.4  loss_cls_b1: 6.017  loss_cls_b2: 6.02  loss_cls_b21: 6.073  loss_cls_b22: 6.04  loss_cls_b3: 6.119  loss_cls_b31: 6.056  loss_cls_b32: 5.974  loss_cls_b33: 6.084  loss_triplet_b1: 1.526  loss_triplet_b2: 1.51  loss_triplet_b3: 1.451  loss_triplet_b22: 1.66  loss_triplet_b33: 1.82  time: 1.1314  data_time: 0.0008  lr: 1.12e-04  max_mem: 23741M
[05/30 17:24:52] fastreid.utils.events INFO:  eta: 0:00:54  epoch/iter: 55/503  total_loss: 56.4  loss_cls_b1: 6.019  loss_cls_b2: 6.02  loss_cls_b21: 6.087  loss_cls_b22: 6.042  loss_cls_b3: 6.108  loss_cls_b31: 6.049  loss_cls_b32: 5.969  loss_cls_b33: 6.084  loss_triplet_b1: 1.526  loss_triplet_b2: 1.51  loss_triplet_b3: 1.44  loss_triplet_b22: 1.66  loss_triplet_b33: 1.819  time: 1.1371  data_time: 0.0008  lr: 1.13e-04  max_mem: 23741M
[05/30 17:25:06] fastreid.utils.events INFO:  eta: 0:00:40  epoch/iter: 56/512  total_loss: 56.34  loss_cls_b1: 6.025  loss_cls_b2: 6.02  loss_cls_b21: 6.087  loss_cls_b22: 6.04  loss_cls_b3: 6.119  loss_cls_b31: 6.046  loss_cls_b32: 5.967  loss_cls_b33: 6.075  loss_triplet_b1: 1.527  loss_triplet_b2: 1.509  loss_triplet_b3: 1.446  loss_triplet_b22: 1.66  loss_triplet_b33: 1.813  time: 1.1432  data_time: 0.0009  lr: 1.15e-04  max_mem: 23741M
[05/30 17:25:19] fastreid.utils.events INFO:  eta: 0:00:27  epoch/iter: 57/521  total_loss: 56.23  loss_cls_b1: 6.017  loss_cls_b2: 6.014  loss_cls_b21: 6.088  loss_cls_b22: 6.041  loss_cls_b3: 6.113  loss_cls_b31: 6.046  loss_cls_b32: 5.967  loss_cls_b33: 6.064  loss_triplet_b1: 1.532  loss_triplet_b2: 1.502  loss_triplet_b3: 1.434  loss_triplet_b22: 1.658  loss_triplet_b33: 1.813  time: 1.1489  data_time: 0.0008  lr: 1.16e-04  max_mem: 23741M
[05/30 17:25:33] fastreid.utils.events INFO:  eta: 0:00:13  epoch/iter: 58/530  total_loss: 56.24  loss_cls_b1: 6.013  loss_cls_b2: 6.014  loss_cls_b21: 6.088  loss_cls_b22: 6.041  loss_cls_b3: 6.119  loss_cls_b31: 6.049  loss_cls_b32: 5.958  loss_cls_b33: 6.062  loss_triplet_b1: 1.535  loss_triplet_b2: 1.508  loss_triplet_b3: 1.44  loss_triplet_b22: 1.653  loss_triplet_b33: 1.813  time: 1.1556  data_time: 0.0008  lr: 1.18e-04  max_mem: 23741M
[05/30 17:25:47] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/539  total_loss: 56.25  loss_cls_b1: 6.025  loss_cls_b2: 6.013  loss_cls_b21: 6.088  loss_cls_b22: 6.04  loss_cls_b3: 6.119  loss_cls_b31: 6.053  loss_cls_b32: 5.966  loss_cls_b33: 6.052  loss_triplet_b1: 1.535  loss_triplet_b2: 1.493  loss_triplet_b3: 1.432  loss_triplet_b22: 1.671  loss_triplet_b33: 1.822  time: 1.1617  data_time: 0.0008  lr: 1.19e-04  max_mem: 23741M
[05/30 17:25:47] fastreid.engine.defaults INFO: Prepare testing set
[05/30 17:25:47] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 46      | 138        | 1           |
| gallery  | 81      | 610        | 1           |[0m
[05/30 17:25:47] fastreid.evaluation.evaluator INFO: Start inference on 748 images
[05/30 17:25:50] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:00.394184 (0.394184 s / batch per device, on 1 devices)
[05/30 17:25:50] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.392196 s / batch per device, on 1 devices)
[05/30 17:25:50] fastreid.engine.defaults INFO: Evaluation results for WildSplit4 in csv format:
[05/30 17:25:50] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit4 | 69.47    | 83.97    | 88.55     | 47.65 | 19.46  | 58.56    |[0m
[05/30 17:25:50] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit4/mgn_R50-ibn/model_final.pth
[05/30 17:25:51] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/539  total_loss: 56.25  loss_cls_b1: 6.025  loss_cls_b2: 6.013  loss_cls_b21: 6.088  loss_cls_b22: 6.04  loss_cls_b3: 6.119  loss_cls_b31: 6.053  loss_cls_b32: 5.966  loss_cls_b33: 6.052  loss_triplet_b1: 1.535  loss_triplet_b2: 1.493  loss_triplet_b3: 1.432  loss_triplet_b22: 1.671  loss_triplet_b33: 1.822  time: 1.1617  data_time: 0.0008  lr: 1.19e-04  max_mem: 23741M
[05/30 17:25:51] fastreid.engine.hooks INFO: Overall training speed: 538 iterations in 0:10:25 (1.1617 s / it)
[05/30 17:25:51] fastreid.engine.hooks INFO: Total training time: 0:10:57 (0:00:32 on hooks)
[12/27 00:31:58] fastreid INFO: Rank of current process: 0. World size: 1
[12/27 00:31:59] fastreid INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.14 | packaged by conda-forge | (default, Nov 21 2022, 13:18:34) [GCC 10.4.0]
numpy                   1.23.5
fastreid                1.3 @/data01/zhangleiting/_codes/fast-reid/./fastreid
FASTREID_ENV_MODULE     <not set>
PyTorch                 1.11.0+cu113 @/data01/zhangleiting/anaconda3/envs/fast/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1,2,3             NVIDIA A100-PCIE-40GB
CUDA_HOME               /usr/local/cuda-11.4
Pillow                  9.3.0
torchvision             0.12.0+cu113 @/data01/zhangleiting/anaconda3/envs/fast/lib/python3.8/site-packages/torchvision
torchvision arch flags  sm_35, sm_50, sm_60, sm_70, sm_75, sm_80, sm_86
cv2                     4.6.0
----------------------  ----------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[12/27 00:31:59] fastreid INFO: Command line arguments: Namespace(config_file='./configs/WildSplit4/mgn_R50-ibn.yml', dist_url='tcp://127.0.0.1:50163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.DEVICE', 'cuda:0'], resume=False)
[12/27 00:31:59] fastreid INFO: Contents of args.config_file=./configs/WildSplit4/mgn_R50-ibn.yml:
_BASE_: ../Base-MGN.yml

MODEL:
  BACKBONE:
    WITH_IBN: True

DATASETS:
  NAMES: ("WildSplit4",)
  TESTS: ("WildSplit4",)

OUTPUT_DIR: logs/wildsplit4/mgn_R50-ibn

[12/27 00:31:59] fastreid INFO: Running with full config:
CUDNN_BENCHMARK: True
DATALOADER:
  NUM_INSTANCE: 16
  NUM_WORKERS: 8
  SAMPLER_TRAIN: NaiveIdentitySampler
  SET_WEIGHT: []
DATASETS:
  COMBINEALL: False
  NAMES: ('WildSplit4',)
  TESTS: ('WildSplit4',)
INPUT:
  AFFINE:
    ENABLED: False
  AUGMIX:
    ENABLED: False
    PROB: 0.0
  AUTOAUG:
    ENABLED: True
    PROB: 0.1
  CJ:
    BRIGHTNESS: 0.15
    CONTRAST: 0.15
    ENABLED: False
    HUE: 0.1
    PROB: 0.5
    SATURATION: 0.1
  CROP:
    ENABLED: False
    RATIO: [0.75, 1.3333333333333333]
    SCALE: [0.16, 1]
    SIZE: [224, 224]
  FLIP:
    ENABLED: True
    PROB: 0.5
  PADDING:
    ENABLED: True
    MODE: constant
    SIZE: 10
  REA:
    ENABLED: True
    PROB: 0.5
    VALUE: [123.675, 116.28, 103.53]
  RPT:
    ENABLED: False
    PROB: 0.5
  SIZE_TEST: [384, 128]
  SIZE_TRAIN: [384, 128]
KD:
  EMA:
    ENABLED: False
    MOMENTUM: 0.999
  MODEL_CONFIG: []
  MODEL_WEIGHTS: []
MODEL:
  BACKBONE:
    ATT_DROP_RATE: 0.0
    DEPTH: 50x
    DROP_PATH_RATIO: 0.1
    DROP_RATIO: 0.0
    FEAT_DIM: 2048
    LAST_STRIDE: 1
    NAME: build_resnet_backbone
    NORM: BN
    PRETRAIN: True
    PRETRAIN_PATH: 
    SIE_COE: 3.0
    STRIDE_SIZE: (16, 16)
    WITH_IBN: True
    WITH_NL: False
    WITH_SE: False
  DEVICE: cuda:0
  FREEZE_LAYERS: ['backbone', 'b1', 'b2', 'b3']
  HEADS:
    CLS_LAYER: CircleSoftmax
    EMBEDDING_DIM: 256
    MARGIN: 0.35
    NAME: EmbeddingHead
    NECK_FEAT: after
    NORM: BN
    NUM_CLASSES: 0
    POOL_LAYER: GeneralizedMeanPoolingP
    SCALE: 64
    WITH_BNNECK: True
  LOSSES:
    CE:
      ALPHA: 0.2
      EPSILON: 0.1
      SCALE: 1.0
    CIRCLE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    COSFACE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    FL:
      ALPHA: 0.25
      GAMMA: 2
      SCALE: 1.0
    NAME: ('CrossEntropyLoss', 'TripletLoss')
    TRI:
      HARD_MINING: True
      MARGIN: 0.0
      NORM_FEAT: False
      SCALE: 1.0
  META_ARCHITECTURE: MGN
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.120000000000005, 57.375]
  QUEUE_SIZE: 8192
  WEIGHTS: 
OUTPUT_DIR: logs/wildsplit4/mgn_R50-ibn
SOLVER:
  AMP:
    ENABLED: True
  BASE_LR: 0.00035
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 20
  CLIP_GRADIENTS:
    CLIP_TYPE: norm
    CLIP_VALUE: 5.0
    ENABLED: False
    NORM_TYPE: 2.0
  DELAY_EPOCHS: 30
  ETA_MIN_LR: 7e-07
  FREEZE_ITERS: 1000
  GAMMA: 0.1
  HEADS_LR_FACTOR: 1.0
  IMS_PER_BATCH: 64
  MAX_EPOCH: 60
  MOMENTUM: 0.9
  NESTEROV: False
  OPT: Adam
  SCHED: CosineAnnealingLR
  STEPS: [40, 90]
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 2000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0005
  WEIGHT_DECAY_BIAS: 0.0005
  WEIGHT_DECAY_NORM: 0.0005
TEST:
  AQE:
    ALPHA: 3.0
    ENABLED: False
    QE_K: 5
    QE_TIME: 1
  EVAL_PERIOD: 10
  FLIP:
    ENABLED: False
  IMS_PER_BATCH: 128
  METRIC: cosine
  PRECISE_BN:
    DATASET: Market1501
    ENABLED: False
    NUM_ITER: 300
  RERANK:
    ENABLED: False
    K1: 20
    K2: 6
    LAMBDA: 0.3
  ROC:
    ENABLED: False
[12/27 00:31:59] fastreid INFO: Full config saved to /data01/zhangleiting/_codes/fast-reid/logs/wildsplit4/mgn_R50-ibn/config.yaml
[12/27 00:31:59] fastreid.utils.env INFO: Using a generated random seed 60020248
[12/27 00:31:59] fastreid.engine.defaults INFO: Prepare training set
[12/27 00:31:59] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| train    | 297     | 630        | 1           |[0m
[12/27 00:31:59] fastreid.data.build INFO: Using training sampler NaiveIdentitySampler
[12/27 00:32:00] fastreid.engine.defaults INFO: Auto-scaling the num_classes=297
[12/27 00:32:00] fastreid.modeling.backbones.resnet INFO: Loading pretrained model from /data01/zhangleiting/.cache/torch/checkpoints/resnet50_ibn_a-d9d0bb7b.pth
[12/27 00:32:01] fastreid.modeling.backbones.resnet INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc.{weight, bias}[0m
[12/27 00:32:12] fastreid.engine.defaults INFO: Model:
MGN(
  (backbone): Sequential(
    (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (5): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (6): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): IBN(
        (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (se): Identity()
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (b1): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b1_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b2): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b2_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b21_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b22_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b3): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b3_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b31_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b32_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b33_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
)
[12/27 00:32:14] fastreid.utils.checkpoint INFO: No checkpoint found. Training model from scratch
[12/27 00:32:14] fastreid.engine.train_loop INFO: Starting training from epoch 0
[12/27 00:32:14] fastreid.engine.hooks INFO: Freeze layer group "backbone, b1, b2, b3" training for 1000 iterations
[12/27 00:32:22] fastreid.utils.events INFO:  eta: 0:02:59  epoch/iter: 0/8  total_loss: 56.3  loss_cls_b1: 6.147  loss_cls_b2: 6.231  loss_cls_b21: 6.12  loss_cls_b22: 6.287  loss_cls_b3: 6.219  loss_cls_b31: 6.006  loss_cls_b32: 6.273  loss_cls_b33: 6.236  loss_triplet_b1: 1.274  loss_triplet_b2: 1.274  loss_triplet_b3: 1.309  loss_triplet_b22: 1.315  loss_triplet_b33: 1.536  time: 0.3401  data_time: 0.0617  lr: 3.58e-05  max_mem: 23742M
[12/27 00:32:26] fastreid.utils.events INFO:  eta: 0:03:02  epoch/iter: 1/17  total_loss: 56.33  loss_cls_b1: 6.176  loss_cls_b2: 6.202  loss_cls_b21: 6.272  loss_cls_b22: 6.28  loss_cls_b3: 6.29  loss_cls_b31: 6.099  loss_cls_b32: 6.288  loss_cls_b33: 6.196  loss_triplet_b1: 1.299  loss_triplet_b2: 1.283  loss_triplet_b3: 1.32  loss_triplet_b22: 1.305  loss_triplet_b33: 1.507  time: 0.3677  data_time: 0.0313  lr: 3.70e-05  max_mem: 23742M
[12/27 00:32:31] fastreid.utils.events INFO:  eta: 0:03:10  epoch/iter: 2/26  total_loss: 56.36  loss_cls_b1: 6.175  loss_cls_b2: 6.195  loss_cls_b21: 6.183  loss_cls_b22: 6.203  loss_cls_b3: 6.219  loss_cls_b31: 6.138  loss_cls_b32: 6.304  loss_cls_b33: 6.283  loss_triplet_b1: 1.274  loss_triplet_b2: 1.274  loss_triplet_b3: 1.33  loss_triplet_b22: 1.306  loss_triplet_b33: 1.492  time: 0.4420  data_time: 0.0014  lr: 3.85e-05  max_mem: 23742M
[12/27 00:32:35] fastreid.utils.events INFO:  eta: 0:03:07  epoch/iter: 3/35  total_loss: 56.57  loss_cls_b1: 6.208  loss_cls_b2: 6.202  loss_cls_b21: 6.202  loss_cls_b22: 6.21  loss_cls_b3: 6.259  loss_cls_b31: 6.198  loss_cls_b32: 6.288  loss_cls_b33: 6.286  loss_triplet_b1: 1.332  loss_triplet_b2: 1.283  loss_triplet_b3: 1.345  loss_triplet_b22: 1.312  loss_triplet_b33: 1.499  time: 0.4228  data_time: 0.0013  lr: 3.99e-05  max_mem: 23742M
[12/27 00:32:38] fastreid.utils.events INFO:  eta: 0:03:00  epoch/iter: 4/44  total_loss: 57.01  loss_cls_b1: 6.213  loss_cls_b2: 6.195  loss_cls_b21: 6.183  loss_cls_b22: 6.189  loss_cls_b3: 6.219  loss_cls_b31: 6.217  loss_cls_b32: 6.245  loss_cls_b33: 6.301  loss_triplet_b1: 1.353  loss_triplet_b2: 1.319  loss_triplet_b3: 1.378  loss_triplet_b22: 1.353  loss_triplet_b33: 1.536  time: 0.4102  data_time: 0.0013  lr: 4.11e-05  max_mem: 23742M
[12/27 00:32:42] fastreid.utils.events INFO:  eta: 0:02:59  epoch/iter: 5/53  total_loss: 56.98  loss_cls_b1: 6.185  loss_cls_b2: 6.155  loss_cls_b21: 6.138  loss_cls_b22: 6.205  loss_cls_b3: 6.235  loss_cls_b31: 6.165  loss_cls_b32: 6.233  loss_cls_b33: 6.296  loss_triplet_b1: 1.346  loss_triplet_b2: 1.311  loss_triplet_b3: 1.378  loss_triplet_b22: 1.353  loss_triplet_b33: 1.562  time: 0.4093  data_time: 0.0009  lr: 4.26e-05  max_mem: 23742M
[12/27 00:32:46] fastreid.utils.events INFO:  eta: 0:03:00  epoch/iter: 6/62  total_loss: 56.97  loss_cls_b1: 6.203  loss_cls_b2: 6.183  loss_cls_b21: 6.183  loss_cls_b22: 6.203  loss_cls_b3: 6.219  loss_cls_b31: 6.167  loss_cls_b32: 6.236  loss_cls_b33: 6.301  loss_triplet_b1: 1.332  loss_triplet_b2: 1.303  loss_triplet_b3: 1.358  loss_triplet_b22: 1.354  loss_triplet_b33: 1.536  time: 0.4108  data_time: 0.0009  lr: 4.40e-05  max_mem: 23742M
[12/27 00:32:49] fastreid.utils.events INFO:  eta: 0:02:54  epoch/iter: 7/71  total_loss: 56.98  loss_cls_b1: 6.191  loss_cls_b2: 6.184  loss_cls_b21: 6.136  loss_cls_b22: 6.205  loss_cls_b3: 6.216  loss_cls_b31: 6.173  loss_cls_b32: 6.228  loss_cls_b33: 6.286  loss_triplet_b1: 1.328  loss_triplet_b2: 1.312  loss_triplet_b3: 1.367  loss_triplet_b22: 1.434  loss_triplet_b33: 1.556  time: 0.4060  data_time: 0.0009  lr: 4.54e-05  max_mem: 23742M
[12/27 00:32:53] fastreid.utils.events INFO:  eta: 0:02:53  epoch/iter: 8/80  total_loss: 56.95  loss_cls_b1: 6.19  loss_cls_b2: 6.183  loss_cls_b21: 6.143  loss_cls_b22: 6.208  loss_cls_b3: 6.219  loss_cls_b31: 6.178  loss_cls_b32: 6.246  loss_cls_b33: 6.288  loss_triplet_b1: 1.324  loss_triplet_b2: 1.303  loss_triplet_b3: 1.347  loss_triplet_b22: 1.384  loss_triplet_b33: 1.522  time: 0.4082  data_time: 0.0007  lr: 4.68e-05  max_mem: 23742M
[12/27 00:32:57] fastreid.engine.defaults INFO: Prepare testing set
[12/27 00:32:57] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 138        | 1           |
| gallery  | 297     | 610        | 1           |[0m
[12/27 00:32:57] fastreid.evaluation.evaluator INFO: Start inference on 748 images
[12/27 00:33:05] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:01.791302 (1.791302 s / batch per device, on 1 devices)
[12/27 00:33:05] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:01 (1.788425 s / batch per device, on 1 devices)
[12/27 00:33:05] fastreid.engine.defaults INFO: Evaluation results for WildSplit4 in csv format:
[12/27 00:33:05] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit4 | 69.47    | 86.26    | 91.60     | 51.65 | 24.02  | 60.56    |[0m
[12/27 00:33:06] fastreid.utils.events INFO:  eta: 0:02:50  epoch/iter: 9/89  total_loss: 56.95  loss_cls_b1: 6.191  loss_cls_b2: 6.155  loss_cls_b21: 6.165  loss_cls_b22: 6.208  loss_cls_b3: 6.234  loss_cls_b31: 6.176  loss_cls_b32: 6.24  loss_cls_b33: 6.286  loss_triplet_b1: 1.328  loss_triplet_b2: 1.305  loss_triplet_b3: 1.332  loss_triplet_b22: 1.392  loss_triplet_b33: 1.527  time: 0.4111  data_time: 0.0014  lr: 4.82e-05  max_mem: 23742M
[12/27 00:33:10] fastreid.utils.events INFO:  eta: 0:02:47  epoch/iter: 10/98  total_loss: 56.99  loss_cls_b1: 6.187  loss_cls_b2: 6.157  loss_cls_b21: 6.147  loss_cls_b22: 6.209  loss_cls_b3: 6.234  loss_cls_b31: 6.178  loss_cls_b32: 6.245  loss_cls_b33: 6.283  loss_triplet_b1: 1.348  loss_triplet_b2: 1.326  loss_triplet_b3: 1.375  loss_triplet_b22: 1.469  loss_triplet_b33: 1.576  time: 0.4091  data_time: 0.0020  lr: 4.96e-05  max_mem: 23742M
[12/27 00:33:14] fastreid.utils.events INFO:  eta: 0:02:44  epoch/iter: 11/107  total_loss: 57  loss_cls_b1: 6.189  loss_cls_b2: 6.166  loss_cls_b21: 6.147  loss_cls_b22: 6.208  loss_cls_b3: 6.21  loss_cls_b31: 6.212  loss_cls_b32: 6.245  loss_cls_b33: 6.272  loss_triplet_b1: 1.35  loss_triplet_b2: 1.328  loss_triplet_b3: 1.376  loss_triplet_b22: 1.469  loss_triplet_b33: 1.581  time: 0.4131  data_time: 0.0014  lr: 5.11e-05  max_mem: 23742M
[12/27 00:33:18] fastreid.utils.events INFO:  eta: 0:02:42  epoch/iter: 12/116  total_loss: 57.03  loss_cls_b1: 6.194  loss_cls_b2: 6.161  loss_cls_b21: 6.2  loss_cls_b22: 6.203  loss_cls_b3: 6.202  loss_cls_b31: 6.184  loss_cls_b32: 6.273  loss_cls_b33: 6.267  loss_triplet_b1: 1.353  loss_triplet_b2: 1.329  loss_triplet_b3: 1.378  loss_triplet_b22: 1.469  loss_triplet_b33: 1.587  time: 0.4175  data_time: 0.0010  lr: 5.25e-05  max_mem: 23742M
[12/27 00:33:22] fastreid.utils.events INFO:  eta: 0:02:40  epoch/iter: 13/125  total_loss: 57.04  loss_cls_b1: 6.193  loss_cls_b2: 6.166  loss_cls_b21: 6.172  loss_cls_b22: 6.203  loss_cls_b3: 6.192  loss_cls_b31: 6.18  loss_cls_b32: 6.268  loss_cls_b33: 6.272  loss_triplet_b1: 1.355  loss_triplet_b2: 1.331  loss_triplet_b3: 1.385  loss_triplet_b22: 1.469  loss_triplet_b33: 1.593  time: 0.4170  data_time: 0.0006  lr: 5.39e-05  max_mem: 23742M
[12/27 00:33:26] fastreid.utils.events INFO:  eta: 0:02:38  epoch/iter: 14/134  total_loss: 57.07  loss_cls_b1: 6.194  loss_cls_b2: 6.17  loss_cls_b21: 6.2  loss_cls_b22: 6.196  loss_cls_b3: 6.186  loss_cls_b31: 6.181  loss_cls_b32: 6.273  loss_cls_b33: 6.287  loss_triplet_b1: 1.367  loss_triplet_b2: 1.337  loss_triplet_b3: 1.395  loss_triplet_b22: 1.472  loss_triplet_b33: 1.594  time: 0.4180  data_time: 0.0008  lr: 5.53e-05  max_mem: 23742M
[12/27 00:33:30] fastreid.utils.events INFO:  eta: 0:02:37  epoch/iter: 15/143  total_loss: 57.09  loss_cls_b1: 6.195  loss_cls_b2: 6.172  loss_cls_b21: 6.2  loss_cls_b22: 6.193  loss_cls_b3: 6.204  loss_cls_b31: 6.183  loss_cls_b32: 6.268  loss_cls_b33: 6.28  loss_triplet_b1: 1.374  loss_triplet_b2: 1.356  loss_triplet_b3: 1.406  loss_triplet_b22: 1.486  loss_triplet_b33: 1.607  time: 0.4183  data_time: 0.0010  lr: 5.67e-05  max_mem: 23742M
[12/27 00:33:34] fastreid.utils.events INFO:  eta: 0:02:35  epoch/iter: 16/152  total_loss: 57.1  loss_cls_b1: 6.208  loss_cls_b2: 6.183  loss_cls_b21: 6.2  loss_cls_b22: 6.196  loss_cls_b3: 6.207  loss_cls_b31: 6.184  loss_cls_b32: 6.264  loss_cls_b33: 6.283  loss_triplet_b1: 1.374  loss_triplet_b2: 1.358  loss_triplet_b3: 1.41  loss_triplet_b22: 1.488  loss_triplet_b33: 1.609  time: 0.4197  data_time: 0.0010  lr: 5.82e-05  max_mem: 23742M
[12/27 00:33:39] fastreid.utils.events INFO:  eta: 0:02:33  epoch/iter: 17/161  total_loss: 57.14  loss_cls_b1: 6.203  loss_cls_b2: 6.178  loss_cls_b21: 6.204  loss_cls_b22: 6.189  loss_cls_b3: 6.21  loss_cls_b31: 6.18  loss_cls_b32: 6.245  loss_cls_b33: 6.289  loss_triplet_b1: 1.388  loss_triplet_b2: 1.366  loss_triplet_b3: 1.412  loss_triplet_b22: 1.519  loss_triplet_b33: 1.621  time: 0.4247  data_time: 0.0009  lr: 5.96e-05  max_mem: 23742M
[12/27 00:33:45] fastreid.utils.events INFO:  eta: 0:02:31  epoch/iter: 18/170  total_loss: 57.14  loss_cls_b1: 6.203  loss_cls_b2: 6.174  loss_cls_b21: 6.21  loss_cls_b22: 6.184  loss_cls_b3: 6.207  loss_cls_b31: 6.178  loss_cls_b32: 6.238  loss_cls_b33: 6.287  loss_triplet_b1: 1.389  loss_triplet_b2: 1.378  loss_triplet_b3: 1.41  loss_triplet_b22: 1.531  loss_triplet_b33: 1.62  time: 0.4369  data_time: 0.0020  lr: 6.10e-05  max_mem: 23742M
[12/27 00:33:49] fastreid.engine.defaults INFO: Prepare testing set
[12/27 00:33:49] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 138        | 1           |
| gallery  | 297     | 610        | 1           |[0m
[12/27 00:33:49] fastreid.evaluation.evaluator INFO: Start inference on 748 images
[12/27 00:33:53] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:00.225199 (0.225199 s / batch per device, on 1 devices)
[12/27 00:33:53] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.222474 s / batch per device, on 1 devices)
[12/27 00:33:53] fastreid.engine.defaults INFO: Evaluation results for WildSplit4 in csv format:
[12/27 00:33:53] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit4 | 70.23    | 87.02    | 90.08     | 48.12 | 20.05  | 59.18    |[0m
[12/27 00:33:53] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit4/mgn_R50-ibn/model_best.pth
[12/27 00:33:57] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit4/mgn_R50-ibn/model_0019.pth
[12/27 00:34:01] fastreid.utils.events INFO:  eta: 0:02:30  epoch/iter: 19/179  total_loss: 57.23  loss_cls_b1: 6.207  loss_cls_b2: 6.18  loss_cls_b21: 6.213  loss_cls_b22: 6.184  loss_cls_b3: 6.2  loss_cls_b31: 6.18  loss_cls_b32: 6.241  loss_cls_b33: 6.289  loss_triplet_b1: 1.398  loss_triplet_b2: 1.385  loss_triplet_b3: 1.425  loss_triplet_b22: 1.576  loss_triplet_b33: 1.656  time: 0.4375  data_time: 0.0026  lr: 6.24e-05  max_mem: 23742M
[12/27 00:34:05] fastreid.utils.events INFO:  eta: 0:02:27  epoch/iter: 20/188  total_loss: 57.31  loss_cls_b1: 6.208  loss_cls_b2: 6.183  loss_cls_b21: 6.217  loss_cls_b22: 6.183  loss_cls_b3: 6.197  loss_cls_b31: 6.19  loss_cls_b32: 6.245  loss_cls_b33: 6.283  loss_triplet_b1: 1.402  loss_triplet_b2: 1.385  loss_triplet_b3: 1.439  loss_triplet_b22: 1.578  loss_triplet_b33: 1.687  time: 0.4398  data_time: 0.0021  lr: 6.38e-05  max_mem: 23742M
[12/27 00:34:10] fastreid.utils.events INFO:  eta: 0:02:24  epoch/iter: 21/197  total_loss: 57.35  loss_cls_b1: 6.207  loss_cls_b2: 6.187  loss_cls_b21: 6.213  loss_cls_b22: 6.182  loss_cls_b3: 6.199  loss_cls_b31: 6.178  loss_cls_b32: 6.238  loss_cls_b33: 6.287  loss_triplet_b1: 1.427  loss_triplet_b2: 1.4  loss_triplet_b3: 1.443  loss_triplet_b22: 1.587  loss_triplet_b33: 1.689  time: 0.4414  data_time: 0.0024  lr: 6.52e-05  max_mem: 23742M
[12/27 00:34:11] fastreid.utils.events INFO:  eta: 0:02:23  epoch/iter: 22/199  total_loss: 57.38  loss_cls_b1: 6.209  loss_cls_b2: 6.187  loss_cls_b21: 6.216  loss_cls_b22: 6.182  loss_cls_b3: 6.192  loss_cls_b31: 6.18  loss_cls_b32: 6.238  loss_cls_b33: 6.289  loss_triplet_b1: 1.428  loss_triplet_b2: 1.402  loss_triplet_b3: 1.446  loss_triplet_b22: 1.591  loss_triplet_b33: 1.694  time: 0.4415  data_time: 0.0023  lr: 6.56e-05  max_mem: 23742M
[12/27 00:34:14] fastreid.utils.events INFO:  eta: 0:02:21  epoch/iter: 22/206  total_loss: 57.44  loss_cls_b1: 6.212  loss_cls_b2: 6.184  loss_cls_b21: 6.213  loss_cls_b22: 6.179  loss_cls_b3: 6.192  loss_cls_b31: 6.18  loss_cls_b32: 6.241  loss_cls_b33: 6.291  loss_triplet_b1: 1.431  loss_triplet_b2: 1.407  loss_triplet_b3: 1.461  loss_triplet_b22: 1.591  loss_triplet_b33: 1.717  time: 0.4426  data_time: 0.0021  lr: 6.67e-05  max_mem: 23742M
[12/27 00:34:18] fastreid.utils.events INFO:  eta: 0:02:18  epoch/iter: 23/215  total_loss: 57.54  loss_cls_b1: 6.207  loss_cls_b2: 6.187  loss_cls_b21: 6.209  loss_cls_b22: 6.174  loss_cls_b3: 6.202  loss_cls_b31: 6.18  loss_cls_b32: 6.234  loss_cls_b33: 6.291  loss_triplet_b1: 1.442  loss_triplet_b2: 1.421  loss_triplet_b3: 1.468  loss_triplet_b22: 1.616  loss_triplet_b33: 1.743  time: 0.4432  data_time: 0.0009  lr: 6.81e-05  max_mem: 23742M
[12/27 00:34:23] fastreid.utils.events INFO:  eta: 0:02:15  epoch/iter: 24/224  total_loss: 57.56  loss_cls_b1: 6.213  loss_cls_b2: 6.202  loss_cls_b21: 6.209  loss_cls_b22: 6.176  loss_cls_b3: 6.202  loss_cls_b31: 6.177  loss_cls_b32: 6.236  loss_cls_b33: 6.291  loss_triplet_b1: 1.448  loss_triplet_b2: 1.421  loss_triplet_b3: 1.47  loss_triplet_b22: 1.618  loss_triplet_b33: 1.753  time: 0.4452  data_time: 0.0026  lr: 6.95e-05  max_mem: 23742M
[12/27 00:34:27] fastreid.utils.events INFO:  eta: 0:02:12  epoch/iter: 25/233  total_loss: 57.54  loss_cls_b1: 6.209  loss_cls_b2: 6.207  loss_cls_b21: 6.209  loss_cls_b22: 6.176  loss_cls_b3: 6.199  loss_cls_b31: 6.174  loss_cls_b32: 6.241  loss_cls_b33: 6.29  loss_triplet_b1: 1.435  loss_triplet_b2: 1.421  loss_triplet_b3: 1.466  loss_triplet_b22: 1.612  loss_triplet_b33: 1.739  time: 0.4470  data_time: 0.0023  lr: 7.09e-05  max_mem: 23742M
[12/27 00:34:32] fastreid.utils.events INFO:  eta: 0:02:09  epoch/iter: 26/242  total_loss: 57.63  loss_cls_b1: 6.209  loss_cls_b2: 6.214  loss_cls_b21: 6.209  loss_cls_b22: 6.176  loss_cls_b3: 6.201  loss_cls_b31: 6.172  loss_cls_b32: 6.245  loss_cls_b33: 6.282  loss_triplet_b1: 1.442  loss_triplet_b2: 1.416  loss_triplet_b3: 1.464  loss_triplet_b22: 1.616  loss_triplet_b33: 1.743  time: 0.4473  data_time: 0.0009  lr: 7.23e-05  max_mem: 23742M
[12/27 00:34:36] fastreid.utils.events INFO:  eta: 0:02:07  epoch/iter: 27/251  total_loss: 57.63  loss_cls_b1: 6.217  loss_cls_b2: 6.22  loss_cls_b21: 6.216  loss_cls_b22: 6.163  loss_cls_b3: 6.202  loss_cls_b31: 6.18  loss_cls_b32: 6.248  loss_cls_b33: 6.275  loss_triplet_b1: 1.448  loss_triplet_b2: 1.416  loss_triplet_b3: 1.464  loss_triplet_b22: 1.615  loss_triplet_b33: 1.737  time: 0.4480  data_time: 0.0008  lr: 7.37e-05  max_mem: 23742M
[12/27 00:34:40] fastreid.utils.events INFO:  eta: 0:02:03  epoch/iter: 28/260  total_loss: 57.7  loss_cls_b1: 6.209  loss_cls_b2: 6.225  loss_cls_b21: 6.213  loss_cls_b22: 6.163  loss_cls_b3: 6.204  loss_cls_b31: 6.177  loss_cls_b32: 6.248  loss_cls_b33: 6.261  loss_triplet_b1: 1.45  loss_triplet_b2: 1.433  loss_triplet_b3: 1.468  loss_triplet_b22: 1.63  loss_triplet_b33: 1.743  time: 0.4487  data_time: 0.0010  lr: 7.52e-05  max_mem: 23742M
[12/27 00:34:44] fastreid.engine.defaults INFO: Prepare testing set
[12/27 00:34:44] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 138        | 1           |
| gallery  | 297     | 610        | 1           |[0m
[12/27 00:34:44] fastreid.evaluation.evaluator INFO: Start inference on 748 images
[12/27 00:34:48] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:00.241766 (0.241766 s / batch per device, on 1 devices)
[12/27 00:34:48] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.234747 s / batch per device, on 1 devices)
[12/27 00:34:49] fastreid.engine.defaults INFO: Evaluation results for WildSplit4 in csv format:
[12/27 00:34:49] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit4 | 68.70    | 86.26    | 90.84     | 47.81 | 20.25  | 58.26    |[0m
[12/27 00:34:49] fastreid.utils.events INFO:  eta: 0:02:00  epoch/iter: 29/269  total_loss: 57.73  loss_cls_b1: 6.209  loss_cls_b2: 6.221  loss_cls_b21: 6.215  loss_cls_b22: 6.161  loss_cls_b3: 6.205  loss_cls_b31: 6.177  loss_cls_b32: 6.263  loss_cls_b33: 6.289  loss_triplet_b1: 1.463  loss_triplet_b2: 1.442  loss_triplet_b3: 1.476  loss_triplet_b22: 1.663  loss_triplet_b33: 1.783  time: 0.4490  data_time: 0.0013  lr: 7.66e-05  max_mem: 23742M
[12/27 00:34:53] fastreid.utils.events INFO:  eta: 0:01:56  epoch/iter: 30/278  total_loss: 57.76  loss_cls_b1: 6.212  loss_cls_b2: 6.218  loss_cls_b21: 6.216  loss_cls_b22: 6.154  loss_cls_b3: 6.202  loss_cls_b31: 6.178  loss_cls_b32: 6.241  loss_cls_b33: 6.292  loss_triplet_b1: 1.478  loss_triplet_b2: 1.458  loss_triplet_b3: 1.487  loss_triplet_b22: 1.682  loss_triplet_b33: 1.795  time: 0.4494  data_time: 0.0020  lr: 7.80e-05  max_mem: 23742M
[12/27 00:34:57] fastreid.utils.events INFO:  eta: 0:01:53  epoch/iter: 31/287  total_loss: 57.77  loss_cls_b1: 6.216  loss_cls_b2: 6.228  loss_cls_b21: 6.217  loss_cls_b22: 6.146  loss_cls_b3: 6.202  loss_cls_b31: 6.177  loss_cls_b32: 6.248  loss_cls_b33: 6.29  loss_triplet_b1: 1.492  loss_triplet_b2: 1.481  loss_triplet_b3: 1.514  loss_triplet_b22: 1.687  loss_triplet_b33: 1.844  time: 0.4502  data_time: 0.0020  lr: 7.94e-05  max_mem: 23742M
[12/27 00:35:01] fastreid.utils.events INFO:  eta: 0:01:49  epoch/iter: 32/296  total_loss: 57.77  loss_cls_b1: 6.238  loss_cls_b2: 6.229  loss_cls_b21: 6.218  loss_cls_b22: 6.146  loss_cls_b3: 6.202  loss_cls_b31: 6.177  loss_cls_b32: 6.25  loss_cls_b33: 6.29  loss_triplet_b1: 1.497  loss_triplet_b2: 1.485  loss_triplet_b3: 1.516  loss_triplet_b22: 1.687  loss_triplet_b33: 1.839  time: 0.4507  data_time: 0.0009  lr: 8.08e-05  max_mem: 23742M
[12/27 00:35:06] fastreid.utils.events INFO:  eta: 0:01:46  epoch/iter: 33/305  total_loss: 57.79  loss_cls_b1: 6.243  loss_cls_b2: 6.229  loss_cls_b21: 6.218  loss_cls_b22: 6.146  loss_cls_b3: 6.215  loss_cls_b31: 6.176  loss_cls_b32: 6.245  loss_cls_b33: 6.292  loss_triplet_b1: 1.492  loss_triplet_b2: 1.485  loss_triplet_b3: 1.514  loss_triplet_b22: 1.687  loss_triplet_b33: 1.844  time: 0.4522  data_time: 0.0007  lr: 8.22e-05  max_mem: 23742M
[12/27 00:35:11] fastreid.utils.events INFO:  eta: 0:01:42  epoch/iter: 34/314  total_loss: 57.76  loss_cls_b1: 6.238  loss_cls_b2: 6.228  loss_cls_b21: 6.217  loss_cls_b22: 6.146  loss_cls_b3: 6.21  loss_cls_b31: 6.173  loss_cls_b32: 6.238  loss_cls_b33: 6.29  loss_triplet_b1: 1.485  loss_triplet_b2: 1.485  loss_triplet_b3: 1.487  loss_triplet_b22: 1.685  loss_triplet_b33: 1.841  time: 0.4542  data_time: 0.0011  lr: 8.37e-05  max_mem: 23742M
[12/27 00:35:16] fastreid.utils.events INFO:  eta: 0:01:38  epoch/iter: 35/323  total_loss: 57.77  loss_cls_b1: 6.223  loss_cls_b2: 6.227  loss_cls_b21: 6.218  loss_cls_b22: 6.146  loss_cls_b3: 6.21  loss_cls_b31: 6.177  loss_cls_b32: 6.238  loss_cls_b33: 6.29  loss_triplet_b1: 1.487  loss_triplet_b2: 1.491  loss_triplet_b3: 1.514  loss_triplet_b22: 1.685  loss_triplet_b33: 1.837  time: 0.4557  data_time: 0.0014  lr: 8.51e-05  max_mem: 23742M
[12/27 00:35:20] fastreid.utils.events INFO:  eta: 0:01:34  epoch/iter: 36/332  total_loss: 57.78  loss_cls_b1: 6.227  loss_cls_b2: 6.229  loss_cls_b21: 6.217  loss_cls_b22: 6.147  loss_cls_b3: 6.215  loss_cls_b31: 6.176  loss_cls_b32: 6.238  loss_cls_b33: 6.282  loss_triplet_b1: 1.487  loss_triplet_b2: 1.49  loss_triplet_b3: 1.517  loss_triplet_b22: 1.68  loss_triplet_b33: 1.819  time: 0.4567  data_time: 0.0013  lr: 8.65e-05  max_mem: 23742M
[12/27 00:35:24] fastreid.utils.events INFO:  eta: 0:01:30  epoch/iter: 37/341  total_loss: 57.77  loss_cls_b1: 6.223  loss_cls_b2: 6.227  loss_cls_b21: 6.226  loss_cls_b22: 6.147  loss_cls_b3: 6.209  loss_cls_b31: 6.173  loss_cls_b32: 6.245  loss_cls_b33: 6.285  loss_triplet_b1: 1.487  loss_triplet_b2: 1.485  loss_triplet_b3: 1.515  loss_triplet_b22: 1.671  loss_triplet_b33: 1.787  time: 0.4573  data_time: 0.0012  lr: 8.79e-05  max_mem: 23742M
[12/27 00:35:29] fastreid.utils.events INFO:  eta: 0:01:26  epoch/iter: 38/350  total_loss: 57.74  loss_cls_b1: 6.223  loss_cls_b2: 6.232  loss_cls_b21: 6.237  loss_cls_b22: 6.146  loss_cls_b3: 6.201  loss_cls_b31: 6.176  loss_cls_b32: 6.238  loss_cls_b33: 6.29  loss_triplet_b1: 1.483  loss_triplet_b2: 1.477  loss_triplet_b3: 1.487  loss_triplet_b22: 1.663  loss_triplet_b33: 1.783  time: 0.4579  data_time: 0.0014  lr: 8.93e-05  max_mem: 23742M
[12/27 00:35:33] fastreid.engine.defaults INFO: Prepare testing set
[12/27 00:35:33] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 138        | 1           |
| gallery  | 297     | 610        | 1           |[0m
[12/27 00:35:33] fastreid.evaluation.evaluator INFO: Start inference on 748 images
[12/27 00:35:37] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:00.252707 (0.252707 s / batch per device, on 1 devices)
[12/27 00:35:37] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.246718 s / batch per device, on 1 devices)
[12/27 00:35:37] fastreid.engine.defaults INFO: Evaluation results for WildSplit4 in csv format:
[12/27 00:35:38] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit4 | 70.99    | 87.02    | 90.84     | 48.44 | 20.13  | 59.72    |[0m
[12/27 00:35:38] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit4/mgn_R50-ibn/model_best.pth
[12/27 00:35:41] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit4/mgn_R50-ibn/model_0039.pth
[12/27 00:35:44] fastreid.utils.events INFO:  eta: 0:01:22  epoch/iter: 39/359  total_loss: 57.77  loss_cls_b1: 6.232  loss_cls_b2: 6.234  loss_cls_b21: 6.243  loss_cls_b22: 6.147  loss_cls_b3: 6.2  loss_cls_b31: 6.178  loss_cls_b32: 6.25  loss_cls_b33: 6.281  loss_triplet_b1: 1.485  loss_triplet_b2: 1.477  loss_triplet_b3: 1.487  loss_triplet_b22: 1.663  loss_triplet_b33: 1.783  time: 0.4584  data_time: 0.0012  lr: 9.08e-05  max_mem: 23742M
[12/27 00:35:48] fastreid.utils.events INFO:  eta: 0:01:18  epoch/iter: 40/368  total_loss: 57.79  loss_cls_b1: 6.239  loss_cls_b2: 6.249  loss_cls_b21: 6.244  loss_cls_b22: 6.147  loss_cls_b3: 6.202  loss_cls_b31: 6.178  loss_cls_b32: 6.263  loss_cls_b33: 6.282  loss_triplet_b1: 1.496  loss_triplet_b2: 1.49  loss_triplet_b3: 1.521  loss_triplet_b22: 1.68  loss_triplet_b33: 1.812  time: 0.4588  data_time: 0.0026  lr: 9.22e-05  max_mem: 23742M
[12/27 00:35:53] fastreid.utils.events INFO:  eta: 0:01:14  epoch/iter: 41/377  total_loss: 57.77  loss_cls_b1: 6.239  loss_cls_b2: 6.23  loss_cls_b21: 6.243  loss_cls_b22: 6.156  loss_cls_b3: 6.204  loss_cls_b31: 6.177  loss_cls_b32: 6.262  loss_cls_b33: 6.278  loss_triplet_b1: 1.487  loss_triplet_b2: 1.485  loss_triplet_b3: 1.497  loss_triplet_b22: 1.658  loss_triplet_b33: 1.779  time: 0.4596  data_time: 0.0023  lr: 9.36e-05  max_mem: 23742M
[12/27 00:35:57] fastreid.utils.events INFO:  eta: 0:01:10  epoch/iter: 42/386  total_loss: 57.79  loss_cls_b1: 6.223  loss_cls_b2: 6.228  loss_cls_b21: 6.243  loss_cls_b22: 6.159  loss_cls_b3: 6.213  loss_cls_b31: 6.173  loss_cls_b32: 6.26  loss_cls_b33: 6.281  loss_triplet_b1: 1.493  loss_triplet_b2: 1.492  loss_triplet_b3: 1.521  loss_triplet_b22: 1.676  loss_triplet_b33: 1.783  time: 0.4597  data_time: 0.0008  lr: 9.50e-05  max_mem: 23742M
[12/27 00:36:01] fastreid.utils.events INFO:  eta: 0:01:05  epoch/iter: 43/395  total_loss: 57.77  loss_cls_b1: 6.227  loss_cls_b2: 6.228  loss_cls_b21: 6.261  loss_cls_b22: 6.159  loss_cls_b3: 6.205  loss_cls_b31: 6.176  loss_cls_b32: 6.262  loss_cls_b33: 6.278  loss_triplet_b1: 1.483  loss_triplet_b2: 1.48  loss_triplet_b3: 1.487  loss_triplet_b22: 1.662  loss_triplet_b33: 1.774  time: 0.4594  data_time: 0.0012  lr: 9.64e-05  max_mem: 23742M
[12/27 00:36:03] fastreid.utils.events INFO:  eta: 0:01:04  epoch/iter: 44/399  total_loss: 57.77  loss_cls_b1: 6.22  loss_cls_b2: 6.228  loss_cls_b21: 6.261  loss_cls_b22: 6.158  loss_cls_b3: 6.209  loss_cls_b31: 6.176  loss_cls_b32: 6.259  loss_cls_b33: 6.272  loss_triplet_b1: 1.483  loss_triplet_b2: 1.485  loss_triplet_b3: 1.487  loss_triplet_b22: 1.657  loss_triplet_b33: 1.762  time: 0.4595  data_time: 0.0014  lr: 9.71e-05  max_mem: 23742M
[12/27 00:36:05] fastreid.utils.events INFO:  eta: 0:01:01  epoch/iter: 44/404  total_loss: 57.78  loss_cls_b1: 6.223  loss_cls_b2: 6.229  loss_cls_b21: 6.261  loss_cls_b22: 6.158  loss_cls_b3: 6.208  loss_cls_b31: 6.182  loss_cls_b32: 6.262  loss_cls_b33: 6.272  loss_triplet_b1: 1.487  loss_triplet_b2: 1.492  loss_triplet_b3: 1.497  loss_triplet_b22: 1.676  loss_triplet_b33: 1.774  time: 0.4592  data_time: 0.0015  lr: 9.78e-05  max_mem: 23742M
[12/27 00:36:09] fastreid.utils.events INFO:  eta: 0:00:57  epoch/iter: 45/413  total_loss: 57.79  loss_cls_b1: 6.219  loss_cls_b2: 6.228  loss_cls_b21: 6.267  loss_cls_b22: 6.16  loss_cls_b3: 6.222  loss_cls_b31: 6.187  loss_cls_b32: 6.26  loss_cls_b33: 6.272  loss_triplet_b1: 1.49  loss_triplet_b2: 1.492  loss_triplet_b3: 1.509  loss_triplet_b22: 1.677  loss_triplet_b33: 1.753  time: 0.4586  data_time: 0.0009  lr: 9.93e-05  max_mem: 23742M
[12/27 00:36:13] fastreid.utils.events INFO:  eta: 0:00:53  epoch/iter: 46/422  total_loss: 57.67  loss_cls_b1: 6.219  loss_cls_b2: 6.228  loss_cls_b21: 6.281  loss_cls_b22: 6.16  loss_cls_b3: 6.207  loss_cls_b31: 6.191  loss_cls_b32: 6.262  loss_cls_b33: 6.272  loss_triplet_b1: 1.483  loss_triplet_b2: 1.484  loss_triplet_b3: 1.487  loss_triplet_b22: 1.671  loss_triplet_b33: 1.739  time: 0.4587  data_time: 0.0005  lr: 1.01e-04  max_mem: 23742M
[12/27 00:36:18] fastreid.utils.events INFO:  eta: 0:00:49  epoch/iter: 47/431  total_loss: 57.82  loss_cls_b1: 6.22  loss_cls_b2: 6.226  loss_cls_b21: 6.27  loss_cls_b22: 6.166  loss_cls_b3: 6.207  loss_cls_b31: 6.19  loss_cls_b32: 6.262  loss_cls_b33: 6.277  loss_triplet_b1: 1.494  loss_triplet_b2: 1.492  loss_triplet_b3: 1.497  loss_triplet_b22: 1.677  loss_triplet_b33: 1.75  time: 0.4586  data_time: 0.0014  lr: 1.02e-04  max_mem: 23742M
[12/27 00:36:22] fastreid.utils.events INFO:  eta: 0:00:45  epoch/iter: 48/440  total_loss: 57.87  loss_cls_b1: 6.219  loss_cls_b2: 6.226  loss_cls_b21: 6.27  loss_cls_b22: 6.163  loss_cls_b3: 6.207  loss_cls_b31: 6.192  loss_cls_b32: 6.26  loss_cls_b33: 6.277  loss_triplet_b1: 1.504  loss_triplet_b2: 1.494  loss_triplet_b3: 1.526  loss_triplet_b22: 1.677  loss_triplet_b33: 1.775  time: 0.4598  data_time: 0.0016  lr: 1.04e-04  max_mem: 23742M
[12/27 00:36:27] fastreid.engine.defaults INFO: Prepare testing set
[12/27 00:36:27] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 138        | 1           |
| gallery  | 297     | 610        | 1           |[0m
[12/27 00:36:27] fastreid.evaluation.evaluator INFO: Start inference on 748 images
[12/27 00:36:30] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:00.318095 (0.318095 s / batch per device, on 1 devices)
[12/27 00:36:30] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.315680 s / batch per device, on 1 devices)
[12/27 00:36:31] fastreid.engine.defaults INFO: Evaluation results for WildSplit4 in csv format:
[12/27 00:36:31] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit4 | 70.23    | 87.02    | 90.84     | 48.03 | 19.85  | 59.13    |[0m
[12/27 00:36:31] fastreid.utils.events INFO:  eta: 0:00:41  epoch/iter: 49/449  total_loss: 57.81  loss_cls_b1: 6.219  loss_cls_b2: 6.226  loss_cls_b21: 6.275  loss_cls_b22: 6.161  loss_cls_b3: 6.205  loss_cls_b31: 6.19  loss_cls_b32: 6.266  loss_cls_b33: 6.279  loss_triplet_b1: 1.504  loss_triplet_b2: 1.492  loss_triplet_b3: 1.512  loss_triplet_b22: 1.671  loss_triplet_b33: 1.762  time: 0.4597  data_time: 0.0013  lr: 1.05e-04  max_mem: 23742M
[12/27 00:36:35] fastreid.utils.events INFO:  eta: 0:00:36  epoch/iter: 50/458  total_loss: 57.68  loss_cls_b1: 6.221  loss_cls_b2: 6.221  loss_cls_b21: 6.281  loss_cls_b22: 6.163  loss_cls_b3: 6.199  loss_cls_b31: 6.19  loss_cls_b32: 6.266  loss_cls_b33: 6.279  loss_triplet_b1: 1.513  loss_triplet_b2: 1.49  loss_triplet_b3: 1.525  loss_triplet_b22: 1.662  loss_triplet_b33: 1.762  time: 0.4599  data_time: 0.0016  lr: 1.06e-04  max_mem: 23742M
[12/27 00:36:39] fastreid.utils.events INFO:  eta: 0:00:32  epoch/iter: 51/467  total_loss: 57.75  loss_cls_b1: 6.221  loss_cls_b2: 6.223  loss_cls_b21: 6.295  loss_cls_b22: 6.166  loss_cls_b3: 6.199  loss_cls_b31: 6.192  loss_cls_b32: 6.262  loss_cls_b33: 6.271  loss_triplet_b1: 1.513  loss_triplet_b2: 1.49  loss_triplet_b3: 1.529  loss_triplet_b22: 1.657  loss_triplet_b33: 1.748  time: 0.4596  data_time: 0.0015  lr: 1.08e-04  max_mem: 23742M
[12/27 00:36:43] fastreid.utils.events INFO:  eta: 0:00:28  epoch/iter: 52/476  total_loss: 57.71  loss_cls_b1: 6.223  loss_cls_b2: 6.223  loss_cls_b21: 6.284  loss_cls_b22: 6.165  loss_cls_b3: 6.199  loss_cls_b31: 6.174  loss_cls_b32: 6.262  loss_cls_b33: 6.264  loss_triplet_b1: 1.502  loss_triplet_b2: 1.478  loss_triplet_b3: 1.529  loss_triplet_b22: 1.655  loss_triplet_b33: 1.739  time: 0.4595  data_time: 0.0010  lr: 1.09e-04  max_mem: 23742M
[12/27 00:36:48] fastreid.utils.events INFO:  eta: 0:00:24  epoch/iter: 53/485  total_loss: 57.71  loss_cls_b1: 6.219  loss_cls_b2: 6.223  loss_cls_b21: 6.27  loss_cls_b22: 6.17  loss_cls_b3: 6.187  loss_cls_b31: 6.19  loss_cls_b32: 6.261  loss_cls_b33: 6.264  loss_triplet_b1: 1.502  loss_triplet_b2: 1.481  loss_triplet_b3: 1.514  loss_triplet_b22: 1.656  loss_triplet_b33: 1.749  time: 0.4593  data_time: 0.0011  lr: 1.11e-04  max_mem: 23742M
[12/27 00:36:52] fastreid.utils.events INFO:  eta: 0:00:20  epoch/iter: 54/494  total_loss: 57.68  loss_cls_b1: 6.216  loss_cls_b2: 6.223  loss_cls_b21: 6.275  loss_cls_b22: 6.168  loss_cls_b3: 6.18  loss_cls_b31: 6.174  loss_cls_b32: 6.262  loss_cls_b33: 6.264  loss_triplet_b1: 1.494  loss_triplet_b2: 1.475  loss_triplet_b3: 1.502  loss_triplet_b22: 1.65  loss_triplet_b33: 1.739  time: 0.4591  data_time: 0.0008  lr: 1.12e-04  max_mem: 23742M
[12/27 00:36:56] fastreid.utils.events INFO:  eta: 0:00:16  epoch/iter: 55/503  total_loss: 57.66  loss_cls_b1: 6.214  loss_cls_b2: 6.216  loss_cls_b21: 6.275  loss_cls_b22: 6.17  loss_cls_b3: 6.182  loss_cls_b31: 6.19  loss_cls_b32: 6.262  loss_cls_b33: 6.255  loss_triplet_b1: 1.494  loss_triplet_b2: 1.481  loss_triplet_b3: 1.519  loss_triplet_b22: 1.65  loss_triplet_b33: 1.739  time: 0.4592  data_time: 0.0007  lr: 1.13e-04  max_mem: 23742M
[12/27 00:37:00] fastreid.utils.events INFO:  eta: 0:00:12  epoch/iter: 56/512  total_loss: 57.75  loss_cls_b1: 6.214  loss_cls_b2: 6.221  loss_cls_b21: 6.274  loss_cls_b22: 6.168  loss_cls_b3: 6.185  loss_cls_b31: 6.193  loss_cls_b32: 6.268  loss_cls_b33: 6.259  loss_triplet_b1: 1.512  loss_triplet_b2: 1.481  loss_triplet_b3: 1.519  loss_triplet_b22: 1.662  loss_triplet_b33: 1.761  time: 0.4587  data_time: 0.0007  lr: 1.15e-04  max_mem: 23742M
[12/27 00:37:04] fastreid.utils.events INFO:  eta: 0:00:08  epoch/iter: 57/521  total_loss: 57.77  loss_cls_b1: 6.219  loss_cls_b2: 6.224  loss_cls_b21: 6.264  loss_cls_b22: 6.17  loss_cls_b3: 6.185  loss_cls_b31: 6.192  loss_cls_b32: 6.268  loss_cls_b33: 6.251  loss_triplet_b1: 1.501  loss_triplet_b2: 1.481  loss_triplet_b3: 1.51  loss_triplet_b22: 1.672  loss_triplet_b33: 1.775  time: 0.4584  data_time: 0.0007  lr: 1.16e-04  max_mem: 23742M
[12/27 00:37:08] fastreid.utils.events INFO:  eta: 0:00:04  epoch/iter: 58/530  total_loss: 57.75  loss_cls_b1: 6.216  loss_cls_b2: 6.22  loss_cls_b21: 6.267  loss_cls_b22: 6.17  loss_cls_b3: 6.186  loss_cls_b31: 6.193  loss_cls_b32: 6.248  loss_cls_b33: 6.25  loss_triplet_b1: 1.499  loss_triplet_b2: 1.478  loss_triplet_b3: 1.506  loss_triplet_b22: 1.672  loss_triplet_b33: 1.757  time: 0.4586  data_time: 0.0005  lr: 1.18e-04  max_mem: 23742M
[12/27 00:37:13] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/539  total_loss: 57.68  loss_cls_b1: 6.213  loss_cls_b2: 6.217  loss_cls_b21: 6.256  loss_cls_b22: 6.176  loss_cls_b3: 6.191  loss_cls_b31: 6.187  loss_cls_b32: 6.244  loss_cls_b33: 6.255  loss_triplet_b1: 1.473  loss_triplet_b2: 1.469  loss_triplet_b3: 1.501  loss_triplet_b22: 1.656  loss_triplet_b33: 1.765  time: 0.4587  data_time: 0.0013  lr: 1.19e-04  max_mem: 23742M
[12/27 00:37:13] fastreid.engine.defaults INFO: Prepare testing set
[12/27 00:37:13] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 138        | 1           |
| gallery  | 297     | 610        | 1           |[0m
[12/27 00:37:13] fastreid.evaluation.evaluator INFO: Start inference on 748 images
[12/27 00:37:16] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:00.237532 (0.237532 s / batch per device, on 1 devices)
[12/27 00:37:16] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.231985 s / batch per device, on 1 devices)
[12/27 00:37:17] fastreid.engine.defaults INFO: Evaluation results for WildSplit4 in csv format:
[12/27 00:37:17] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit4 | 67.94    | 84.73    | 90.84     | 48.05 | 20.01  | 58.00    |[0m
[12/27 00:37:17] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit4/mgn_R50-ibn/model_final.pth
[12/27 00:37:20] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/539  total_loss: 57.68  loss_cls_b1: 6.213  loss_cls_b2: 6.217  loss_cls_b21: 6.256  loss_cls_b22: 6.176  loss_cls_b3: 6.191  loss_cls_b31: 6.187  loss_cls_b32: 6.244  loss_cls_b33: 6.255  loss_triplet_b1: 1.473  loss_triplet_b2: 1.469  loss_triplet_b3: 1.501  loss_triplet_b22: 1.656  loss_triplet_b33: 1.765  time: 0.4587  data_time: 0.0013  lr: 1.19e-04  max_mem: 23742M
[12/27 00:37:20] fastreid.engine.hooks INFO: Overall training speed: 538 iterations in 0:04:06 (0.4587 s / it)
[12/27 00:37:20] fastreid.engine.hooks INFO: Total training time: 0:04:59 (0:00:53 on hooks)
[07/09 13:41:18] fastreid INFO: Rank of current process: 0. World size: 1
[07/09 13:41:18] fastreid INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.19 (default, Mar 20 2024, 19:58:24) [GCC 11.2.0]
numpy                   1.24.3
fastreid                1.3 @/home/zhourui/hyf_lpl_multicamera/codes/./fastreid
FASTREID_ENV_MODULE     <not set>
PyTorch                 1.11.0 @/opt/anaconda3/envs/multicamera/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1,2,3             NVIDIA GeForce GTX 1080 Ti
CUDA_HOME               :/usr/local/cuda-10.2
Pillow                  10.3.0
torchvision             0.12.0 @/opt/anaconda3/envs/multicamera/lib/python3.8/site-packages/torchvision
torchvision arch flags  /opt/anaconda3/envs/multicamera/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
----------------------  ----------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[07/09 13:41:18] fastreid INFO: Command line arguments: Namespace(config_file='./configs/WildSplit4/mgn_R50-ibn.yml', dist_url='tcp://127.0.0.1:50154', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[07/09 13:41:18] fastreid INFO: Contents of args.config_file=./configs/WildSplit4/mgn_R50-ibn.yml:
_BASE_: ../Base-MGN.yml

MODEL:
  BACKBONE:
    WITH_IBN: True

DATASETS:
  NAMES: ("WildSplit4",)
  TESTS: ("WildSplit4",)

OUTPUT_DIR: logs/wildsplit4/mgn_R50-ibn

[07/09 13:41:18] fastreid INFO: Running with full config:
CUDNN_BENCHMARK: True
DATALOADER:
  NUM_INSTANCE: 16
  NUM_WORKERS: 8
  SAMPLER_TRAIN: NaiveIdentitySampler
  SET_WEIGHT: []
DATASETS:
  COMBINEALL: False
  NAMES: ('WildSplit4',)
  TESTS: ('WildSplit4',)
INPUT:
  AFFINE:
    ENABLED: False
  AUGMIX:
    ENABLED: False
    PROB: 0.0
  AUTOAUG:
    ENABLED: True
    PROB: 0.1
  CJ:
    BRIGHTNESS: 0.15
    CONTRAST: 0.15
    ENABLED: False
    HUE: 0.1
    PROB: 0.5
    SATURATION: 0.1
  CROP:
    ENABLED: False
    RATIO: [0.75, 1.3333333333333333]
    SCALE: [0.16, 1]
    SIZE: [224, 224]
  FLIP:
    ENABLED: True
    PROB: 0.5
  PADDING:
    ENABLED: True
    MODE: constant
    SIZE: 10
  REA:
    ENABLED: True
    PROB: 0.5
    VALUE: [123.675, 116.28, 103.53]
  RPT:
    ENABLED: False
    PROB: 0.5
  SIZE_TEST: [384, 128]
  SIZE_TRAIN: [384, 128]
KD:
  EMA:
    ENABLED: False
    MOMENTUM: 0.999
  MODEL_CONFIG: []
  MODEL_WEIGHTS: []
MODEL:
  BACKBONE:
    ATT_DROP_RATE: 0.0
    DEPTH: 50x
    DROP_PATH_RATIO: 0.1
    DROP_RATIO: 0.0
    FEAT_DIM: 2048
    LAST_STRIDE: 1
    NAME: build_resnet_backbone
    NORM: BN
    PRETRAIN: True
    PRETRAIN_PATH: 
    SIE_COE: 3.0
    STRIDE_SIZE: (16, 16)
    WITH_IBN: True
    WITH_NL: False
    WITH_SE: False
  DEVICE: cuda:1
  FREEZE_LAYERS: ['backbone', 'b1', 'b2', 'b3']
  HEADS:
    CLS_LAYER: CircleSoftmax
    EMBEDDING_DIM: 256
    MARGIN: 0.35
    NAME: EmbeddingHead
    NECK_FEAT: after
    NORM: BN
    NUM_CLASSES: 0
    POOL_LAYER: GeneralizedMeanPoolingP
    SCALE: 64
    WITH_BNNECK: True
  LOSSES:
    CE:
      ALPHA: 0.2
      EPSILON: 0.1
      SCALE: 1.0
    CIRCLE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    COSFACE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    FL:
      ALPHA: 0.25
      GAMMA: 2
      SCALE: 1.0
    NAME: ('CrossEntropyLoss', 'TripletLoss')
    TRI:
      HARD_MINING: True
      MARGIN: 0.0
      NORM_FEAT: False
      SCALE: 1.0
  META_ARCHITECTURE: MGN
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.120000000000005, 57.375]
  QUEUE_SIZE: 8192
  WEIGHTS: 
OUTPUT_DIR: logs/wildsplit4/mgn_R50-ibn
SOLVER:
  AMP:
    ENABLED: True
  BASE_LR: 0.00035
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 20
  CLIP_GRADIENTS:
    CLIP_TYPE: norm
    CLIP_VALUE: 5.0
    ENABLED: False
    NORM_TYPE: 2.0
  DELAY_EPOCHS: 30
  ETA_MIN_LR: 7e-07
  FREEZE_ITERS: 1000
  GAMMA: 0.1
  HEADS_LR_FACTOR: 1.0
  IMS_PER_BATCH: 64
  MAX_EPOCH: 60
  MOMENTUM: 0.9
  NESTEROV: False
  OPT: Adam
  SCHED: CosineAnnealingLR
  STEPS: [40, 90]
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 2000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0005
  WEIGHT_DECAY_BIAS: 0.0005
  WEIGHT_DECAY_NORM: 0.0005
TEST:
  AQE:
    ALPHA: 3.0
    ENABLED: False
    QE_K: 5
    QE_TIME: 1
  EVAL_PERIOD: 10
  FLIP:
    ENABLED: False
  IMS_PER_BATCH: 128
  METRIC: cosine
  PRECISE_BN:
    DATASET: Market1501
    ENABLED: False
    NUM_ITER: 300
  RERANK:
    ENABLED: False
    K1: 20
    K2: 6
    LAMBDA: 0.3
  ROC:
    ENABLED: False
[07/09 13:41:18] fastreid INFO: Full config saved to /home/zhourui/hyf_lpl_multicamera/codes/logs/wildsplit4/mgn_R50-ibn/config.yaml
[07/09 13:41:18] fastreid.utils.env INFO: Using a generated random seed 20582604
[07/09 13:41:18] fastreid.engine.defaults INFO: Prepare training set
[07/09 13:41:18] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| train    | 297     | 792        | 1           |[0m
[07/09 13:41:18] fastreid.data.build INFO: Using training sampler NaiveIdentitySampler
[07/09 13:41:20] fastreid.engine.defaults INFO: Auto-scaling the num_classes=297
[07/09 13:41:21] fastreid.modeling.backbones.resnet INFO: Loading pretrained model from /home/zhourui/.cache/torch/checkpoints/resnet50_ibn_a-d9d0bb7b.pth
[07/09 13:41:21] fastreid.modeling.backbones.resnet INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc.{weight, bias}[0m
[07/09 13:41:23] fastreid.engine.defaults INFO: Model:
MGN(
  (backbone): Sequential(
    (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (5): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (6): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): IBN(
        (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (se): Identity()
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (b1): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b1_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b2): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b2_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b21_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b22_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b3): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b3_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b31_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b32_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b33_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
)
[07/09 13:41:31] fastreid.utils.checkpoint INFO: No checkpoint found. Training model from scratch
[07/09 13:41:31] fastreid.engine.train_loop INFO: Starting training from epoch 0
[07/09 13:41:31] fastreid.engine.hooks INFO: Freeze layer group "backbone, b1, b2, b3" training for 1000 iterations
[07/09 13:41:45] fastreid.utils.events INFO:  eta: 0:10:29  epoch/iter: 0/11  total_loss: 56.99  loss_cls_b1: 6.19  loss_cls_b2: 6.129  loss_cls_b21: 6.294  loss_cls_b22: 6.173  loss_cls_b3: 6.166  loss_cls_b31: 6.263  loss_cls_b32: 6.369  loss_cls_b33: 6.222  loss_triplet_b1: 1.433  loss_triplet_b2: 1.325  loss_triplet_b3: 1.402  loss_triplet_b22: 1.501  loss_triplet_b33: 1.63  time: 0.8931  data_time: 0.0010  lr: 3.61e-05  max_mem: 72M
[07/09 13:41:56] fastreid.utils.events INFO:  eta: 0:10:19  epoch/iter: 1/23  total_loss: 56.85  loss_cls_b1: 6.187  loss_cls_b2: 6.255  loss_cls_b21: 6.302  loss_cls_b22: 6.152  loss_cls_b3: 6.196  loss_cls_b31: 6.328  loss_cls_b32: 6.369  loss_cls_b33: 6.282  loss_triplet_b1: 1.339  loss_triplet_b2: 1.275  loss_triplet_b3: 1.325  loss_triplet_b22: 1.465  loss_triplet_b33: 1.63  time: 0.8929  data_time: 0.0009  lr: 3.78e-05  max_mem: 72M
[07/09 13:42:07] fastreid.utils.events INFO:  eta: 0:10:13  epoch/iter: 2/35  total_loss: 56.89  loss_cls_b1: 6.219  loss_cls_b2: 6.191  loss_cls_b21: 6.302  loss_cls_b22: 6.153  loss_cls_b3: 6.166  loss_cls_b31: 6.272  loss_cls_b32: 6.342  loss_cls_b33: 6.204  loss_triplet_b1: 1.377  loss_triplet_b2: 1.289  loss_triplet_b3: 1.338  loss_triplet_b22: 1.517  loss_triplet_b33: 1.704  time: 0.8982  data_time: 0.0006  lr: 3.97e-05  max_mem: 72M
[07/09 13:42:18] fastreid.utils.events INFO:  eta: 0:10:06  epoch/iter: 3/47  total_loss: 57.03  loss_cls_b1: 6.224  loss_cls_b2: 6.194  loss_cls_b21: 6.225  loss_cls_b22: 6.205  loss_cls_b3: 6.203  loss_cls_b31: 6.29  loss_cls_b32: 6.325  loss_cls_b33: 6.204  loss_triplet_b1: 1.395  loss_triplet_b2: 1.375  loss_triplet_b3: 1.368  loss_triplet_b22: 1.54  loss_triplet_b33: 1.709  time: 0.9005  data_time: 0.0006  lr: 4.16e-05  max_mem: 72M
[07/09 13:42:28] fastreid.utils.events INFO:  eta: 0:09:56  epoch/iter: 4/59  total_loss: 57.03  loss_cls_b1: 6.239  loss_cls_b2: 6.213  loss_cls_b21: 6.21  loss_cls_b22: 6.205  loss_cls_b3: 6.183  loss_cls_b31: 6.285  loss_cls_b32: 6.308  loss_cls_b33: 6.186  loss_triplet_b1: 1.405  loss_triplet_b2: 1.373  loss_triplet_b3: 1.385  loss_triplet_b22: 1.54  loss_triplet_b33: 1.704  time: 0.9020  data_time: 0.0006  lr: 4.35e-05  max_mem: 72M
[07/09 13:42:39] fastreid.utils.events INFO:  eta: 0:09:44  epoch/iter: 5/71  total_loss: 57.1  loss_cls_b1: 6.22  loss_cls_b2: 6.213  loss_cls_b21: 6.225  loss_cls_b22: 6.225  loss_cls_b3: 6.203  loss_cls_b31: 6.258  loss_cls_b32: 6.276  loss_cls_b33: 6.194  loss_triplet_b1: 1.395  loss_triplet_b2: 1.373  loss_triplet_b3: 1.38  loss_triplet_b22: 1.547  loss_triplet_b33: 1.705  time: 0.9013  data_time: 0.0006  lr: 4.54e-05  max_mem: 72M
[07/09 13:42:50] fastreid.utils.events INFO:  eta: 0:09:32  epoch/iter: 6/83  total_loss: 56.89  loss_cls_b1: 6.209  loss_cls_b2: 6.17  loss_cls_b21: 6.211  loss_cls_b22: 6.196  loss_cls_b3: 6.206  loss_cls_b31: 6.258  loss_cls_b32: 6.276  loss_cls_b33: 6.204  loss_triplet_b1: 1.374  loss_triplet_b2: 1.336  loss_triplet_b3: 1.364  loss_triplet_b22: 1.54  loss_triplet_b33: 1.704  time: 0.9005  data_time: 0.0007  lr: 4.73e-05  max_mem: 72M
[07/09 13:43:01] fastreid.utils.events INFO:  eta: 0:09:21  epoch/iter: 7/95  total_loss: 57.02  loss_cls_b1: 6.209  loss_cls_b2: 6.173  loss_cls_b21: 6.211  loss_cls_b22: 6.234  loss_cls_b3: 6.2  loss_cls_b31: 6.269  loss_cls_b32: 6.265  loss_cls_b33: 6.194  loss_triplet_b1: 1.367  loss_triplet_b2: 1.336  loss_triplet_b3: 1.364  loss_triplet_b22: 1.547  loss_triplet_b33: 1.704  time: 0.9015  data_time: 0.0007  lr: 4.92e-05  max_mem: 72M
[07/09 13:43:12] fastreid.utils.events INFO:  eta: 0:09:10  epoch/iter: 8/107  total_loss: 57.1  loss_cls_b1: 6.214  loss_cls_b2: 6.173  loss_cls_b21: 6.202  loss_cls_b22: 6.219  loss_cls_b3: 6.206  loss_cls_b31: 6.269  loss_cls_b32: 6.257  loss_cls_b33: 6.186  loss_triplet_b1: 1.373  loss_triplet_b2: 1.336  loss_triplet_b3: 1.364  loss_triplet_b22: 1.565  loss_triplet_b33: 1.705  time: 0.9035  data_time: 0.0007  lr: 5.11e-05  max_mem: 72M
[07/09 13:43:23] fastreid.engine.defaults INFO: Prepare testing set
[07/09 13:43:23] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 176        | 1           |
| gallery  | 297     | 792        | 1           |[0m
[07/09 13:43:23] fastreid.evaluation.evaluator INFO: Start inference on 968 images
[07/09 13:43:33] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:02.868816 (0.956272 s / batch per device, on 1 devices)
[07/09 13:43:33] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.954697 s / batch per device, on 1 devices)
[07/09 13:43:33] fastreid.engine.defaults INFO: Evaluation results for WildSplit4 in csv format:
[07/09 13:43:33] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit4 | 62.29    | 85.14    | 89.14     | 46.94 | 18.96  | 54.61    |[0m
[07/09 13:43:33] fastreid.utils.events INFO:  eta: 0:09:01  epoch/iter: 9/119  total_loss: 57.19  loss_cls_b1: 6.205  loss_cls_b2: 6.173  loss_cls_b21: 6.211  loss_cls_b22: 6.229  loss_cls_b3: 6.217  loss_cls_b31: 6.279  loss_cls_b32: 6.257  loss_cls_b33: 6.204  loss_triplet_b1: 1.363  loss_triplet_b2: 1.325  loss_triplet_b3: 1.339  loss_triplet_b22: 1.547  loss_triplet_b33: 1.704  time: 0.9051  data_time: 0.0008  lr: 5.30e-05  max_mem: 252M
[07/09 13:43:44] fastreid.utils.events INFO:  eta: 0:08:50  epoch/iter: 10/131  total_loss: 57.26  loss_cls_b1: 6.214  loss_cls_b2: 6.174  loss_cls_b21: 6.208  loss_cls_b22: 6.222  loss_cls_b3: 6.21  loss_cls_b31: 6.286  loss_cls_b32: 6.255  loss_cls_b33: 6.194  loss_triplet_b1: 1.383  loss_triplet_b2: 1.393  loss_triplet_b3: 1.371  loss_triplet_b22: 1.595  loss_triplet_b33: 1.724  time: 0.9060  data_time: 0.0008  lr: 5.48e-05  max_mem: 252M
[07/09 13:43:56] fastreid.utils.events INFO:  eta: 0:08:40  epoch/iter: 11/143  total_loss: 57.32  loss_cls_b1: 6.233  loss_cls_b2: 6.173  loss_cls_b21: 6.205  loss_cls_b22: 6.227  loss_cls_b3: 6.213  loss_cls_b31: 6.286  loss_cls_b32: 6.255  loss_cls_b33: 6.211  loss_triplet_b1: 1.397  loss_triplet_b2: 1.398  loss_triplet_b3: 1.376  loss_triplet_b22: 1.601  loss_triplet_b33: 1.745  time: 0.9085  data_time: 0.0008  lr: 5.67e-05  max_mem: 252M
[07/09 13:44:07] fastreid.utils.events INFO:  eta: 0:08:30  epoch/iter: 12/155  total_loss: 57.37  loss_cls_b1: 6.239  loss_cls_b2: 6.175  loss_cls_b21: 6.208  loss_cls_b22: 6.227  loss_cls_b3: 6.216  loss_cls_b31: 6.286  loss_cls_b32: 6.25  loss_cls_b33: 6.194  loss_triplet_b1: 1.399  loss_triplet_b2: 1.41  loss_triplet_b3: 1.381  loss_triplet_b22: 1.622  loss_triplet_b33: 1.755  time: 0.9089  data_time: 0.0007  lr: 5.85e-05  max_mem: 252M
[07/09 13:44:18] fastreid.utils.events INFO:  eta: 0:08:19  epoch/iter: 13/167  total_loss: 57.49  loss_cls_b1: 6.242  loss_cls_b2: 6.174  loss_cls_b21: 6.205  loss_cls_b22: 6.227  loss_cls_b3: 6.219  loss_cls_b31: 6.293  loss_cls_b32: 6.246  loss_cls_b33: 6.206  loss_triplet_b1: 1.405  loss_triplet_b2: 1.418  loss_triplet_b3: 1.385  loss_triplet_b22: 1.614  loss_triplet_b33: 1.763  time: 0.9099  data_time: 0.0008  lr: 6.04e-05  max_mem: 252M
[07/09 13:44:29] fastreid.utils.events INFO:  eta: 0:08:09  epoch/iter: 14/179  total_loss: 57.53  loss_cls_b1: 6.242  loss_cls_b2: 6.175  loss_cls_b21: 6.205  loss_cls_b22: 6.23  loss_cls_b3: 6.224  loss_cls_b31: 6.286  loss_cls_b32: 6.246  loss_cls_b33: 6.201  loss_triplet_b1: 1.412  loss_triplet_b2: 1.435  loss_triplet_b3: 1.394  loss_triplet_b22: 1.625  loss_triplet_b33: 1.772  time: 0.9112  data_time: 0.0006  lr: 6.22e-05  max_mem: 252M
[07/09 13:44:40] fastreid.utils.events INFO:  eta: 0:07:59  epoch/iter: 15/191  total_loss: 57.53  loss_cls_b1: 6.242  loss_cls_b2: 6.175  loss_cls_b21: 6.198  loss_cls_b22: 6.234  loss_cls_b3: 6.219  loss_cls_b31: 6.275  loss_cls_b32: 6.255  loss_cls_b33: 6.198  loss_triplet_b1: 1.428  loss_triplet_b2: 1.435  loss_triplet_b3: 1.4  loss_triplet_b22: 1.628  loss_triplet_b33: 1.763  time: 0.9117  data_time: 0.0007  lr: 6.41e-05  max_mem: 252M
[07/09 13:44:47] fastreid.utils.events INFO:  eta: 0:07:51  epoch/iter: 16/199  total_loss: 57.53  loss_cls_b1: 6.239  loss_cls_b2: 6.175  loss_cls_b21: 6.201  loss_cls_b22: 6.237  loss_cls_b3: 6.221  loss_cls_b31: 6.278  loss_cls_b32: 6.256  loss_cls_b33: 6.204  loss_triplet_b1: 1.436  loss_triplet_b2: 1.439  loss_triplet_b3: 1.404  loss_triplet_b22: 1.631  loss_triplet_b33: 1.763  time: 0.9126  data_time: 0.0007  lr: 6.54e-05  max_mem: 252M
[07/09 13:44:51] fastreid.utils.events INFO:  eta: 0:07:48  epoch/iter: 16/203  total_loss: 57.58  loss_cls_b1: 6.242  loss_cls_b2: 6.175  loss_cls_b21: 6.201  loss_cls_b22: 6.236  loss_cls_b3: 6.219  loss_cls_b31: 6.278  loss_cls_b32: 6.256  loss_cls_b33: 6.201  loss_triplet_b1: 1.442  loss_triplet_b2: 1.443  loss_triplet_b3: 1.41  loss_triplet_b22: 1.636  loss_triplet_b33: 1.772  time: 0.9127  data_time: 0.0007  lr: 6.60e-05  max_mem: 252M
[07/09 13:45:02] fastreid.utils.events INFO:  eta: 0:07:37  epoch/iter: 17/215  total_loss: 57.64  loss_cls_b1: 6.248  loss_cls_b2: 6.187  loss_cls_b21: 6.198  loss_cls_b22: 6.236  loss_cls_b3: 6.217  loss_cls_b31: 6.266  loss_cls_b32: 6.255  loss_cls_b33: 6.204  loss_triplet_b1: 1.461  loss_triplet_b2: 1.454  loss_triplet_b3: 1.425  loss_triplet_b22: 1.646  loss_triplet_b33: 1.803  time: 0.9132  data_time: 0.0008  lr: 6.79e-05  max_mem: 252M
[07/09 13:45:13] fastreid.utils.events INFO:  eta: 0:07:27  epoch/iter: 18/227  total_loss: 57.66  loss_cls_b1: 6.245  loss_cls_b2: 6.175  loss_cls_b21: 6.191  loss_cls_b22: 6.231  loss_cls_b3: 6.217  loss_cls_b31: 6.266  loss_cls_b32: 6.256  loss_cls_b33: 6.196  loss_triplet_b1: 1.468  loss_triplet_b2: 1.463  loss_triplet_b3: 1.445  loss_triplet_b22: 1.668  loss_triplet_b33: 1.818  time: 0.9139  data_time: 0.0005  lr: 6.98e-05  max_mem: 252M
[07/09 13:45:24] fastreid.engine.defaults INFO: Prepare testing set
[07/09 13:45:24] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 176        | 1           |
| gallery  | 297     | 792        | 1           |[0m
[07/09 13:45:24] fastreid.evaluation.evaluator INFO: Start inference on 968 images
[07/09 13:45:31] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:01.374967 (0.458322 s / batch per device, on 1 devices)
[07/09 13:45:31] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:01 (0.457137 s / batch per device, on 1 devices)
[07/09 13:45:31] fastreid.engine.defaults INFO: Evaluation results for WildSplit4 in csv format:
[07/09 13:45:31] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit4 | 62.86    | 78.86    | 84.00     | 42.79 | 13.81  | 52.82    |[0m
[07/09 13:45:31] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit4/mgn_R50-ibn/model_best.pth
[07/09 13:45:32] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit4/mgn_R50-ibn/model_0019.pth
[07/09 13:45:33] fastreid.utils.events INFO:  eta: 0:07:16  epoch/iter: 19/239  total_loss: 57.72  loss_cls_b1: 6.244  loss_cls_b2: 6.177  loss_cls_b21: 6.198  loss_cls_b22: 6.236  loss_cls_b3: 6.222  loss_cls_b31: 6.266  loss_cls_b32: 6.256  loss_cls_b33: 6.204  loss_triplet_b1: 1.468  loss_triplet_b2: 1.471  loss_triplet_b3: 1.445  loss_triplet_b22: 1.686  loss_triplet_b33: 1.824  time: 0.9147  data_time: 0.0005  lr: 7.17e-05  max_mem: 252M
[07/09 13:45:44] fastreid.utils.events INFO:  eta: 0:07:05  epoch/iter: 20/251  total_loss: 57.78  loss_cls_b1: 6.244  loss_cls_b2: 6.175  loss_cls_b21: 6.197  loss_cls_b22: 6.227  loss_cls_b3: 6.229  loss_cls_b31: 6.27  loss_cls_b32: 6.255  loss_cls_b33: 6.212  loss_triplet_b1: 1.477  loss_triplet_b2: 1.494  loss_triplet_b3: 1.453  loss_triplet_b22: 1.693  loss_triplet_b33: 1.829  time: 0.9155  data_time: 0.0007  lr: 7.36e-05  max_mem: 252M
[07/09 13:45:55] fastreid.utils.events INFO:  eta: 0:06:54  epoch/iter: 21/263  total_loss: 57.79  loss_cls_b1: 6.251  loss_cls_b2: 6.174  loss_cls_b21: 6.198  loss_cls_b22: 6.227  loss_cls_b3: 6.231  loss_cls_b31: 6.273  loss_cls_b32: 6.256  loss_cls_b33: 6.209  loss_triplet_b1: 1.48  loss_triplet_b2: 1.494  loss_triplet_b3: 1.453  loss_triplet_b22: 1.713  loss_triplet_b33: 1.848  time: 0.9157  data_time: 0.0007  lr: 7.55e-05  max_mem: 252M
[07/09 13:46:06] fastreid.utils.events INFO:  eta: 0:06:44  epoch/iter: 22/275  total_loss: 57.79  loss_cls_b1: 6.25  loss_cls_b2: 6.175  loss_cls_b21: 6.192  loss_cls_b22: 6.221  loss_cls_b3: 6.233  loss_cls_b31: 6.279  loss_cls_b32: 6.258  loss_cls_b33: 6.198  loss_triplet_b1: 1.485  loss_triplet_b2: 1.511  loss_triplet_b3: 1.473  loss_triplet_b22: 1.718  loss_triplet_b33: 1.871  time: 0.9162  data_time: 0.0007  lr: 7.74e-05  max_mem: 252M
[07/09 13:46:17] fastreid.utils.events INFO:  eta: 0:06:33  epoch/iter: 23/287  total_loss: 57.9  loss_cls_b1: 6.256  loss_cls_b2: 6.183  loss_cls_b21: 6.192  loss_cls_b22: 6.22  loss_cls_b3: 6.233  loss_cls_b31: 6.268  loss_cls_b32: 6.261  loss_cls_b33: 6.203  loss_triplet_b1: 1.499  loss_triplet_b2: 1.529  loss_triplet_b3: 1.506  loss_triplet_b22: 1.724  loss_triplet_b33: 1.871  time: 0.9169  data_time: 0.0007  lr: 7.93e-05  max_mem: 252M
[07/09 13:46:28] fastreid.utils.events INFO:  eta: 0:06:23  epoch/iter: 24/299  total_loss: 57.94  loss_cls_b1: 6.264  loss_cls_b2: 6.18  loss_cls_b21: 6.192  loss_cls_b22: 6.219  loss_cls_b3: 6.237  loss_cls_b31: 6.265  loss_cls_b32: 6.262  loss_cls_b33: 6.198  loss_triplet_b1: 1.518  loss_triplet_b2: 1.539  loss_triplet_b3: 1.508  loss_triplet_b22: 1.737  loss_triplet_b33: 1.916  time: 0.9173  data_time: 0.0007  lr: 8.11e-05  max_mem: 252M
[07/09 13:46:40] fastreid.utils.events INFO:  eta: 0:06:12  epoch/iter: 25/311  total_loss: 57.96  loss_cls_b1: 6.265  loss_cls_b2: 6.19  loss_cls_b21: 6.195  loss_cls_b22: 6.219  loss_cls_b3: 6.233  loss_cls_b31: 6.265  loss_cls_b32: 6.262  loss_cls_b33: 6.203  loss_triplet_b1: 1.529  loss_triplet_b2: 1.57  loss_triplet_b3: 1.526  loss_triplet_b22: 1.749  loss_triplet_b33: 1.929  time: 0.9182  data_time: 0.0007  lr: 8.30e-05  max_mem: 252M
[07/09 13:46:51] fastreid.utils.events INFO:  eta: 0:06:01  epoch/iter: 26/323  total_loss: 57.98  loss_cls_b1: 6.263  loss_cls_b2: 6.192  loss_cls_b21: 6.19  loss_cls_b22: 6.219  loss_cls_b3: 6.236  loss_cls_b31: 6.263  loss_cls_b32: 6.263  loss_cls_b33: 6.198  loss_triplet_b1: 1.54  loss_triplet_b2: 1.581  loss_triplet_b3: 1.529  loss_triplet_b22: 1.751  loss_triplet_b33: 1.941  time: 0.9183  data_time: 0.0007  lr: 8.49e-05  max_mem: 252M
[07/09 13:47:02] fastreid.utils.events INFO:  eta: 0:05:51  epoch/iter: 27/335  total_loss: 57.99  loss_cls_b1: 6.248  loss_cls_b2: 6.184  loss_cls_b21: 6.191  loss_cls_b22: 6.221  loss_cls_b3: 6.239  loss_cls_b31: 6.259  loss_cls_b32: 6.263  loss_cls_b33: 6.201  loss_triplet_b1: 1.54  loss_triplet_b2: 1.581  loss_triplet_b3: 1.526  loss_triplet_b22: 1.751  loss_triplet_b33: 1.934  time: 0.9189  data_time: 0.0007  lr: 8.68e-05  max_mem: 252M
[07/09 13:47:13] fastreid.utils.events INFO:  eta: 0:05:40  epoch/iter: 28/347  total_loss: 57.98  loss_cls_b1: 6.248  loss_cls_b2: 6.193  loss_cls_b21: 6.197  loss_cls_b22: 6.212  loss_cls_b3: 6.238  loss_cls_b31: 6.263  loss_cls_b32: 6.264  loss_cls_b33: 6.199  loss_triplet_b1: 1.529  loss_triplet_b2: 1.569  loss_triplet_b3: 1.52  loss_triplet_b22: 1.744  loss_triplet_b33: 1.92  time: 0.9193  data_time: 0.0006  lr: 8.87e-05  max_mem: 252M
[07/09 13:47:25] fastreid.engine.defaults INFO: Prepare testing set
[07/09 13:47:25] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 176        | 1           |
| gallery  | 297     | 792        | 1           |[0m
[07/09 13:47:25] fastreid.evaluation.evaluator INFO: Start inference on 968 images
[07/09 13:47:31] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:01.374312 (0.458104 s / batch per device, on 1 devices)
[07/09 13:47:31] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:01 (0.456226 s / batch per device, on 1 devices)
[07/09 13:47:31] fastreid.engine.defaults INFO: Evaluation results for WildSplit4 in csv format:
[07/09 13:47:31] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit4 | 62.86    | 78.29    | 84.57     | 43.21 | 13.87  | 53.03    |[0m
[07/09 13:47:31] fastreid.utils.events INFO:  eta: 0:05:29  epoch/iter: 29/359  total_loss: 57.99  loss_cls_b1: 6.224  loss_cls_b2: 6.188  loss_cls_b21: 6.195  loss_cls_b22: 6.217  loss_cls_b3: 6.246  loss_cls_b31: 6.254  loss_cls_b32: 6.263  loss_cls_b33: 6.201  loss_triplet_b1: 1.531  loss_triplet_b2: 1.569  loss_triplet_b3: 1.52  loss_triplet_b22: 1.749  loss_triplet_b33: 1.913  time: 0.9203  data_time: 0.0005  lr: 9.06e-05  max_mem: 252M
[07/09 13:47:43] fastreid.utils.events INFO:  eta: 0:05:19  epoch/iter: 30/371  total_loss: 57.98  loss_cls_b1: 6.222  loss_cls_b2: 6.191  loss_cls_b21: 6.188  loss_cls_b22: 6.222  loss_cls_b3: 6.238  loss_cls_b31: 6.25  loss_cls_b32: 6.262  loss_cls_b33: 6.197  loss_triplet_b1: 1.529  loss_triplet_b2: 1.553  loss_triplet_b3: 1.516  loss_triplet_b22: 1.749  loss_triplet_b33: 1.913  time: 0.9208  data_time: 0.0006  lr: 9.25e-05  max_mem: 252M
[07/09 13:47:54] fastreid.utils.events INFO:  eta: 0:05:08  epoch/iter: 31/383  total_loss: 57.99  loss_cls_b1: 6.22  loss_cls_b2: 6.181  loss_cls_b21: 6.198  loss_cls_b22: 6.221  loss_cls_b3: 6.246  loss_cls_b31: 6.25  loss_cls_b32: 6.26  loss_cls_b33: 6.201  loss_triplet_b1: 1.526  loss_triplet_b2: 1.553  loss_triplet_b3: 1.516  loss_triplet_b22: 1.748  loss_triplet_b33: 1.902  time: 0.9211  data_time: 0.0006  lr: 9.44e-05  max_mem: 252M
[07/09 13:48:05] fastreid.utils.events INFO:  eta: 0:04:56  epoch/iter: 32/395  total_loss: 57.99  loss_cls_b1: 6.224  loss_cls_b2: 6.181  loss_cls_b21: 6.198  loss_cls_b22: 6.214  loss_cls_b3: 6.256  loss_cls_b31: 6.256  loss_cls_b32: 6.264  loss_cls_b33: 6.201  loss_triplet_b1: 1.519  loss_triplet_b2: 1.551  loss_triplet_b3: 1.516  loss_triplet_b22: 1.744  loss_triplet_b33: 1.91  time: 0.9211  data_time: 0.0005  lr: 9.63e-05  max_mem: 252M
[07/09 13:48:09] fastreid.utils.events INFO:  eta: 0:04:53  epoch/iter: 33/399  total_loss: 57.98  loss_cls_b1: 6.226  loss_cls_b2: 6.185  loss_cls_b21: 6.192  loss_cls_b22: 6.21  loss_cls_b3: 6.256  loss_cls_b31: 6.256  loss_cls_b32: 6.262  loss_cls_b33: 6.199  loss_triplet_b1: 1.513  loss_triplet_b2: 1.547  loss_triplet_b3: 1.511  loss_triplet_b22: 1.738  loss_triplet_b33: 1.906  time: 0.9211  data_time: 0.0006  lr: 9.69e-05  max_mem: 252M
[07/09 13:48:16] fastreid.utils.events INFO:  eta: 0:04:46  epoch/iter: 33/407  total_loss: 57.98  loss_cls_b1: 6.224  loss_cls_b2: 6.185  loss_cls_b21: 6.191  loss_cls_b22: 6.21  loss_cls_b3: 6.261  loss_cls_b31: 6.252  loss_cls_b32: 6.26  loss_cls_b33: 6.203  loss_triplet_b1: 1.509  loss_triplet_b2: 1.547  loss_triplet_b3: 1.516  loss_triplet_b22: 1.736  loss_triplet_b33: 1.895  time: 0.9212  data_time: 0.0007  lr: 9.82e-05  max_mem: 252M
[07/09 13:48:27] fastreid.utils.events INFO:  eta: 0:04:35  epoch/iter: 34/419  total_loss: 57.79  loss_cls_b1: 6.228  loss_cls_b2: 6.181  loss_cls_b21: 6.185  loss_cls_b22: 6.221  loss_cls_b3: 6.264  loss_cls_b31: 6.263  loss_cls_b32: 6.249  loss_cls_b33: 6.194  loss_triplet_b1: 1.49  loss_triplet_b2: 1.539  loss_triplet_b3: 1.504  loss_triplet_b22: 1.686  loss_triplet_b33: 1.85  time: 0.9215  data_time: 0.0006  lr: 1.00e-04  max_mem: 252M
[07/09 13:48:38] fastreid.utils.events INFO:  eta: 0:04:24  epoch/iter: 35/431  total_loss: 57.76  loss_cls_b1: 6.238  loss_cls_b2: 6.188  loss_cls_b21: 6.176  loss_cls_b22: 6.217  loss_cls_b3: 6.262  loss_cls_b31: 6.267  loss_cls_b32: 6.238  loss_cls_b33: 6.198  loss_triplet_b1: 1.494  loss_triplet_b2: 1.539  loss_triplet_b3: 1.502  loss_triplet_b22: 1.686  loss_triplet_b33: 1.85  time: 0.9218  data_time: 0.0005  lr: 1.02e-04  max_mem: 252M
[07/09 13:48:50] fastreid.utils.events INFO:  eta: 0:04:13  epoch/iter: 36/443  total_loss: 57.75  loss_cls_b1: 6.232  loss_cls_b2: 6.182  loss_cls_b21: 6.183  loss_cls_b22: 6.214  loss_cls_b3: 6.27  loss_cls_b31: 6.256  loss_cls_b32: 6.24  loss_cls_b33: 6.194  loss_triplet_b1: 1.481  loss_triplet_b2: 1.536  loss_triplet_b3: 1.487  loss_triplet_b22: 1.675  loss_triplet_b33: 1.84  time: 0.9222  data_time: 0.0005  lr: 1.04e-04  max_mem: 252M
[07/09 13:49:01] fastreid.utils.events INFO:  eta: 0:04:02  epoch/iter: 37/455  total_loss: 57.75  loss_cls_b1: 6.233  loss_cls_b2: 6.188  loss_cls_b21: 6.187  loss_cls_b22: 6.211  loss_cls_b3: 6.269  loss_cls_b31: 6.245  loss_cls_b32: 6.246  loss_cls_b33: 6.197  loss_triplet_b1: 1.485  loss_triplet_b2: 1.51  loss_triplet_b3: 1.487  loss_triplet_b22: 1.677  loss_triplet_b33: 1.842  time: 0.9222  data_time: 0.0005  lr: 1.06e-04  max_mem: 252M
[07/09 13:49:12] fastreid.utils.events INFO:  eta: 0:03:51  epoch/iter: 38/467  total_loss: 57.83  loss_cls_b1: 6.233  loss_cls_b2: 6.195  loss_cls_b21: 6.179  loss_cls_b22: 6.218  loss_cls_b3: 6.265  loss_cls_b31: 6.242  loss_cls_b32: 6.246  loss_cls_b33: 6.198  loss_triplet_b1: 1.498  loss_triplet_b2: 1.539  loss_triplet_b3: 1.502  loss_triplet_b22: 1.682  loss_triplet_b33: 1.862  time: 0.9223  data_time: 0.0006  lr: 1.08e-04  max_mem: 252M
[07/09 13:49:23] fastreid.engine.defaults INFO: Prepare testing set
[07/09 13:49:23] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 176        | 1           |
| gallery  | 297     | 792        | 1           |[0m
[07/09 13:49:23] fastreid.evaluation.evaluator INFO: Start inference on 968 images
[07/09 13:49:30] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:01.376168 (0.458723 s / batch per device, on 1 devices)
[07/09 13:49:30] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:01 (0.457073 s / batch per device, on 1 devices)
[07/09 13:49:30] fastreid.engine.defaults INFO: Evaluation results for WildSplit4 in csv format:
[07/09 13:49:30] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit4 | 62.86    | 78.29    | 86.29     | 43.51 | 14.20  | 53.18    |[0m
[07/09 13:49:30] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit4/mgn_R50-ibn/model_best.pth
[07/09 13:49:31] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit4/mgn_R50-ibn/model_0039.pth
[07/09 13:49:32] fastreid.utils.events INFO:  eta: 0:03:40  epoch/iter: 39/479  total_loss: 57.77  loss_cls_b1: 6.234  loss_cls_b2: 6.195  loss_cls_b21: 6.175  loss_cls_b22: 6.219  loss_cls_b3: 6.265  loss_cls_b31: 6.246  loss_cls_b32: 6.241  loss_cls_b33: 6.191  loss_triplet_b1: 1.505  loss_triplet_b2: 1.51  loss_triplet_b3: 1.499  loss_triplet_b22: 1.67  loss_triplet_b33: 1.846  time: 0.9225  data_time: 0.0007  lr: 1.09e-04  max_mem: 252M
[07/09 13:49:43] fastreid.utils.events INFO:  eta: 0:03:29  epoch/iter: 40/491  total_loss: 57.74  loss_cls_b1: 6.233  loss_cls_b2: 6.195  loss_cls_b21: 6.184  loss_cls_b22: 6.222  loss_cls_b3: 6.273  loss_cls_b31: 6.253  loss_cls_b32: 6.24  loss_cls_b33: 6.198  loss_triplet_b1: 1.493  loss_triplet_b2: 1.505  loss_triplet_b3: 1.487  loss_triplet_b22: 1.665  loss_triplet_b33: 1.83  time: 0.9223  data_time: 0.0006  lr: 1.11e-04  max_mem: 252M
[07/09 13:49:54] fastreid.utils.events INFO:  eta: 0:03:18  epoch/iter: 41/503  total_loss: 57.74  loss_cls_b1: 6.232  loss_cls_b2: 6.195  loss_cls_b21: 6.183  loss_cls_b22: 6.231  loss_cls_b3: 6.277  loss_cls_b31: 6.259  loss_cls_b32: 6.241  loss_cls_b33: 6.198  loss_triplet_b1: 1.485  loss_triplet_b2: 1.501  loss_triplet_b3: 1.477  loss_triplet_b22: 1.657  loss_triplet_b33: 1.817  time: 0.9222  data_time: 0.0007  lr: 1.13e-04  max_mem: 252M
[07/09 13:50:05] fastreid.utils.events INFO:  eta: 0:03:07  epoch/iter: 42/515  total_loss: 57.51  loss_cls_b1: 6.233  loss_cls_b2: 6.194  loss_cls_b21: 6.184  loss_cls_b22: 6.227  loss_cls_b3: 6.288  loss_cls_b31: 6.246  loss_cls_b32: 6.246  loss_cls_b33: 6.191  loss_triplet_b1: 1.46  loss_triplet_b2: 1.478  loss_triplet_b3: 1.461  loss_triplet_b22: 1.642  loss_triplet_b33: 1.803  time: 0.9225  data_time: 0.0006  lr: 1.15e-04  max_mem: 252M
[07/09 13:50:16] fastreid.utils.events INFO:  eta: 0:02:56  epoch/iter: 43/527  total_loss: 57.5  loss_cls_b1: 6.239  loss_cls_b2: 6.194  loss_cls_b21: 6.19  loss_cls_b22: 6.211  loss_cls_b3: 6.275  loss_cls_b31: 6.262  loss_cls_b32: 6.247  loss_cls_b33: 6.192  loss_triplet_b1: 1.448  loss_triplet_b2: 1.468  loss_triplet_b3: 1.45  loss_triplet_b22: 1.621  loss_triplet_b33: 1.798  time: 0.9225  data_time: 0.0008  lr: 1.17e-04  max_mem: 252M
[07/09 13:50:28] fastreid.utils.events INFO:  eta: 0:02:45  epoch/iter: 44/539  total_loss: 57.51  loss_cls_b1: 6.246  loss_cls_b2: 6.195  loss_cls_b21: 6.189  loss_cls_b22: 6.212  loss_cls_b3: 6.277  loss_cls_b31: 6.246  loss_cls_b32: 6.249  loss_cls_b33: 6.191  loss_triplet_b1: 1.45  loss_triplet_b2: 1.476  loss_triplet_b3: 1.453  loss_triplet_b22: 1.621  loss_triplet_b33: 1.791  time: 0.9226  data_time: 0.0007  lr: 1.19e-04  max_mem: 252M
[07/09 13:50:39] fastreid.utils.events INFO:  eta: 0:02:34  epoch/iter: 45/551  total_loss: 57.45  loss_cls_b1: 6.251  loss_cls_b2: 6.198  loss_cls_b21: 6.181  loss_cls_b22: 6.212  loss_cls_b3: 6.273  loss_cls_b31: 6.264  loss_cls_b32: 6.247  loss_cls_b33: 6.191  loss_triplet_b1: 1.448  loss_triplet_b2: 1.464  loss_triplet_b3: 1.436  loss_triplet_b22: 1.605  loss_triplet_b33: 1.762  time: 0.9227  data_time: 0.0007  lr: 1.21e-04  max_mem: 252M
[07/09 13:50:50] fastreid.utils.events INFO:  eta: 0:02:23  epoch/iter: 46/563  total_loss: 57.47  loss_cls_b1: 6.256  loss_cls_b2: 6.205  loss_cls_b21: 6.182  loss_cls_b22: 6.21  loss_cls_b3: 6.275  loss_cls_b31: 6.264  loss_cls_b32: 6.262  loss_cls_b33: 6.191  loss_triplet_b1: 1.448  loss_triplet_b2: 1.468  loss_triplet_b3: 1.45  loss_triplet_b22: 1.614  loss_triplet_b33: 1.762  time: 0.9230  data_time: 0.0007  lr: 1.23e-04  max_mem: 252M
[07/09 13:51:01] fastreid.utils.events INFO:  eta: 0:02:12  epoch/iter: 47/575  total_loss: 57.45  loss_cls_b1: 6.255  loss_cls_b2: 6.205  loss_cls_b21: 6.183  loss_cls_b22: 6.204  loss_cls_b3: 6.267  loss_cls_b31: 6.264  loss_cls_b32: 6.263  loss_cls_b33: 6.191  loss_triplet_b1: 1.449  loss_triplet_b2: 1.468  loss_triplet_b3: 1.437  loss_triplet_b22: 1.614  loss_triplet_b33: 1.757  time: 0.9231  data_time: 0.0007  lr: 1.25e-04  max_mem: 252M
[07/09 13:51:12] fastreid.utils.events INFO:  eta: 0:02:01  epoch/iter: 48/587  total_loss: 57.44  loss_cls_b1: 6.263  loss_cls_b2: 6.205  loss_cls_b21: 6.181  loss_cls_b22: 6.202  loss_cls_b3: 6.266  loss_cls_b31: 6.254  loss_cls_b32: 6.257  loss_cls_b33: 6.187  loss_triplet_b1: 1.449  loss_triplet_b2: 1.465  loss_triplet_b3: 1.437  loss_triplet_b22: 1.614  loss_triplet_b33: 1.762  time: 0.9232  data_time: 0.0007  lr: 1.27e-04  max_mem: 252M
[07/09 13:51:23] fastreid.utils.events INFO:  eta: 0:01:50  epoch/iter: 49/599  total_loss: 57.42  loss_cls_b1: 6.265  loss_cls_b2: 6.198  loss_cls_b21: 6.18  loss_cls_b22: 6.202  loss_cls_b3: 6.265  loss_cls_b31: 6.248  loss_cls_b32: 6.252  loss_cls_b33: 6.19  loss_triplet_b1: 1.449  loss_triplet_b2: 1.463  loss_triplet_b3: 1.435  loss_triplet_b22: 1.592  loss_triplet_b33: 1.753  time: 0.9233  data_time: 0.0005  lr: 1.28e-04  max_mem: 252M
[07/09 13:51:23] fastreid.engine.defaults INFO: Prepare testing set
[07/09 13:51:23] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 176        | 1           |
| gallery  | 297     | 792        | 1           |[0m
[07/09 13:51:23] fastreid.evaluation.evaluator INFO: Start inference on 968 images
[07/09 13:51:30] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:01.374069 (0.458023 s / batch per device, on 1 devices)
[07/09 13:51:30] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:01 (0.456128 s / batch per device, on 1 devices)
[07/09 13:51:30] fastreid.engine.defaults INFO: Evaluation results for WildSplit4 in csv format:
[07/09 13:51:30] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit4 | 63.43    | 78.29    | 85.71     | 43.54 | 14.36  | 53.48    |[0m
[07/09 13:51:30] fastreid.utils.events INFO:  eta: 0:01:50  epoch/iter: 49/599  total_loss: 57.42  loss_cls_b1: 6.265  loss_cls_b2: 6.198  loss_cls_b21: 6.18  loss_cls_b22: 6.202  loss_cls_b3: 6.265  loss_cls_b31: 6.248  loss_cls_b32: 6.252  loss_cls_b33: 6.19  loss_triplet_b1: 1.449  loss_triplet_b2: 1.463  loss_triplet_b3: 1.435  loss_triplet_b22: 1.592  loss_triplet_b33: 1.753  time: 0.9233  data_time: 0.0005  lr: 1.28e-04  max_mem: 252M
[07/09 13:51:41] fastreid.utils.events INFO:  eta: 0:01:39  epoch/iter: 50/611  total_loss: 57.44  loss_cls_b1: 6.263  loss_cls_b2: 6.197  loss_cls_b21: 6.184  loss_cls_b22: 6.204  loss_cls_b3: 6.258  loss_cls_b31: 6.254  loss_cls_b32: 6.257  loss_cls_b33: 6.19  loss_triplet_b1: 1.449  loss_triplet_b2: 1.458  loss_triplet_b3: 1.43  loss_triplet_b22: 1.592  loss_triplet_b33: 1.755  time: 0.9232  data_time: 0.0006  lr: 1.30e-04  max_mem: 252M
[07/09 13:51:52] fastreid.utils.events INFO:  eta: 0:01:28  epoch/iter: 51/623  total_loss: 57.46  loss_cls_b1: 6.24  loss_cls_b2: 6.194  loss_cls_b21: 6.189  loss_cls_b22: 6.208  loss_cls_b3: 6.263  loss_cls_b31: 6.257  loss_cls_b32: 6.257  loss_cls_b33: 6.19  loss_triplet_b1: 1.464  loss_triplet_b2: 1.468  loss_triplet_b3: 1.436  loss_triplet_b22: 1.605  loss_triplet_b33: 1.755  time: 0.9232  data_time: 0.0006  lr: 1.32e-04  max_mem: 252M
[07/09 13:52:04] fastreid.utils.events INFO:  eta: 0:01:17  epoch/iter: 52/635  total_loss: 57.46  loss_cls_b1: 6.235  loss_cls_b2: 6.2  loss_cls_b21: 6.184  loss_cls_b22: 6.207  loss_cls_b3: 6.265  loss_cls_b31: 6.257  loss_cls_b32: 6.272  loss_cls_b33: 6.182  loss_triplet_b1: 1.464  loss_triplet_b2: 1.465  loss_triplet_b3: 1.437  loss_triplet_b22: 1.606  loss_triplet_b33: 1.761  time: 0.9234  data_time: 0.0006  lr: 1.34e-04  max_mem: 252M
[07/09 13:52:15] fastreid.utils.events INFO:  eta: 0:01:06  epoch/iter: 53/647  total_loss: 57.57  loss_cls_b1: 6.234  loss_cls_b2: 6.198  loss_cls_b21: 6.189  loss_cls_b22: 6.196  loss_cls_b3: 6.253  loss_cls_b31: 6.264  loss_cls_b32: 6.257  loss_cls_b33: 6.181  loss_triplet_b1: 1.478  loss_triplet_b2: 1.487  loss_triplet_b3: 1.449  loss_triplet_b22: 1.596  loss_triplet_b33: 1.758  time: 0.9235  data_time: 0.0006  lr: 1.36e-04  max_mem: 252M
[07/09 13:52:26] fastreid.utils.events INFO:  eta: 0:00:55  epoch/iter: 54/659  total_loss: 57.54  loss_cls_b1: 6.233  loss_cls_b2: 6.198  loss_cls_b21: 6.185  loss_cls_b22: 6.206  loss_cls_b3: 6.253  loss_cls_b31: 6.267  loss_cls_b32: 6.25  loss_cls_b33: 6.182  loss_triplet_b1: 1.474  loss_triplet_b2: 1.483  loss_triplet_b3: 1.436  loss_triplet_b22: 1.606  loss_triplet_b33: 1.75  time: 0.9234  data_time: 0.0006  lr: 1.38e-04  max_mem: 252M
[07/09 13:52:37] fastreid.utils.events INFO:  eta: 0:00:44  epoch/iter: 55/671  total_loss: 57.46  loss_cls_b1: 6.235  loss_cls_b2: 6.196  loss_cls_b21: 6.185  loss_cls_b22: 6.208  loss_cls_b3: 6.258  loss_cls_b31: 6.263  loss_cls_b32: 6.251  loss_cls_b33: 6.183  loss_triplet_b1: 1.474  loss_triplet_b2: 1.483  loss_triplet_b3: 1.436  loss_triplet_b22: 1.615  loss_triplet_b33: 1.753  time: 0.9235  data_time: 0.0005  lr: 1.40e-04  max_mem: 252M
[07/09 13:52:48] fastreid.utils.events INFO:  eta: 0:00:33  epoch/iter: 56/683  total_loss: 57.58  loss_cls_b1: 6.239  loss_cls_b2: 6.201  loss_cls_b21: 6.19  loss_cls_b22: 6.214  loss_cls_b3: 6.253  loss_cls_b31: 6.264  loss_cls_b32: 6.25  loss_cls_b33: 6.174  loss_triplet_b1: 1.478  loss_triplet_b2: 1.5  loss_triplet_b3: 1.441  loss_triplet_b22: 1.628  loss_triplet_b33: 1.756  time: 0.9236  data_time: 0.0007  lr: 1.42e-04  max_mem: 252M
[07/09 13:52:59] fastreid.utils.events INFO:  eta: 0:00:22  epoch/iter: 57/695  total_loss: 57.69  loss_cls_b1: 6.234  loss_cls_b2: 6.202  loss_cls_b21: 6.185  loss_cls_b22: 6.21  loss_cls_b3: 6.242  loss_cls_b31: 6.26  loss_cls_b32: 6.257  loss_cls_b33: 6.166  loss_triplet_b1: 1.482  loss_triplet_b2: 1.511  loss_triplet_b3: 1.469  loss_triplet_b22: 1.659  loss_triplet_b33: 1.766  time: 0.9239  data_time: 0.0007  lr: 1.44e-04  max_mem: 252M
[07/09 13:53:11] fastreid.utils.events INFO:  eta: 0:00:11  epoch/iter: 58/707  total_loss: 57.74  loss_cls_b1: 6.235  loss_cls_b2: 6.199  loss_cls_b21: 6.181  loss_cls_b22: 6.211  loss_cls_b3: 6.239  loss_cls_b31: 6.264  loss_cls_b32: 6.253  loss_cls_b33: 6.18  loss_triplet_b1: 1.498  loss_triplet_b2: 1.525  loss_triplet_b3: 1.498  loss_triplet_b22: 1.671  loss_triplet_b33: 1.789  time: 0.9242  data_time: 0.0007  lr: 1.45e-04  max_mem: 252M
[07/09 13:53:22] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/719  total_loss: 57.94  loss_cls_b1: 6.241  loss_cls_b2: 6.194  loss_cls_b21: 6.17  loss_cls_b22: 6.214  loss_cls_b3: 6.236  loss_cls_b31: 6.263  loss_cls_b32: 6.247  loss_cls_b33: 6.185  loss_triplet_b1: 1.511  loss_triplet_b2: 1.541  loss_triplet_b3: 1.506  loss_triplet_b22: 1.692  loss_triplet_b33: 1.813  time: 0.9246  data_time: 0.0009  lr: 1.47e-04  max_mem: 252M
[07/09 13:53:22] fastreid.engine.defaults INFO: Prepare testing set
[07/09 13:53:22] fastreid.data.datasets.bases INFO: => Loaded WildSplit4 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 176        | 1           |
| gallery  | 297     | 792        | 1           |[0m
[07/09 13:53:22] fastreid.evaluation.evaluator INFO: Start inference on 968 images
[07/09 13:53:29] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:01.385064 (0.461688 s / batch per device, on 1 devices)
[07/09 13:53:29] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:01 (0.460007 s / batch per device, on 1 devices)
[07/09 13:53:29] fastreid.engine.defaults INFO: Evaluation results for WildSplit4 in csv format:
[07/09 13:53:29] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit4 | 64.57    | 78.29    | 85.71     | 43.60 | 14.05  | 54.09    |[0m
[07/09 13:53:29] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit4/mgn_R50-ibn/model_best.pth
[07/09 13:53:31] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit4/mgn_R50-ibn/model_final.pth
[07/09 13:53:31] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/719  total_loss: 57.94  loss_cls_b1: 6.241  loss_cls_b2: 6.194  loss_cls_b21: 6.17  loss_cls_b22: 6.214  loss_cls_b3: 6.236  loss_cls_b31: 6.263  loss_cls_b32: 6.247  loss_cls_b33: 6.185  loss_triplet_b1: 1.511  loss_triplet_b2: 1.541  loss_triplet_b3: 1.506  loss_triplet_b22: 1.692  loss_triplet_b33: 1.813  time: 0.9246  data_time: 0.0009  lr: 1.47e-04  max_mem: 252M
[07/09 13:53:31] fastreid.engine.hooks INFO: Overall training speed: 718 iterations in 0:11:03 (0.9246 s / it)
[07/09 13:53:31] fastreid.engine.hooks INFO: Total training time: 0:11:55 (0:00:51 on hooks)
