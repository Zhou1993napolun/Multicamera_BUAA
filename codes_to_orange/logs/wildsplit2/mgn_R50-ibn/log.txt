[05/30 17:12:47] fastreid INFO: Rank of current process: 0. World size: 1
[05/30 17:12:48] fastreid INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.14 | packaged by conda-forge | (default, Nov 21 2022, 13:18:34) [GCC 10.4.0]
numpy                   1.23.5
fastreid                1.3 @/data01/zhangleiting/_codes/fast-reid/./fastreid
FASTREID_ENV_MODULE     <not set>
PyTorch                 1.11.0+cu113 @/data01/zhangleiting/anaconda3/envs/fast/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0                   NVIDIA A100-PCIE-40GB
CUDA_HOME               /usr/local/cuda-11.4
Pillow                  9.3.0
torchvision             0.12.0+cu113 @/data01/zhangleiting/anaconda3/envs/fast/lib/python3.8/site-packages/torchvision
torchvision arch flags  sm_35, sm_50, sm_60, sm_70, sm_75, sm_80, sm_86
cv2                     4.6.0
----------------------  ----------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[05/30 17:12:48] fastreid INFO: Command line arguments: Namespace(config_file='./configs/WildSplit2/mgn_R50-ibn.yml', dist_url='tcp://127.0.0.1:50163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[05/30 17:12:48] fastreid INFO: Contents of args.config_file=./configs/WildSplit2/mgn_R50-ibn.yml:
_BASE_: ../Base-MGN.yml

MODEL:
  BACKBONE:
    WITH_IBN: True

DATASETS:
  NAMES: ("WildSplit2",)
  TESTS: ("WildSplit2",)

OUTPUT_DIR: logs/wildsplit2/mgn_R50-ibn

[05/30 17:12:48] fastreid INFO: Running with full config:
CUDNN_BENCHMARK: True
DATALOADER:
  NUM_INSTANCE: 16
  NUM_WORKERS: 8
  SAMPLER_TRAIN: NaiveIdentitySampler
  SET_WEIGHT: []
DATASETS:
  COMBINEALL: False
  NAMES: ('WildSplit2',)
  TESTS: ('WildSplit2',)
INPUT:
  AFFINE:
    ENABLED: False
  AUGMIX:
    ENABLED: False
    PROB: 0.0
  AUTOAUG:
    ENABLED: True
    PROB: 0.1
  CJ:
    BRIGHTNESS: 0.15
    CONTRAST: 0.15
    ENABLED: False
    HUE: 0.1
    PROB: 0.5
    SATURATION: 0.1
  CROP:
    ENABLED: False
    RATIO: [0.75, 1.3333333333333333]
    SCALE: [0.16, 1]
    SIZE: [224, 224]
  FLIP:
    ENABLED: True
    PROB: 0.5
  PADDING:
    ENABLED: True
    MODE: constant
    SIZE: 10
  REA:
    ENABLED: True
    PROB: 0.5
    VALUE: [123.675, 116.28, 103.53]
  RPT:
    ENABLED: False
    PROB: 0.5
  SIZE_TEST: [384, 128]
  SIZE_TRAIN: [384, 128]
KD:
  EMA:
    ENABLED: False
    MOMENTUM: 0.999
  MODEL_CONFIG: []
  MODEL_WEIGHTS: []
MODEL:
  BACKBONE:
    ATT_DROP_RATE: 0.0
    DEPTH: 50x
    DROP_PATH_RATIO: 0.1
    DROP_RATIO: 0.0
    FEAT_DIM: 2048
    LAST_STRIDE: 1
    NAME: build_resnet_backbone
    NORM: BN
    PRETRAIN: True
    PRETRAIN_PATH: 
    SIE_COE: 3.0
    STRIDE_SIZE: (16, 16)
    WITH_IBN: True
    WITH_NL: False
    WITH_SE: False
  DEVICE: cuda
  FREEZE_LAYERS: ['backbone', 'b1', 'b2', 'b3']
  HEADS:
    CLS_LAYER: CircleSoftmax
    EMBEDDING_DIM: 256
    MARGIN: 0.35
    NAME: EmbeddingHead
    NECK_FEAT: after
    NORM: BN
    NUM_CLASSES: 0
    POOL_LAYER: GeneralizedMeanPoolingP
    SCALE: 64
    WITH_BNNECK: True
  LOSSES:
    CE:
      ALPHA: 0.2
      EPSILON: 0.1
      SCALE: 1.0
    CIRCLE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    COSFACE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    FL:
      ALPHA: 0.25
      GAMMA: 2
      SCALE: 1.0
    NAME: ('CrossEntropyLoss', 'TripletLoss')
    TRI:
      HARD_MINING: True
      MARGIN: 0.0
      NORM_FEAT: False
      SCALE: 1.0
  META_ARCHITECTURE: MGN
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.120000000000005, 57.375]
  QUEUE_SIZE: 8192
  WEIGHTS: 
OUTPUT_DIR: logs/wildsplit2/mgn_R50-ibn
SOLVER:
  AMP:
    ENABLED: True
  BASE_LR: 0.00035
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 20
  CLIP_GRADIENTS:
    CLIP_TYPE: norm
    CLIP_VALUE: 5.0
    ENABLED: False
    NORM_TYPE: 2.0
  DELAY_EPOCHS: 30
  ETA_MIN_LR: 7e-07
  FREEZE_ITERS: 1000
  GAMMA: 0.1
  HEADS_LR_FACTOR: 1.0
  IMS_PER_BATCH: 64
  MAX_EPOCH: 60
  MOMENTUM: 0.9
  NESTEROV: False
  OPT: Adam
  SCHED: CosineAnnealingLR
  STEPS: [40, 90]
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 2000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0005
  WEIGHT_DECAY_BIAS: 0.0005
  WEIGHT_DECAY_NORM: 0.0005
TEST:
  AQE:
    ALPHA: 3.0
    ENABLED: False
    QE_K: 5
    QE_TIME: 1
  EVAL_PERIOD: 10
  FLIP:
    ENABLED: False
  IMS_PER_BATCH: 128
  METRIC: cosine
  PRECISE_BN:
    DATASET: Market1501
    ENABLED: False
    NUM_ITER: 300
  RERANK:
    ENABLED: False
    K1: 20
    K2: 6
    LAMBDA: 0.3
  ROC:
    ENABLED: False
[05/30 17:12:48] fastreid INFO: Full config saved to /data01/zhangleiting/_codes/fast-reid/logs/wildsplit2/mgn_R50-ibn/config.yaml
[05/30 17:12:48] fastreid.utils.env INFO: Using a generated random seed 48579748
[05/30 17:12:48] fastreid.engine.defaults INFO: Prepare training set
[05/30 17:12:48] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| train    | 271     | 3268       | 1           |[0m
[05/30 17:12:48] fastreid.data.build INFO: Using training sampler NaiveIdentitySampler
[05/30 17:12:48] fastreid.engine.defaults INFO: Auto-scaling the num_classes=271
[05/30 17:12:48] fastreid.modeling.backbones.resnet INFO: Loading pretrained model from /data01/zhangleiting/.cache/torch/checkpoints/resnet50_ibn_a-d9d0bb7b.pth
[05/30 17:12:49] fastreid.modeling.backbones.resnet INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc.{weight, bias}[0m
[05/30 17:12:54] fastreid.engine.defaults INFO: Model:
MGN(
  (backbone): Sequential(
    (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (5): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (6): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): IBN(
        (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (se): Identity()
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (b1): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b1_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=271, scale=64, margin=0.35)
  )
  (b2): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b2_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=271, scale=64, margin=0.35)
  )
  (b21_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=271, scale=64, margin=0.35)
  )
  (b22_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=271, scale=64, margin=0.35)
  )
  (b3): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b3_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=271, scale=64, margin=0.35)
  )
  (b31_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=271, scale=64, margin=0.35)
  )
  (b32_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=271, scale=64, margin=0.35)
  )
  (b33_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:0', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=271, scale=64, margin=0.35)
  )
)
[05/30 17:12:56] fastreid.utils.checkpoint INFO: No checkpoint found. Training model from scratch
[05/30 17:12:56] fastreid.engine.train_loop INFO: Starting training from epoch 0
[05/30 17:12:56] fastreid.engine.hooks INFO: Freeze layer group "backbone, b1, b2, b3" training for 1000 iterations
[05/30 17:13:12] fastreid.utils.events INFO:  eta: 0:12:23  epoch/iter: 0/50  total_loss: 58.44  loss_cls_b1: 6.214  loss_cls_b2: 6.233  loss_cls_b21: 6.208  loss_cls_b22: 6.174  loss_cls_b3: 6.181  loss_cls_b31: 6.202  loss_cls_b32: 6.285  loss_cls_b33: 6.185  loss_triplet_b1: 1.553  loss_triplet_b2: 1.623  loss_triplet_b3: 1.593  loss_triplet_b22: 1.932  loss_triplet_b33: 2.161  time: 0.2485  data_time: 0.0006  lr: 4.22e-05  max_mem: 23742M
[05/30 17:13:25] fastreid.utils.events INFO:  eta: 0:12:15  epoch/iter: 1/101  total_loss: 58.46  loss_cls_b1: 6.195  loss_cls_b2: 6.196  loss_cls_b21: 6.191  loss_cls_b22: 6.173  loss_cls_b3: 6.186  loss_cls_b31: 6.182  loss_cls_b32: 6.249  loss_cls_b33: 6.178  loss_triplet_b1: 1.561  loss_triplet_b2: 1.626  loss_triplet_b3: 1.597  loss_triplet_b22: 1.983  loss_triplet_b33: 2.22  time: 0.2487  data_time: 0.0006  lr: 5.03e-05  max_mem: 23742M
[05/30 17:13:38] fastreid.utils.events INFO:  eta: 0:11:59  epoch/iter: 2/152  total_loss: 58.47  loss_cls_b1: 6.203  loss_cls_b2: 6.206  loss_cls_b21: 6.181  loss_cls_b22: 6.171  loss_cls_b3: 6.184  loss_cls_b31: 6.205  loss_cls_b32: 6.245  loss_cls_b33: 6.187  loss_triplet_b1: 1.553  loss_triplet_b2: 1.58  loss_triplet_b3: 1.568  loss_triplet_b22: 1.942  loss_triplet_b33: 2.176  time: 0.2480  data_time: 0.0004  lr: 5.82e-05  max_mem: 23742M
[05/30 17:13:50] fastreid.utils.events INFO:  eta: 0:11:48  epoch/iter: 3/199  total_loss: 58.57  loss_cls_b1: 6.193  loss_cls_b2: 6.206  loss_cls_b21: 6.203  loss_cls_b22: 6.181  loss_cls_b3: 6.188  loss_cls_b31: 6.199  loss_cls_b32: 6.231  loss_cls_b33: 6.195  loss_triplet_b1: 1.561  loss_triplet_b2: 1.595  loss_triplet_b3: 1.575  loss_triplet_b22: 1.976  loss_triplet_b33: 2.22  time: 0.2483  data_time: 0.0006  lr: 6.56e-05  max_mem: 23742M
[05/30 17:13:51] fastreid.utils.events INFO:  eta: 0:11:48  epoch/iter: 3/203  total_loss: 58.57  loss_cls_b1: 6.189  loss_cls_b2: 6.189  loss_cls_b21: 6.203  loss_cls_b22: 6.18  loss_cls_b3: 6.181  loss_cls_b31: 6.194  loss_cls_b32: 6.231  loss_cls_b33: 6.197  loss_triplet_b1: 1.569  loss_triplet_b2: 1.602  loss_triplet_b3: 1.577  loss_triplet_b22: 1.983  loss_triplet_b33: 2.22  time: 0.2487  data_time: 0.0007  lr: 6.62e-05  max_mem: 23742M
[05/30 17:14:37] fastreid.utils.events INFO:  eta: 0:11:40  epoch/iter: 4/254  total_loss: 58.65  loss_cls_b1: 6.185  loss_cls_b2: 6.205  loss_cls_b21: 6.203  loss_cls_b22: 6.19  loss_cls_b3: 6.187  loss_cls_b31: 6.207  loss_cls_b32: 6.219  loss_cls_b33: 6.195  loss_triplet_b1: 1.59  loss_triplet_b2: 1.592  loss_triplet_b3: 1.578  loss_triplet_b22: 2.007  loss_triplet_b33: 2.238  time: 0.3800  data_time: 0.0006  lr: 7.42e-05  max_mem: 23742M
[05/30 17:15:52] fastreid.utils.events INFO:  eta: 0:11:32  epoch/iter: 5/305  total_loss: 58.64  loss_cls_b1: 6.189  loss_cls_b2: 6.225  loss_cls_b21: 6.213  loss_cls_b22: 6.202  loss_cls_b3: 6.176  loss_cls_b31: 6.207  loss_cls_b32: 6.223  loss_cls_b33: 6.208  loss_triplet_b1: 1.575  loss_triplet_b2: 1.577  loss_triplet_b3: 1.569  loss_triplet_b22: 2.002  loss_triplet_b33: 2.225  time: 0.5641  data_time: 0.0010  lr: 8.22e-05  max_mem: 23742M
[05/30 17:17:07] fastreid.utils.events INFO:  eta: 0:11:26  epoch/iter: 6/356  total_loss: 58.55  loss_cls_b1: 6.166  loss_cls_b2: 6.219  loss_cls_b21: 6.217  loss_cls_b22: 6.193  loss_cls_b3: 6.18  loss_cls_b31: 6.195  loss_cls_b32: 6.219  loss_cls_b33: 6.217  loss_triplet_b1: 1.575  loss_triplet_b2: 1.594  loss_triplet_b3: 1.568  loss_triplet_b22: 1.99  loss_triplet_b33: 2.199  time: 0.6939  data_time: 0.0007  lr: 9.03e-05  max_mem: 23742M
[05/30 17:18:11] fastreid.utils.events INFO:  eta: 0:11:37  epoch/iter: 7/399  total_loss: 58.63  loss_cls_b1: 6.182  loss_cls_b2: 6.236  loss_cls_b21: 6.202  loss_cls_b22: 6.19  loss_cls_b3: 6.19  loss_cls_b31: 6.201  loss_cls_b32: 6.217  loss_cls_b33: 6.217  loss_triplet_b1: 1.586  loss_triplet_b2: 1.594  loss_triplet_b3: 1.583  loss_triplet_b22: 1.985  loss_triplet_b33: 2.203  time: 0.7783  data_time: 0.0006  lr: 9.71e-05  max_mem: 23742M
[05/30 17:18:23] fastreid.utils.events INFO:  eta: 0:11:48  epoch/iter: 7/407  total_loss: 58.61  loss_cls_b1: 6.193  loss_cls_b2: 6.245  loss_cls_b21: 6.208  loss_cls_b22: 6.195  loss_cls_b3: 6.194  loss_cls_b31: 6.201  loss_cls_b32: 6.211  loss_cls_b33: 6.217  loss_triplet_b1: 1.582  loss_triplet_b2: 1.593  loss_triplet_b3: 1.578  loss_triplet_b22: 1.982  loss_triplet_b33: 2.202  time: 0.7924  data_time: 0.0006  lr: 9.83e-05  max_mem: 23742M
[05/30 17:19:38] fastreid.utils.events INFO:  eta: 0:34:50  epoch/iter: 8/458  total_loss: 58.5  loss_cls_b1: 6.202  loss_cls_b2: 6.252  loss_cls_b21: 6.177  loss_cls_b22: 6.168  loss_cls_b3: 6.187  loss_cls_b31: 6.195  loss_cls_b32: 6.203  loss_cls_b33: 6.219  loss_triplet_b1: 1.533  loss_triplet_b2: 1.568  loss_triplet_b3: 1.571  loss_triplet_b22: 1.966  loss_triplet_b33: 2.179  time: 0.8690  data_time: 0.0009  lr: 1.06e-04  max_mem: 23742M
[05/30 17:20:51] fastreid.engine.defaults INFO: Prepare testing set
[05/30 17:20:51] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 208     | 713        | 1           |
| gallery  | 269     | 3264       | 1           |[0m
[05/30 17:20:51] fastreid.evaluation.evaluator INFO: Start inference on 3977 images
[05/30 17:20:59] fastreid.evaluation.evaluator INFO: Inference done 11/32. 0.4319 s / batch. ETA=0:00:09
[05/30 17:21:15] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:18.461531 (0.683760 s / batch per device, on 1 devices)
[05/30 17:21:15] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:18 (0.682414 s / batch per device, on 1 devices)
[05/30 17:21:16] fastreid.engine.defaults INFO: Evaluation results for WildSplit2 in csv format:
[05/30 17:21:16] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit2 | 48.24    | 65.44    | 72.64     | 19.98 | 2.81   | 34.11    |[0m
[05/30 17:21:16] fastreid.utils.events INFO:  eta: 1:01:04  epoch/iter: 9/509  total_loss: 58.53  loss_cls_b1: 6.187  loss_cls_b2: 6.234  loss_cls_b21: 6.205  loss_cls_b22: 6.174  loss_cls_b3: 6.195  loss_cls_b31: 6.193  loss_cls_b32: 6.214  loss_cls_b33: 6.217  loss_triplet_b1: 1.539  loss_triplet_b2: 1.576  loss_triplet_b3: 1.582  loss_triplet_b22: 1.966  loss_triplet_b33: 2.185  time: 0.9243  data_time: 0.0006  lr: 1.14e-04  max_mem: 23742M
[05/30 17:22:32] fastreid.utils.events INFO:  eta: 1:00:23  epoch/iter: 10/560  total_loss: 58.45  loss_cls_b1: 6.208  loss_cls_b2: 6.233  loss_cls_b21: 6.208  loss_cls_b22: 6.192  loss_cls_b3: 6.202  loss_cls_b31: 6.191  loss_cls_b32: 6.184  loss_cls_b33: 6.206  loss_triplet_b1: 1.531  loss_triplet_b2: 1.556  loss_triplet_b3: 1.563  loss_triplet_b22: 1.926  loss_triplet_b33: 2.142  time: 0.9756  data_time: 0.0007  lr: 1.22e-04  max_mem: 23742M
[05/30 17:23:30] fastreid.utils.events INFO:  eta: 0:59:54  epoch/iter: 11/599  total_loss: 58.25  loss_cls_b1: 6.198  loss_cls_b2: 6.223  loss_cls_b21: 6.185  loss_cls_b22: 6.185  loss_cls_b3: 6.187  loss_cls_b31: 6.194  loss_cls_b32: 6.186  loss_cls_b33: 6.205  loss_triplet_b1: 1.519  loss_triplet_b2: 1.544  loss_triplet_b3: 1.544  loss_triplet_b22: 1.893  loss_triplet_b33: 2.067  time: 1.0084  data_time: 0.0009  lr: 1.28e-04  max_mem: 23742M
[05/30 17:23:39] fastreid.utils.events INFO:  eta: 0:59:28  epoch/iter: 11/611  total_loss: 58.22  loss_cls_b1: 6.178  loss_cls_b2: 6.223  loss_cls_b21: 6.19  loss_cls_b22: 6.186  loss_cls_b3: 6.185  loss_cls_b31: 6.191  loss_cls_b32: 6.191  loss_cls_b33: 6.203  loss_triplet_b1: 1.525  loss_triplet_b2: 1.549  loss_triplet_b3: 1.542  loss_triplet_b22: 1.891  loss_triplet_b33: 2.049  time: 1.0031  data_time: 0.0007  lr: 1.30e-04  max_mem: 23742M
[05/30 17:24:49] fastreid.utils.events INFO:  eta: 0:58:29  epoch/iter: 12/662  total_loss: 58.1  loss_cls_b1: 6.178  loss_cls_b2: 6.218  loss_cls_b21: 6.215  loss_cls_b22: 6.2  loss_cls_b3: 6.195  loss_cls_b31: 6.2  loss_cls_b32: 6.186  loss_cls_b33: 6.216  loss_triplet_b1: 1.514  loss_triplet_b2: 1.549  loss_triplet_b3: 1.502  loss_triplet_b22: 1.865  loss_triplet_b33: 2.014  time: 1.0321  data_time: 0.0007  lr: 1.38e-04  max_mem: 23742M
[05/30 17:26:07] fastreid.utils.events INFO:  eta: 0:57:30  epoch/iter: 13/713  total_loss: 57.88  loss_cls_b1: 6.173  loss_cls_b2: 6.217  loss_cls_b21: 6.197  loss_cls_b22: 6.192  loss_cls_b3: 6.193  loss_cls_b31: 6.202  loss_cls_b32: 6.184  loss_cls_b33: 6.216  loss_triplet_b1: 1.461  loss_triplet_b2: 1.522  loss_triplet_b3: 1.473  loss_triplet_b22: 1.789  loss_triplet_b33: 1.928  time: 1.0669  data_time: 0.0006  lr: 1.46e-04  max_mem: 23742M
[05/30 17:27:23] fastreid.utils.events INFO:  eta: 0:56:26  epoch/iter: 14/764  total_loss: 57.81  loss_cls_b1: 6.186  loss_cls_b2: 6.205  loss_cls_b21: 6.2  loss_cls_b22: 6.181  loss_cls_b3: 6.196  loss_cls_b31: 6.209  loss_cls_b32: 6.184  loss_cls_b33: 6.215  loss_triplet_b1: 1.459  loss_triplet_b2: 1.52  loss_triplet_b3: 1.481  loss_triplet_b22: 1.779  loss_triplet_b33: 1.901  time: 1.0951  data_time: 0.0008  lr: 1.54e-04  max_mem: 23742M
[05/30 17:28:15] fastreid.utils.events INFO:  eta: 0:55:44  epoch/iter: 15/799  total_loss: 57.8  loss_cls_b1: 6.18  loss_cls_b2: 6.205  loss_cls_b21: 6.199  loss_cls_b22: 6.181  loss_cls_b3: 6.19  loss_cls_b31: 6.22  loss_cls_b32: 6.179  loss_cls_b33: 6.217  loss_triplet_b1: 1.458  loss_triplet_b2: 1.498  loss_triplet_b3: 1.473  loss_triplet_b22: 1.778  loss_triplet_b33: 1.91  time: 1.1131  data_time: 0.0006  lr: 1.60e-04  max_mem: 23742M
[05/30 17:28:40] fastreid.utils.events INFO:  eta: 0:55:23  epoch/iter: 15/815  total_loss: 57.83  loss_cls_b1: 6.193  loss_cls_b2: 6.202  loss_cls_b21: 6.202  loss_cls_b22: 6.181  loss_cls_b3: 6.195  loss_cls_b31: 6.229  loss_cls_b32: 6.178  loss_cls_b33: 6.211  loss_triplet_b1: 1.461  loss_triplet_b2: 1.508  loss_triplet_b3: 1.483  loss_triplet_b22: 1.787  loss_triplet_b33: 1.914  time: 1.1213  data_time: 0.0008  lr: 1.62e-04  max_mem: 23742M
[05/30 17:29:56] fastreid.utils.events INFO:  eta: 0:54:14  epoch/iter: 16/866  total_loss: 57.86  loss_cls_b1: 6.203  loss_cls_b2: 6.202  loss_cls_b21: 6.189  loss_cls_b22: 6.18  loss_cls_b3: 6.195  loss_cls_b31: 6.207  loss_cls_b32: 6.186  loss_cls_b33: 6.203  loss_triplet_b1: 1.47  loss_triplet_b2: 1.533  loss_triplet_b3: 1.487  loss_triplet_b22: 1.789  loss_triplet_b33: 1.926  time: 1.1428  data_time: 0.0008  lr: 1.70e-04  max_mem: 23742M
[05/30 17:31:13] fastreid.utils.events INFO:  eta: 0:53:07  epoch/iter: 17/917  total_loss: 57.86  loss_cls_b1: 6.204  loss_cls_b2: 6.208  loss_cls_b21: 6.2  loss_cls_b22: 6.182  loss_cls_b3: 6.202  loss_cls_b31: 6.218  loss_cls_b32: 6.176  loss_cls_b33: 6.211  loss_triplet_b1: 1.489  loss_triplet_b2: 1.538  loss_triplet_b3: 1.486  loss_triplet_b22: 1.8  loss_triplet_b33: 1.936  time: 1.1637  data_time: 0.0006  lr: 1.78e-04  max_mem: 23742M
[05/30 17:32:31] fastreid.utils.events INFO:  eta: 0:51:56  epoch/iter: 18/968  total_loss: 57.95  loss_cls_b1: 6.183  loss_cls_b2: 6.214  loss_cls_b21: 6.204  loss_cls_b22: 6.195  loss_cls_b3: 6.199  loss_cls_b31: 6.224  loss_cls_b32: 6.178  loss_cls_b33: 6.195  loss_triplet_b1: 1.479  loss_triplet_b2: 1.534  loss_triplet_b3: 1.486  loss_triplet_b22: 1.802  loss_triplet_b33: 1.961  time: 1.1824  data_time: 0.0006  lr: 1.87e-04  max_mem: 23742M
[05/30 17:33:18] fastreid.utils.events INFO:  eta: 0:51:12  epoch/iter: 19/999  total_loss: 58.02  loss_cls_b1: 6.19  loss_cls_b2: 6.219  loss_cls_b21: 6.225  loss_cls_b22: 6.193  loss_cls_b3: 6.2  loss_cls_b31: 6.22  loss_cls_b32: 6.184  loss_cls_b33: 6.194  loss_triplet_b1: 1.493  loss_triplet_b2: 1.535  loss_triplet_b3: 1.498  loss_triplet_b22: 1.809  loss_triplet_b33: 1.961  time: 1.1924  data_time: 0.0008  lr: 1.91e-04  max_mem: 23742M
[05/30 17:33:18] fastreid.engine.hooks INFO: Open layer group "backbone, b1, b2, b3" training
[05/30 17:33:42] fastreid.engine.defaults INFO: Prepare testing set
[05/30 17:33:42] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 208     | 713        | 1           |
| gallery  | 269     | 3264       | 1           |[0m
[05/30 17:33:42] fastreid.evaluation.evaluator INFO: Start inference on 3977 images
[05/30 17:33:50] fastreid.evaluation.evaluator INFO: Inference done 11/32. 0.5888 s / batch. ETA=0:00:12
[05/30 17:33:57] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:10.419123 (0.385893 s / batch per device, on 1 devices)
[05/30 17:33:57] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:10 (0.384679 s / batch per device, on 1 devices)
[05/30 17:33:57] fastreid.engine.defaults INFO: Evaluation results for WildSplit2 in csv format:
[05/30 17:33:57] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit2 | 53.31    | 69.11    | 75.32     | 23.95 | 3.48   | 38.63    |[0m
[05/30 17:33:57] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit2/mgn_R50-ibn/model_best.pth
[05/30 17:33:59] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit2/mgn_R50-ibn/model_0019.pth
[05/30 17:34:01] fastreid.utils.events INFO:  eta: 0:50:46  epoch/iter: 19/1019  total_loss: 57.77  loss_cls_b1: 6.181  loss_cls_b2: 6.225  loss_cls_b21: 6.205  loss_cls_b22: 6.193  loss_cls_b3: 6.201  loss_cls_b31: 6.219  loss_cls_b32: 6.193  loss_cls_b33: 6.197  loss_triplet_b1: 1.451  loss_triplet_b2: 1.496  loss_triplet_b3: 1.463  loss_triplet_b22: 1.77  loss_triplet_b33: 1.925  time: 1.1932  data_time: 0.0008  lr: 1.95e-04  max_mem: 23742M
[05/30 17:35:17] fastreid.utils.events INFO:  eta: 0:49:39  epoch/iter: 20/1070  total_loss: 57.05  loss_cls_b1: 6.147  loss_cls_b2: 6.164  loss_cls_b21: 6.143  loss_cls_b22: 6.152  loss_cls_b3: 6.164  loss_cls_b31: 6.154  loss_cls_b32: 6.144  loss_cls_b33: 6.125  loss_triplet_b1: 1.36  loss_triplet_b2: 1.394  loss_triplet_b3: 1.365  loss_triplet_b22: 1.633  loss_triplet_b33: 1.765  time: 1.2069  data_time: 0.0006  lr: 2.03e-04  max_mem: 23742M
[05/30 17:36:34] fastreid.utils.events INFO:  eta: 0:48:32  epoch/iter: 21/1121  total_loss: 54.72  loss_cls_b1: 6.066  loss_cls_b2: 6.089  loss_cls_b21: 6.079  loss_cls_b22: 6.041  loss_cls_b3: 6.106  loss_cls_b31: 6.059  loss_cls_b32: 6.095  loss_cls_b33: 6.055  loss_triplet_b1: 1.085  loss_triplet_b2: 1.054  loss_triplet_b3: 1.047  loss_triplet_b22: 1.223  loss_triplet_b33: 1.247  time: 1.2202  data_time: 0.0004  lr: 2.11e-04  max_mem: 23742M
[05/30 17:37:51] fastreid.utils.events INFO:  eta: 0:47:22  epoch/iter: 22/1172  total_loss: 49.64  loss_cls_b1: 5.61  loss_cls_b2: 5.703  loss_cls_b21: 5.705  loss_cls_b22: 5.776  loss_cls_b3: 5.779  loss_cls_b31: 5.718  loss_cls_b32: 5.819  loss_cls_b33: 5.797  loss_triplet_b1: 0.8124  loss_triplet_b2: 0.7714  loss_triplet_b3: 0.7521  loss_triplet_b22: 0.8829  loss_triplet_b33: 0.9363  time: 1.2332  data_time: 0.0005  lr: 2.19e-04  max_mem: 23742M
[05/30 17:38:33] fastreid.utils.events INFO:  eta: 0:46:45  epoch/iter: 23/1199  total_loss: 47.16  loss_cls_b1: 5.3  loss_cls_b2: 5.42  loss_cls_b21: 5.395  loss_cls_b22: 5.472  loss_cls_b3: 5.478  loss_cls_b31: 5.437  loss_cls_b32: 5.442  loss_cls_b33: 5.541  loss_triplet_b1: 0.7526  loss_triplet_b2: 0.7159  loss_triplet_b3: 0.6909  loss_triplet_b22: 0.8295  loss_triplet_b33: 0.8646  time: 1.2397  data_time: 0.0004  lr: 2.23e-04  max_mem: 23742M
[05/30 17:39:10] fastreid.utils.events INFO:  eta: 0:46:12  epoch/iter: 23/1223  total_loss: 45.1  loss_cls_b1: 5.071  loss_cls_b2: 5.103  loss_cls_b21: 5.046  loss_cls_b22: 5.143  loss_cls_b3: 5.163  loss_cls_b31: 5.143  loss_cls_b32: 5.22  loss_cls_b33: 5.234  loss_triplet_b1: 0.6979  loss_triplet_b2: 0.6567  loss_triplet_b3: 0.6553  loss_triplet_b22: 0.7769  loss_triplet_b33: 0.8344  time: 1.2460  data_time: 0.0005  lr: 2.27e-04  max_mem: 23742M
[05/30 17:40:28] fastreid.utils.events INFO:  eta: 0:45:01  epoch/iter: 24/1274  total_loss: 40.92  loss_cls_b1: 4.479  loss_cls_b2: 4.676  loss_cls_b21: 4.656  loss_cls_b22: 4.799  loss_cls_b3: 4.733  loss_cls_b31: 4.692  loss_cls_b32: 4.759  loss_cls_b33: 4.786  loss_triplet_b1: 0.6467  loss_triplet_b2: 0.6014  loss_triplet_b3: 0.5913  loss_triplet_b22: 0.6738  loss_triplet_b33: 0.7583  time: 1.2574  data_time: 0.0006  lr: 2.35e-04  max_mem: 23742M
[05/30 17:41:47] fastreid.utils.events INFO:  eta: 0:43:48  epoch/iter: 25/1325  total_loss: 37.28  loss_cls_b1: 4.08  loss_cls_b2: 4.242  loss_cls_b21: 4.192  loss_cls_b22: 4.393  loss_cls_b3: 4.207  loss_cls_b31: 4.266  loss_cls_b32: 4.305  loss_cls_b33: 4.423  loss_triplet_b1: 0.5885  loss_triplet_b2: 0.55  loss_triplet_b3: 0.5638  loss_triplet_b22: 0.6244  loss_triplet_b33: 0.6943  time: 1.2681  data_time: 0.0005  lr: 2.43e-04  max_mem: 23742M
[05/30 17:43:05] fastreid.utils.events INFO:  eta: 0:42:33  epoch/iter: 26/1376  total_loss: 33.59  loss_cls_b1: 3.71  loss_cls_b2: 3.741  loss_cls_b21: 3.795  loss_cls_b22: 3.931  loss_cls_b3: 3.895  loss_cls_b31: 3.884  loss_cls_b32: 3.947  loss_cls_b33: 4.08  loss_triplet_b1: 0.531  loss_triplet_b2: 0.5075  loss_triplet_b3: 0.5197  loss_triplet_b22: 0.5927  loss_triplet_b33: 0.6383  time: 1.2780  data_time: 0.0005  lr: 2.51e-04  max_mem: 23742M
[05/30 17:43:36] fastreid.utils.events INFO:  eta: 0:41:59  epoch/iter: 27/1399  total_loss: 32.16  loss_cls_b1: 3.534  loss_cls_b2: 3.625  loss_cls_b21: 3.681  loss_cls_b22: 3.802  loss_cls_b3: 3.666  loss_cls_b31: 3.753  loss_cls_b32: 3.765  loss_cls_b33: 3.955  loss_triplet_b1: 0.4974  loss_triplet_b2: 0.4932  loss_triplet_b3: 0.4971  loss_triplet_b22: 0.5684  loss_triplet_b33: 0.6094  time: 1.2788  data_time: 0.0005  lr: 2.54e-04  max_mem: 23742M
[05/30 17:44:17] fastreid.utils.events INFO:  eta: 0:41:19  epoch/iter: 27/1427  total_loss: 30.94  loss_cls_b1: 3.367  loss_cls_b2: 3.457  loss_cls_b21: 3.528  loss_cls_b22: 3.611  loss_cls_b3: 3.428  loss_cls_b31: 3.568  loss_cls_b32: 3.619  loss_cls_b33: 3.705  loss_triplet_b1: 0.4522  loss_triplet_b2: 0.4567  loss_triplet_b3: 0.4508  loss_triplet_b22: 0.5378  loss_triplet_b33: 0.5593  time: 1.2828  data_time: 0.0006  lr: 2.59e-04  max_mem: 23742M
[05/30 17:45:35] fastreid.utils.events INFO:  eta: 0:40:05  epoch/iter: 28/1478  total_loss: 27.79  loss_cls_b1: 3.03  loss_cls_b2: 3.178  loss_cls_b21: 3.158  loss_cls_b22: 3.343  loss_cls_b3: 3.131  loss_cls_b31: 3.244  loss_cls_b32: 3.35  loss_cls_b33: 3.489  loss_triplet_b1: 0.4218  loss_triplet_b2: 0.4081  loss_triplet_b3: 0.4218  loss_triplet_b22: 0.4699  loss_triplet_b33: 0.5208  time: 1.2912  data_time: 0.0004  lr: 2.67e-04  max_mem: 23742M
[05/30 17:46:52] fastreid.engine.defaults INFO: Prepare testing set
[05/30 17:46:52] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 208     | 713        | 1           |
| gallery  | 269     | 3264       | 1           |[0m
[05/30 17:46:52] fastreid.evaluation.evaluator INFO: Start inference on 3977 images
[05/30 17:46:58] fastreid.evaluation.evaluator INFO: Inference done 11/32. 0.4363 s / batch. ETA=0:00:09
[05/30 17:47:07] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:11.266078 (0.417262 s / batch per device, on 1 devices)
[05/30 17:47:07] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:11 (0.416204 s / batch per device, on 1 devices)
[05/30 17:47:07] fastreid.engine.defaults INFO: Evaluation results for WildSplit2 in csv format:
[05/30 17:47:07] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit2 | 75.04    | 86.60    | 89.00     | 56.35 | 13.95  | 65.69    |[0m
[05/30 17:47:07] fastreid.utils.events INFO:  eta: 0:38:48  epoch/iter: 29/1529  total_loss: 26.21  loss_cls_b1: 2.778  loss_cls_b2: 2.914  loss_cls_b21: 2.938  loss_cls_b22: 3.098  loss_cls_b3: 2.89  loss_cls_b31: 3.065  loss_cls_b32: 3.121  loss_cls_b33: 3.247  loss_triplet_b1: 0.3775  loss_triplet_b2: 0.3577  loss_triplet_b3: 0.3754  loss_triplet_b22: 0.4029  loss_triplet_b33: 0.4762  time: 1.2981  data_time: 0.0005  lr: 2.75e-04  max_mem: 23742M
[05/30 17:48:25] fastreid.utils.events INFO:  eta: 0:37:31  epoch/iter: 30/1580  total_loss: 23.71  loss_cls_b1: 2.595  loss_cls_b2: 2.638  loss_cls_b21: 2.779  loss_cls_b22: 2.912  loss_cls_b3: 2.697  loss_cls_b31: 2.85  loss_cls_b32: 2.869  loss_cls_b33: 3.071  loss_triplet_b1: 0.3208  loss_triplet_b2: 0.2976  loss_triplet_b3: 0.3266  loss_triplet_b22: 0.3516  loss_triplet_b33: 0.3933  time: 1.3053  data_time: 0.0008  lr: 2.83e-04  max_mem: 23742M
[05/30 17:48:53] fastreid.utils.events INFO:  eta: 0:37:02  epoch/iter: 31/1599  total_loss: 23.23  loss_cls_b1: 2.46  loss_cls_b2: 2.557  loss_cls_b21: 2.657  loss_cls_b22: 2.851  loss_cls_b3: 2.594  loss_cls_b31: 2.784  loss_cls_b32: 2.784  loss_cls_b33: 2.971  loss_triplet_b1: 0.3101  loss_triplet_b2: 0.2837  loss_triplet_b3: 0.3145  loss_triplet_b22: 0.3346  loss_triplet_b33: 0.3715  time: 1.3074  data_time: 0.0007  lr: 2.86e-04  max_mem: 23742M
[05/30 17:49:42] fastreid.utils.events INFO:  eta: 0:36:15  epoch/iter: 31/1631  total_loss: 22.33  loss_cls_b1: 2.329  loss_cls_b2: 2.394  loss_cls_b21: 2.523  loss_cls_b22: 2.717  loss_cls_b3: 2.426  loss_cls_b31: 2.664  loss_cls_b32: 2.666  loss_cls_b33: 2.839  loss_triplet_b1: 0.2793  loss_triplet_b2: 0.2828  loss_triplet_b3: 0.307  loss_triplet_b22: 0.3139  loss_triplet_b33: 0.3549  time: 1.3117  data_time: 0.0005  lr: 2.91e-04  max_mem: 23742M
[05/30 17:50:59] fastreid.utils.events INFO:  eta: 0:34:59  epoch/iter: 32/1682  total_loss: 21.13  loss_cls_b1: 2.27  loss_cls_b2: 2.33  loss_cls_b21: 2.428  loss_cls_b22: 2.609  loss_cls_b3: 2.343  loss_cls_b31: 2.566  loss_cls_b32: 2.623  loss_cls_b33: 2.704  loss_triplet_b1: 0.2609  loss_triplet_b2: 0.2485  loss_triplet_b3: 0.2592  loss_triplet_b22: 0.2776  loss_triplet_b33: 0.3054  time: 1.3178  data_time: 0.0005  lr: 2.99e-04  max_mem: 23742M
[05/30 17:52:17] fastreid.utils.events INFO:  eta: 0:33:42  epoch/iter: 33/1733  total_loss: 20.13  loss_cls_b1: 2.101  loss_cls_b2: 2.219  loss_cls_b21: 2.297  loss_cls_b22: 2.498  loss_cls_b3: 2.204  loss_cls_b31: 2.384  loss_cls_b32: 2.481  loss_cls_b33: 2.636  loss_triplet_b1: 0.2405  loss_triplet_b2: 0.236  loss_triplet_b3: 0.2415  loss_triplet_b22: 0.2679  loss_triplet_b33: 0.2747  time: 1.3240  data_time: 0.0004  lr: 3.07e-04  max_mem: 23742M
[05/30 17:53:32] fastreid.utils.events INFO:  eta: 0:32:24  epoch/iter: 34/1784  total_loss: 19.22  loss_cls_b1: 2.041  loss_cls_b2: 2.092  loss_cls_b21: 2.218  loss_cls_b22: 2.368  loss_cls_b3: 2.062  loss_cls_b31: 2.243  loss_cls_b32: 2.375  loss_cls_b33: 2.478  loss_triplet_b1: 0.2241  loss_triplet_b2: 0.2172  loss_triplet_b3: 0.2317  loss_triplet_b22: 0.2591  loss_triplet_b33: 0.254  time: 1.3283  data_time: 0.0004  lr: 3.15e-04  max_mem: 23742M
[05/30 17:53:45] fastreid.utils.events INFO:  eta: 0:32:02  epoch/iter: 35/1799  total_loss: 19.04  loss_cls_b1: 2  loss_cls_b2: 2.059  loss_cls_b21: 2.171  loss_cls_b22: 2.333  loss_cls_b3: 2.057  loss_cls_b31: 2.238  loss_cls_b32: 2.365  loss_cls_b33: 2.462  loss_triplet_b1: 0.2188  loss_triplet_b2: 0.2119  loss_triplet_b3: 0.2314  loss_triplet_b22: 0.2548  loss_triplet_b33: 0.2481  time: 1.3244  data_time: 0.0010  lr: 3.17e-04  max_mem: 23742M
[05/30 17:54:12] fastreid.utils.events INFO:  eta: 0:31:07  epoch/iter: 35/1835  total_loss: 18.78  loss_cls_b1: 1.93  loss_cls_b2: 2.026  loss_cls_b21: 2.13  loss_cls_b22: 2.298  loss_cls_b3: 2.054  loss_cls_b31: 2.218  loss_cls_b32: 2.324  loss_cls_b33: 2.44  loss_triplet_b1: 0.2034  loss_triplet_b2: 0.2065  loss_triplet_b3: 0.2262  loss_triplet_b22: 0.2444  loss_triplet_b33: 0.2401  time: 1.3130  data_time: 0.0012  lr: 3.23e-04  max_mem: 23742M
[05/30 17:55:30] fastreid.utils.events INFO:  eta: 0:29:49  epoch/iter: 36/1886  total_loss: 17.58  loss_cls_b1: 1.801  loss_cls_b2: 1.928  loss_cls_b21: 2.041  loss_cls_b22: 2.187  loss_cls_b3: 1.925  loss_cls_b31: 2.128  loss_cls_b32: 2.215  loss_cls_b33: 2.367  loss_triplet_b1: 0.2017  loss_triplet_b2: 0.1916  loss_triplet_b3: 0.2026  loss_triplet_b22: 0.2185  loss_triplet_b33: 0.225  time: 1.3184  data_time: 0.0003  lr: 3.31e-04  max_mem: 23742M
[05/30 17:56:48] fastreid.utils.events INFO:  eta: 0:28:31  epoch/iter: 37/1937  total_loss: 16.84  loss_cls_b1: 1.72  loss_cls_b2: 1.804  loss_cls_b21: 1.943  loss_cls_b22: 2.135  loss_cls_b3: 1.783  loss_cls_b31: 2.023  loss_cls_b32: 2.112  loss_cls_b33: 2.313  loss_triplet_b1: 0.1834  loss_triplet_b2: 0.1828  loss_triplet_b3: 0.1815  loss_triplet_b22: 0.1979  loss_triplet_b33: 0.2156  time: 1.3240  data_time: 0.0004  lr: 3.39e-04  max_mem: 23742M
[05/30 17:58:05] fastreid.utils.events INFO:  eta: 0:27:14  epoch/iter: 38/1988  total_loss: 16.17  loss_cls_b1: 1.67  loss_cls_b2: 1.714  loss_cls_b21: 1.876  loss_cls_b22: 2.087  loss_cls_b3: 1.745  loss_cls_b31: 1.979  loss_cls_b32: 2.053  loss_cls_b33: 2.289  loss_triplet_b1: 0.1643  loss_triplet_b2: 0.1791  loss_triplet_b3: 0.1693  loss_triplet_b22: 0.1865  loss_triplet_b33: 0.1993  time: 1.3288  data_time: 0.0006  lr: 3.47e-04  max_mem: 23742M
[05/30 17:58:22] fastreid.utils.events INFO:  eta: 0:26:58  epoch/iter: 39/1999  total_loss: 16.09  loss_cls_b1: 1.647  loss_cls_b2: 1.698  loss_cls_b21: 1.865  loss_cls_b22: 2.06  loss_cls_b3: 1.726  loss_cls_b31: 1.956  loss_cls_b32: 2.038  loss_cls_b33: 2.262  loss_triplet_b1: 0.1631  loss_triplet_b2: 0.1703  loss_triplet_b3: 0.165  loss_triplet_b22: 0.175  loss_triplet_b33: 0.1918  time: 1.3299  data_time: 0.0004  lr: 3.49e-04  max_mem: 23742M
[05/30 17:59:23] fastreid.engine.defaults INFO: Prepare testing set
[05/30 17:59:23] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 208     | 713        | 1           |
| gallery  | 269     | 3264       | 1           |[0m
[05/30 17:59:23] fastreid.evaluation.evaluator INFO: Start inference on 3977 images
[05/30 17:59:29] fastreid.evaluation.evaluator INFO: Inference done 11/32. 0.4272 s / batch. ETA=0:00:09
[05/30 17:59:37] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:11.212044 (0.415261 s / batch per device, on 1 devices)
[05/30 17:59:37] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:11 (0.413404 s / batch per device, on 1 devices)
[05/30 17:59:38] fastreid.engine.defaults INFO: Evaluation results for WildSplit2 in csv format:
[05/30 17:59:38] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit2 | 78.84    | 88.29    | 90.69     | 63.89 | 19.26  | 71.37    |[0m
[05/30 17:59:38] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit2/mgn_R50-ibn/model_best.pth
[05/30 17:59:43] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit2/mgn_R50-ibn/model_0039.pth
[05/30 17:59:45] fastreid.utils.events INFO:  eta: 0:25:58  epoch/iter: 39/2039  total_loss: 15.63  loss_cls_b1: 1.569  loss_cls_b2: 1.604  loss_cls_b21: 1.759  loss_cls_b22: 2.003  loss_cls_b3: 1.615  loss_cls_b31: 1.869  loss_cls_b32: 1.962  loss_cls_b33: 2.17  loss_triplet_b1: 0.1501  loss_triplet_b2: 0.1546  loss_triplet_b3: 0.1517  loss_triplet_b22: 0.1603  loss_triplet_b33: 0.1799  time: 1.3336  data_time: 0.0004  lr: 3.49e-04  max_mem: 23742M
[05/30 18:01:02] fastreid.utils.events INFO:  eta: 0:24:40  epoch/iter: 40/2090  total_loss: 14.57  loss_cls_b1: 1.481  loss_cls_b2: 1.537  loss_cls_b21: 1.709  loss_cls_b22: 1.934  loss_cls_b3: 1.534  loss_cls_b31: 1.782  loss_cls_b32: 1.859  loss_cls_b33: 2.086  loss_triplet_b1: 0.1338  loss_triplet_b2: 0.1422  loss_triplet_b3: 0.1354  loss_triplet_b22: 0.1423  loss_triplet_b33: 0.1433  time: 1.3377  data_time: 0.0004  lr: 3.47e-04  max_mem: 23742M
[05/30 18:02:19] fastreid.utils.events INFO:  eta: 0:23:22  epoch/iter: 41/2141  total_loss: 14.18  loss_cls_b1: 1.448  loss_cls_b2: 1.522  loss_cls_b21: 1.685  loss_cls_b22: 1.874  loss_cls_b3: 1.516  loss_cls_b31: 1.762  loss_cls_b32: 1.829  loss_cls_b33: 2.07  loss_triplet_b1: 0.1236  loss_triplet_b2: 0.1247  loss_triplet_b3: 0.1339  loss_triplet_b22: 0.1349  loss_triplet_b33: 0.1292  time: 1.3416  data_time: 0.0005  lr: 3.41e-04  max_mem: 23742M
[05/30 18:03:30] fastreid.utils.events INFO:  eta: 0:22:04  epoch/iter: 42/2192  total_loss: 13.2  loss_cls_b1: 1.312  loss_cls_b2: 1.382  loss_cls_b21: 1.572  loss_cls_b22: 1.716  loss_cls_b3: 1.365  loss_cls_b31: 1.641  loss_cls_b32: 1.69  loss_cls_b33: 1.919  loss_triplet_b1: 0.1048  loss_triplet_b2: 0.107  loss_triplet_b3: 0.1128  loss_triplet_b22: 0.118  loss_triplet_b33: 0.1128  time: 1.3431  data_time: 0.0004  lr: 3.30e-04  max_mem: 23742M
[05/30 18:03:41] fastreid.utils.events INFO:  eta: 0:21:53  epoch/iter: 43/2199  total_loss: 13.18  loss_cls_b1: 1.309  loss_cls_b2: 1.384  loss_cls_b21: 1.579  loss_cls_b22: 1.698  loss_cls_b3: 1.361  loss_cls_b31: 1.634  loss_cls_b32: 1.687  loss_cls_b33: 1.911  loss_triplet_b1: 0.1048  loss_triplet_b2: 0.1071  loss_triplet_b3: 0.1129  loss_triplet_b22: 0.118  loss_triplet_b33: 0.1152  time: 1.3437  data_time: 0.0004  lr: 3.16e-04  max_mem: 23742M
[05/30 18:04:48] fastreid.utils.events INFO:  eta: 0:20:45  epoch/iter: 43/2243  total_loss: 13.03  loss_cls_b1: 1.286  loss_cls_b2: 1.359  loss_cls_b21: 1.536  loss_cls_b22: 1.676  loss_cls_b3: 1.343  loss_cls_b31: 1.601  loss_cls_b32: 1.675  loss_cls_b33: 1.888  loss_triplet_b1: 0.09429  loss_triplet_b2: 0.1015  loss_triplet_b3: 0.1065  loss_triplet_b22: 0.1097  loss_triplet_b33: 0.09508  time: 1.3471  data_time: 0.0005  lr: 3.16e-04  max_mem: 23742M
[05/30 18:06:05] fastreid.utils.events INFO:  eta: 0:19:26  epoch/iter: 44/2294  total_loss: 11.92  loss_cls_b1: 1.158  loss_cls_b2: 1.231  loss_cls_b21: 1.402  loss_cls_b22: 1.61  loss_cls_b3: 1.241  loss_cls_b31: 1.495  loss_cls_b32: 1.619  loss_cls_b33: 1.803  loss_triplet_b1: 0.07675  loss_triplet_b2: 0.08314  loss_triplet_b3: 0.082  loss_triplet_b22: 0.07904  loss_triplet_b33: 0.07894  time: 1.3508  data_time: 0.0004  lr: 2.98e-04  max_mem: 23742M
[05/30 18:07:23] fastreid.utils.events INFO:  eta: 0:18:08  epoch/iter: 45/2345  total_loss: 10.89  loss_cls_b1: 1.048  loss_cls_b2: 1.116  loss_cls_b21: 1.292  loss_cls_b22: 1.467  loss_cls_b3: 1.156  loss_cls_b31: 1.387  loss_cls_b32: 1.479  loss_cls_b33: 1.65  loss_triplet_b1: 0.06041  loss_triplet_b2: 0.06949  loss_triplet_b3: 0.06819  loss_triplet_b22: 0.06259  loss_triplet_b33: 0.06361  time: 1.3546  data_time: 0.0004  lr: 2.77e-04  max_mem: 23742M
[05/30 18:08:40] fastreid.utils.events INFO:  eta: 0:16:50  epoch/iter: 46/2396  total_loss: 10.52  loss_cls_b1: 0.9898  loss_cls_b2: 1.078  loss_cls_b21: 1.203  loss_cls_b22: 1.394  loss_cls_b3: 1.101  loss_cls_b31: 1.282  loss_cls_b32: 1.424  loss_cls_b33: 1.548  loss_triplet_b1: 0.05375  loss_triplet_b2: 0.06059  loss_triplet_b3: 0.06207  loss_triplet_b22: 0.05179  loss_triplet_b33: 0.05561  time: 1.3576  data_time: 0.0007  lr: 2.54e-04  max_mem: 23742M
[05/30 18:08:44] fastreid.utils.events INFO:  eta: 0:16:46  epoch/iter: 47/2399  total_loss: 10.39  loss_cls_b1: 0.9765  loss_cls_b2: 1.067  loss_cls_b21: 1.197  loss_cls_b22: 1.394  loss_cls_b3: 1.09  loss_cls_b31: 1.263  loss_cls_b32: 1.415  loss_cls_b33: 1.548  loss_triplet_b1: 0.05279  loss_triplet_b2: 0.05962  loss_triplet_b3: 0.05964  loss_triplet_b22: 0.04773  loss_triplet_b33: 0.05452  time: 1.3578  data_time: 0.0006  lr: 2.29e-04  max_mem: 23742M
[05/30 18:09:57] fastreid.utils.events INFO:  eta: 0:15:32  epoch/iter: 47/2447  total_loss: 9.284  loss_cls_b1: 0.8659  loss_cls_b2: 0.9312  loss_cls_b21: 1.101  loss_cls_b22: 1.263  loss_cls_b3: 0.9509  loss_cls_b31: 1.19  loss_cls_b32: 1.344  loss_cls_b33: 1.445  loss_triplet_b1: 0.04061  loss_triplet_b2: 0.04553  loss_triplet_b3: 0.05114  loss_triplet_b22: 0.03776  loss_triplet_b33: 0.04305  time: 1.3610  data_time: 0.0004  lr: 2.29e-04  max_mem: 23742M
[05/30 18:11:15] fastreid.utils.events INFO:  eta: 0:14:14  epoch/iter: 48/2498  total_loss: 8.68  loss_cls_b1: 0.8123  loss_cls_b2: 0.8663  loss_cls_b21: 1.033  loss_cls_b22: 1.176  loss_cls_b3: 0.8725  loss_cls_b31: 1.129  loss_cls_b32: 1.241  loss_cls_b33: 1.349  loss_triplet_b1: 0.03733  loss_triplet_b2: 0.04027  loss_triplet_b3: 0.04088  loss_triplet_b22: 0.03405  loss_triplet_b33: 0.03383  time: 1.3642  data_time: 0.0004  lr: 2.02e-04  max_mem: 23742M
[05/30 18:12:32] fastreid.engine.defaults INFO: Prepare testing set
[05/30 18:12:32] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 208     | 713        | 1           |
| gallery  | 269     | 3264       | 1           |[0m
[05/30 18:12:32] fastreid.evaluation.evaluator INFO: Start inference on 3977 images
[05/30 18:12:38] fastreid.evaluation.evaluator INFO: Inference done 11/32. 0.4277 s / batch. ETA=0:00:09
[05/30 18:12:46] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:11.224255 (0.415713 s / batch per device, on 1 devices)
[05/30 18:12:46] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:11 (0.414517 s / batch per device, on 1 devices)
[05/30 18:12:47] fastreid.engine.defaults INFO: Evaluation results for WildSplit2 in csv format:
[05/30 18:12:47] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit2 | 80.25    | 89.84    | 91.96     | 70.98 | 28.45  | 75.62    |[0m
[05/30 18:12:47] fastreid.utils.events INFO:  eta: 0:12:56  epoch/iter: 49/2549  total_loss: 8.498  loss_cls_b1: 0.7876  loss_cls_b2: 0.8393  loss_cls_b21: 1.011  loss_cls_b22: 1.145  loss_cls_b3: 0.8725  loss_cls_b31: 1.11  loss_cls_b32: 1.228  loss_cls_b33: 1.285  loss_triplet_b1: 0.03413  loss_triplet_b2: 0.03462  loss_triplet_b3: 0.03835  loss_triplet_b22: 0.02983  loss_triplet_b33: 0.02889  time: 1.3669  data_time: 0.0006  lr: 1.75e-04  max_mem: 23742M
[05/30 18:13:41] fastreid.utils.events INFO:  eta: 0:11:40  epoch/iter: 50/2599  total_loss: 7.869  loss_cls_b1: 0.7069  loss_cls_b2: 0.7515  loss_cls_b21: 0.9385  loss_cls_b22: 1.039  loss_cls_b3: 0.8159  loss_cls_b31: 1.028  loss_cls_b32: 1.127  loss_cls_b33: 1.184  loss_triplet_b1: 0.0273  loss_triplet_b2: 0.02753  loss_triplet_b3: 0.03123  loss_triplet_b22: 0.02503  loss_triplet_b33: 0.02496  time: 1.3614  data_time: 0.0010  lr: 1.48e-04  max_mem: 23742M
[05/30 18:13:41] fastreid.utils.events INFO:  eta: 0:11:39  epoch/iter: 50/2600  total_loss: 7.869  loss_cls_b1: 0.7078  loss_cls_b2: 0.761  loss_cls_b21: 0.9385  loss_cls_b22: 1.048  loss_cls_b3: 0.8159  loss_cls_b31: 1.028  loss_cls_b32: 1.127  loss_cls_b33: 1.184  loss_triplet_b1: 0.02812  loss_triplet_b2: 0.02753  loss_triplet_b3: 0.03175  loss_triplet_b22: 0.02503  loss_triplet_b33: 0.02533  time: 1.3610  data_time: 0.0010  lr: 1.48e-04  max_mem: 23742M
[05/30 18:13:54] fastreid.utils.events INFO:  eta: 0:10:20  epoch/iter: 51/2651  total_loss: 7.337  loss_cls_b1: 0.6806  loss_cls_b2: 0.7296  loss_cls_b21: 0.8794  loss_cls_b22: 0.9917  loss_cls_b3: 0.7566  loss_cls_b31: 0.9668  loss_cls_b32: 1.081  loss_cls_b33: 1.137  loss_triplet_b1: 0.02224  loss_triplet_b2: 0.02233  loss_triplet_b3: 0.02533  loss_triplet_b22: 0.01839  loss_triplet_b33: 0.01803  time: 1.3397  data_time: 0.0005  lr: 1.21e-04  max_mem: 23742M
[05/30 18:14:07] fastreid.utils.events INFO:  eta: 0:09:02  epoch/iter: 52/2702  total_loss: 6.804  loss_cls_b1: 0.6107  loss_cls_b2: 0.6728  loss_cls_b21: 0.8403  loss_cls_b22: 0.9521  loss_cls_b3: 0.6707  loss_cls_b31: 0.9049  loss_cls_b32: 1.014  loss_cls_b33: 1.041  loss_triplet_b1: 0.01885  loss_triplet_b2: 0.02012  loss_triplet_b3: 0.02293  loss_triplet_b22: 0.01516  loss_triplet_b33: 0.01422  time: 1.3191  data_time: 0.0009  lr: 9.58e-05  max_mem: 23742M
[05/30 18:14:20] fastreid.utils.events INFO:  eta: 0:07:43  epoch/iter: 53/2753  total_loss: 6.232  loss_cls_b1: 0.5706  loss_cls_b2: 0.6117  loss_cls_b21: 0.775  loss_cls_b22: 0.8762  loss_cls_b3: 0.6154  loss_cls_b31: 0.8283  loss_cls_b32: 0.9315  loss_cls_b33: 0.99  loss_triplet_b1: 0.01535  loss_triplet_b2: 0.01654  loss_triplet_b3: 0.01997  loss_triplet_b22: 0.01279  loss_triplet_b33: 0.01229  time: 1.2994  data_time: 0.0005  lr: 7.25e-05  max_mem: 23742M
[05/30 18:14:32] fastreid.utils.events INFO:  eta: 0:06:33  epoch/iter: 54/2799  total_loss: 6.074  loss_cls_b1: 0.5419  loss_cls_b2: 0.5943  loss_cls_b21: 0.7302  loss_cls_b22: 0.8278  loss_cls_b3: 0.5989  loss_cls_b31: 0.8029  loss_cls_b32: 0.9094  loss_cls_b33: 0.9556  loss_triplet_b1: 0.01248  loss_triplet_b2: 0.01555  loss_triplet_b3: 0.01634  loss_triplet_b22: 0.01133  loss_triplet_b33: 0.01039  time: 1.2822  data_time: 0.0010  lr: 5.17e-05  max_mem: 23742M
[05/30 18:14:34] fastreid.utils.events INFO:  eta: 0:06:26  epoch/iter: 54/2804  total_loss: 6.002  loss_cls_b1: 0.5343  loss_cls_b2: 0.5862  loss_cls_b21: 0.7213  loss_cls_b22: 0.8073  loss_cls_b3: 0.596  loss_cls_b31: 0.7847  loss_cls_b32: 0.9026  loss_cls_b33: 0.938  loss_triplet_b1: 0.01189  loss_triplet_b2: 0.0153  loss_triplet_b3: 0.01585  loss_triplet_b22: 0.01001  loss_triplet_b33: 0.01029  time: 1.2804  data_time: 0.0006  lr: 5.17e-05  max_mem: 23742M
[05/30 18:14:46] fastreid.utils.events INFO:  eta: 0:05:08  epoch/iter: 55/2855  total_loss: 5.829  loss_cls_b1: 0.5057  loss_cls_b2: 0.5732  loss_cls_b21: 0.7059  loss_cls_b22: 0.7944  loss_cls_b3: 0.5713  loss_cls_b31: 0.7751  loss_cls_b32: 0.8782  loss_cls_b33: 0.9058  loss_triplet_b1: 0.01097  loss_triplet_b2: 0.01536  loss_triplet_b3: 0.01547  loss_triplet_b22: 0.01011  loss_triplet_b33: 0.008779  time: 1.2619  data_time: 0.0008  lr: 3.40e-05  max_mem: 23742M
[05/30 18:14:59] fastreid.utils.events INFO:  eta: 0:03:50  epoch/iter: 56/2906  total_loss: 5.608  loss_cls_b1: 0.4815  loss_cls_b2: 0.5443  loss_cls_b21: 0.6711  loss_cls_b22: 0.7525  loss_cls_b3: 0.5563  loss_cls_b31: 0.7509  loss_cls_b32: 0.837  loss_cls_b33: 0.8489  loss_triplet_b1: 0.01025  loss_triplet_b2: 0.01425  loss_triplet_b3: 0.01516  loss_triplet_b22: 0.009198  loss_triplet_b33: 0.007552  time: 1.2441  data_time: 0.0008  lr: 1.97e-05  max_mem: 23742M
[05/30 18:15:12] fastreid.utils.events INFO:  eta: 0:02:33  epoch/iter: 57/2957  total_loss: 5.463  loss_cls_b1: 0.4674  loss_cls_b2: 0.5386  loss_cls_b21: 0.665  loss_cls_b22: 0.7539  loss_cls_b3: 0.5471  loss_cls_b31: 0.7424  loss_cls_b32: 0.8106  loss_cls_b33: 0.8463  loss_triplet_b1: 0.009685  loss_triplet_b2: 0.01391  loss_triplet_b3: 0.01507  loss_triplet_b22: 0.008545  loss_triplet_b33: 0.008012  time: 1.2269  data_time: 0.0007  lr: 9.22e-06  max_mem: 23742M
[05/30 18:15:22] fastreid.utils.events INFO:  eta: 0:01:29  epoch/iter: 58/2999  total_loss: 5.268  loss_cls_b1: 0.4429  loss_cls_b2: 0.4985  loss_cls_b21: 0.6502  loss_cls_b22: 0.7154  loss_cls_b3: 0.5215  loss_cls_b31: 0.7033  loss_cls_b32: 0.786  loss_cls_b33: 0.822  loss_triplet_b1: 0.009028  loss_triplet_b2: 0.01136  loss_triplet_b3: 0.01387  loss_triplet_b22: 0.007392  loss_triplet_b33: 0.007038  time: 1.2132  data_time: 0.0005  lr: 2.84e-06  max_mem: 23742M
[05/30 18:15:25] fastreid.utils.events INFO:  eta: 0:01:16  epoch/iter: 58/3008  total_loss: 5.358  loss_cls_b1: 0.4462  loss_cls_b2: 0.5083  loss_cls_b21: 0.6568  loss_cls_b22: 0.7246  loss_cls_b3: 0.5346  loss_cls_b31: 0.7114  loss_cls_b32: 0.7914  loss_cls_b33: 0.8312  loss_triplet_b1: 0.009323  loss_triplet_b2: 0.01211  loss_triplet_b3: 0.01466  loss_triplet_b22: 0.008458  loss_triplet_b33: 0.007528  time: 1.2103  data_time: 0.0004  lr: 2.84e-06  max_mem: 23742M
[05/30 18:15:37] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/3059  total_loss: 5.253  loss_cls_b1: 0.4388  loss_cls_b2: 0.5044  loss_cls_b21: 0.6431  loss_cls_b22: 0.7154  loss_cls_b3: 0.5119  loss_cls_b31: 0.7018  loss_cls_b32: 0.7763  loss_cls_b33: 0.8236  loss_triplet_b1: 0.009052  loss_triplet_b2: 0.0109  loss_triplet_b3: 0.01423  loss_triplet_b22: 0.006685  loss_triplet_b33: 0.007038  time: 1.1943  data_time: 0.0012  lr: 7.00e-07  max_mem: 23742M
[05/30 18:15:37] fastreid.engine.defaults INFO: Prepare testing set
[05/30 18:15:38] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 208     | 713        | 1           |
| gallery  | 269     | 3264       | 1           |[0m
[05/30 18:15:38] fastreid.evaluation.evaluator INFO: Start inference on 3977 images
[05/30 18:15:41] fastreid.evaluation.evaluator INFO: Inference done 11/32. 0.2475 s / batch. ETA=0:00:05
[05/30 18:15:45] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:05.743022 (0.212705 s / batch per device, on 1 devices)
[05/30 18:15:45] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:05 (0.211686 s / batch per device, on 1 devices)
[05/30 18:15:46] fastreid.engine.defaults INFO: Evaluation results for WildSplit2 in csv format:
[05/30 18:15:46] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit2 | 81.38    | 90.55    | 91.54     | 73.00 | 29.90  | 77.19    |[0m
[05/30 18:15:46] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit2/mgn_R50-ibn/model_best.pth
[05/30 18:15:51] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit2/mgn_R50-ibn/model_final.pth
[05/30 18:15:53] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/3059  total_loss: 5.253  loss_cls_b1: 0.4388  loss_cls_b2: 0.5044  loss_cls_b21: 0.6431  loss_cls_b22: 0.7154  loss_cls_b3: 0.5119  loss_cls_b31: 0.7018  loss_cls_b32: 0.7763  loss_cls_b33: 0.8236  loss_triplet_b1: 0.009052  loss_triplet_b2: 0.0109  loss_triplet_b3: 0.01423  loss_triplet_b22: 0.006685  loss_triplet_b33: 0.007038  time: 1.1943  data_time: 0.0012  lr: 7.00e-07  max_mem: 23742M
[05/30 18:15:53] fastreid.engine.hooks INFO: Overall training speed: 3058 iterations in 1:00:52 (1.1943 s / it)
[05/30 18:15:53] fastreid.engine.hooks INFO: Total training time: 1:02:53 (0:02:00 on hooks)
[06/15 10:44:31] fastreid INFO: Rank of current process: 0. World size: 1
[06/15 10:44:31] fastreid INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.14 | packaged by conda-forge | (default, Nov 21 2022, 13:18:34) [GCC 10.4.0]
numpy                   1.23.5
fastreid                1.3 @/data01/zhangleiting/_codes/fast-reid/./fastreid
FASTREID_ENV_MODULE     <not set>
PyTorch                 1.11.0+cu113 @/data01/zhangleiting/anaconda3/envs/fast/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1,2,3             NVIDIA A100-PCIE-40GB
CUDA_HOME               /usr/local/cuda-11.4
Pillow                  9.3.0
torchvision             0.12.0+cu113 @/data01/zhangleiting/anaconda3/envs/fast/lib/python3.8/site-packages/torchvision
torchvision arch flags  sm_35, sm_50, sm_60, sm_70, sm_75, sm_80, sm_86
cv2                     4.6.0
----------------------  ----------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[06/15 10:44:31] fastreid INFO: Command line arguments: Namespace(config_file='./configs/WildSplit2/mgn_R50-ibn.yml', dist_url='tcp://127.0.0.1:50163', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './logs/wildsplit2/mgn_R50-ibn/model_best.pth', 'MODEL.DEVICE', 'cuda:1'], resume=False)
[06/15 10:44:31] fastreid INFO: Contents of args.config_file=./configs/WildSplit2/mgn_R50-ibn.yml:
_BASE_: ../Base-MGN.yml

MODEL:
  BACKBONE:
    WITH_IBN: True

DATASETS:
  NAMES: ("WildSplit2",)
  TESTS: ("WildSplit2",)

OUTPUT_DIR: logs/wildsplit2/mgn_R50-ibn

[06/15 10:44:31] fastreid INFO: Running with full config:
CUDNN_BENCHMARK: True
DATALOADER:
  NUM_INSTANCE: 16
  NUM_WORKERS: 8
  SAMPLER_TRAIN: NaiveIdentitySampler
  SET_WEIGHT: []
DATASETS:
  COMBINEALL: False
  NAMES: ('WildSplit2',)
  TESTS: ('WildSplit2',)
INPUT:
  AFFINE:
    ENABLED: False
  AUGMIX:
    ENABLED: False
    PROB: 0.0
  AUTOAUG:
    ENABLED: True
    PROB: 0.1
  CJ:
    BRIGHTNESS: 0.15
    CONTRAST: 0.15
    ENABLED: False
    HUE: 0.1
    PROB: 0.5
    SATURATION: 0.1
  CROP:
    ENABLED: False
    RATIO: [0.75, 1.3333333333333333]
    SCALE: [0.16, 1]
    SIZE: [224, 224]
  FLIP:
    ENABLED: True
    PROB: 0.5
  PADDING:
    ENABLED: True
    MODE: constant
    SIZE: 10
  REA:
    ENABLED: True
    PROB: 0.5
    VALUE: [123.675, 116.28, 103.53]
  RPT:
    ENABLED: False
    PROB: 0.5
  SIZE_TEST: [384, 128]
  SIZE_TRAIN: [384, 128]
KD:
  EMA:
    ENABLED: False
    MOMENTUM: 0.999
  MODEL_CONFIG: []
  MODEL_WEIGHTS: []
MODEL:
  BACKBONE:
    ATT_DROP_RATE: 0.0
    DEPTH: 50x
    DROP_PATH_RATIO: 0.1
    DROP_RATIO: 0.0
    FEAT_DIM: 2048
    LAST_STRIDE: 1
    NAME: build_resnet_backbone
    NORM: BN
    PRETRAIN: True
    PRETRAIN_PATH: 
    SIE_COE: 3.0
    STRIDE_SIZE: (16, 16)
    WITH_IBN: True
    WITH_NL: False
    WITH_SE: False
  DEVICE: cuda:1
  FREEZE_LAYERS: ['backbone', 'b1', 'b2', 'b3']
  HEADS:
    CLS_LAYER: CircleSoftmax
    EMBEDDING_DIM: 256
    MARGIN: 0.35
    NAME: EmbeddingHead
    NECK_FEAT: after
    NORM: BN
    NUM_CLASSES: 0
    POOL_LAYER: GeneralizedMeanPoolingP
    SCALE: 64
    WITH_BNNECK: True
  LOSSES:
    CE:
      ALPHA: 0.2
      EPSILON: 0.1
      SCALE: 1.0
    CIRCLE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    COSFACE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    FL:
      ALPHA: 0.25
      GAMMA: 2
      SCALE: 1.0
    NAME: ('CrossEntropyLoss', 'TripletLoss')
    TRI:
      HARD_MINING: True
      MARGIN: 0.0
      NORM_FEAT: False
      SCALE: 1.0
  META_ARCHITECTURE: MGN
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.120000000000005, 57.375]
  QUEUE_SIZE: 8192
  WEIGHTS: ./logs/wildsplit2/mgn_R50-ibn/model_best.pth
OUTPUT_DIR: logs/wildsplit2/mgn_R50-ibn
SOLVER:
  AMP:
    ENABLED: True
  BASE_LR: 0.00035
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 20
  CLIP_GRADIENTS:
    CLIP_TYPE: norm
    CLIP_VALUE: 5.0
    ENABLED: False
    NORM_TYPE: 2.0
  DELAY_EPOCHS: 30
  ETA_MIN_LR: 7e-07
  FREEZE_ITERS: 1000
  GAMMA: 0.1
  HEADS_LR_FACTOR: 1.0
  IMS_PER_BATCH: 64
  MAX_EPOCH: 60
  MOMENTUM: 0.9
  NESTEROV: False
  OPT: Adam
  SCHED: CosineAnnealingLR
  STEPS: [40, 90]
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 2000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0005
  WEIGHT_DECAY_BIAS: 0.0005
  WEIGHT_DECAY_NORM: 0.0005
TEST:
  AQE:
    ALPHA: 3.0
    ENABLED: False
    QE_K: 5
    QE_TIME: 1
  EVAL_PERIOD: 10
  FLIP:
    ENABLED: False
  IMS_PER_BATCH: 128
  METRIC: cosine
  PRECISE_BN:
    DATASET: Market1501
    ENABLED: False
    NUM_ITER: 300
  RERANK:
    ENABLED: False
    K1: 20
    K2: 6
    LAMBDA: 0.3
  ROC:
    ENABLED: False
[06/15 10:44:31] fastreid INFO: Full config saved to /data01/zhangleiting/_codes/fast-reid/logs/wildsplit2/mgn_R50-ibn/config.yaml
[06/15 10:44:31] fastreid.utils.env INFO: Using a generated random seed 32923307
[06/15 10:44:37] fastreid.engine.defaults INFO: Model:
MGN(
  (backbone): Sequential(
    (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (5): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (6): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): IBN(
        (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (se): Identity()
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (b1): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b1_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=0, scale=64, margin=0.35)
  )
  (b2): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b2_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=0, scale=64, margin=0.35)
  )
  (b21_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=0, scale=64, margin=0.35)
  )
  (b22_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=0, scale=64, margin=0.35)
  )
  (b3): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b3_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=0, scale=64, margin=0.35)
  )
  (b31_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=0, scale=64, margin=0.35)
  )
  (b32_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=0, scale=64, margin=0.35)
  )
  (b33_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=0, scale=64, margin=0.35)
  )
)
[06/15 10:44:37] fastreid.utils.checkpoint INFO: Loading checkpoint from ./logs/wildsplit2/mgn_R50-ibn/model_best.pth
[06/15 10:44:38] fastreid.utils.checkpoint WARNING: Skip loading parameter 'b1_head.weight' to the model due to incompatible shapes: (271, 256) in the checkpoint but (0, 256) in the model! You might want to double check if this is expected.
[06/15 10:44:38] fastreid.utils.checkpoint WARNING: Skip loading parameter 'b2_head.weight' to the model due to incompatible shapes: (271, 256) in the checkpoint but (0, 256) in the model! You might want to double check if this is expected.
[06/15 10:44:38] fastreid.utils.checkpoint WARNING: Skip loading parameter 'b21_head.weight' to the model due to incompatible shapes: (271, 256) in the checkpoint but (0, 256) in the model! You might want to double check if this is expected.
[06/15 10:44:38] fastreid.utils.checkpoint WARNING: Skip loading parameter 'b22_head.weight' to the model due to incompatible shapes: (271, 256) in the checkpoint but (0, 256) in the model! You might want to double check if this is expected.
[06/15 10:44:38] fastreid.utils.checkpoint WARNING: Skip loading parameter 'b3_head.weight' to the model due to incompatible shapes: (271, 256) in the checkpoint but (0, 256) in the model! You might want to double check if this is expected.
[06/15 10:44:38] fastreid.utils.checkpoint WARNING: Skip loading parameter 'b31_head.weight' to the model due to incompatible shapes: (271, 256) in the checkpoint but (0, 256) in the model! You might want to double check if this is expected.
[06/15 10:44:38] fastreid.utils.checkpoint WARNING: Skip loading parameter 'b32_head.weight' to the model due to incompatible shapes: (271, 256) in the checkpoint but (0, 256) in the model! You might want to double check if this is expected.
[06/15 10:44:38] fastreid.utils.checkpoint WARNING: Skip loading parameter 'b33_head.weight' to the model due to incompatible shapes: (271, 256) in the checkpoint but (0, 256) in the model! You might want to double check if this is expected.
[06/15 10:44:38] fastreid.utils.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mb32_head.weight[0m
  [34mb21_head.weight[0m
  [34mb1_head.weight[0m
  [34mb33_head.weight[0m
  [34mb3_head.weight[0m
  [34mb22_head.weight[0m
  [34mb31_head.weight[0m
  [34mb2_head.weight[0m
[06/15 10:44:38] fastreid.engine.defaults INFO: Prepare testing set
[06/15 10:44:38] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 208     | 713        | 1           |
| gallery  | 269     | 3264       | 1           |[0m
[06/15 10:44:38] fastreid.evaluation.evaluator INFO: Start inference on 3977 images
[06/15 10:44:46] fastreid.evaluation.evaluator INFO: Inference done 11/32. 0.1647 s / batch. ETA=0:00:03
[06/15 10:44:49] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:04.056365 (0.150236 s / batch per device, on 1 devices)
[06/15 10:44:49] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:03 (0.145951 s / batch per device, on 1 devices)
[06/15 10:44:50] fastreid.engine.defaults INFO: Evaluation results for WildSplit2 in csv format:
[06/15 10:44:50] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit2 | 81.38    | 90.55    | 91.54     | 73.00 | 29.90  | 77.19    |[0m
[12/26 23:21:23] fastreid INFO: Rank of current process: 0. World size: 1
[12/26 23:21:24] fastreid INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.14 | packaged by conda-forge | (default, Nov 21 2022, 13:18:34) [GCC 10.4.0]
numpy                   1.23.5
fastreid                1.3 @/data01/zhangleiting/_codes/fast-reid/./fastreid
FASTREID_ENV_MODULE     <not set>
PyTorch                 1.11.0+cu113 @/data01/zhangleiting/anaconda3/envs/fast/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1,2,3             NVIDIA A100-PCIE-40GB
CUDA_HOME               /usr/local/cuda-11.4
Pillow                  9.3.0
torchvision             0.12.0+cu113 @/data01/zhangleiting/anaconda3/envs/fast/lib/python3.8/site-packages/torchvision
torchvision arch flags  sm_35, sm_50, sm_60, sm_70, sm_75, sm_80, sm_86
cv2                     4.6.0
----------------------  ----------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[12/26 23:21:24] fastreid INFO: Command line arguments: Namespace(config_file='./configs/WildSplit2/mgn_R50-ibn.yml', dist_url='tcp://127.0.0.1:50163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.DEVICE', 'cuda:1'], resume=False)
[12/26 23:21:24] fastreid INFO: Contents of args.config_file=./configs/WildSplit2/mgn_R50-ibn.yml:
_BASE_: ../Base-MGN.yml

MODEL:
  BACKBONE:
    WITH_IBN: True

DATASETS:
  NAMES: ("WildSplit2",)
  TESTS: ("WildSplit2",)

OUTPUT_DIR: logs/wildsplit2/mgn_R50-ibn

[12/26 23:21:24] fastreid INFO: Running with full config:
CUDNN_BENCHMARK: True
DATALOADER:
  NUM_INSTANCE: 16
  NUM_WORKERS: 8
  SAMPLER_TRAIN: NaiveIdentitySampler
  SET_WEIGHT: []
DATASETS:
  COMBINEALL: False
  NAMES: ('WildSplit2',)
  TESTS: ('WildSplit2',)
INPUT:
  AFFINE:
    ENABLED: False
  AUGMIX:
    ENABLED: False
    PROB: 0.0
  AUTOAUG:
    ENABLED: True
    PROB: 0.1
  CJ:
    BRIGHTNESS: 0.15
    CONTRAST: 0.15
    ENABLED: False
    HUE: 0.1
    PROB: 0.5
    SATURATION: 0.1
  CROP:
    ENABLED: False
    RATIO: [0.75, 1.3333333333333333]
    SCALE: [0.16, 1]
    SIZE: [224, 224]
  FLIP:
    ENABLED: True
    PROB: 0.5
  PADDING:
    ENABLED: True
    MODE: constant
    SIZE: 10
  REA:
    ENABLED: True
    PROB: 0.5
    VALUE: [123.675, 116.28, 103.53]
  RPT:
    ENABLED: False
    PROB: 0.5
  SIZE_TEST: [384, 128]
  SIZE_TRAIN: [384, 128]
KD:
  EMA:
    ENABLED: False
    MOMENTUM: 0.999
  MODEL_CONFIG: []
  MODEL_WEIGHTS: []
MODEL:
  BACKBONE:
    ATT_DROP_RATE: 0.0
    DEPTH: 50x
    DROP_PATH_RATIO: 0.1
    DROP_RATIO: 0.0
    FEAT_DIM: 2048
    LAST_STRIDE: 1
    NAME: build_resnet_backbone
    NORM: BN
    PRETRAIN: True
    PRETRAIN_PATH: 
    SIE_COE: 3.0
    STRIDE_SIZE: (16, 16)
    WITH_IBN: True
    WITH_NL: False
    WITH_SE: False
  DEVICE: cuda:1
  FREEZE_LAYERS: ['backbone', 'b1', 'b2', 'b3']
  HEADS:
    CLS_LAYER: CircleSoftmax
    EMBEDDING_DIM: 256
    MARGIN: 0.35
    NAME: EmbeddingHead
    NECK_FEAT: after
    NORM: BN
    NUM_CLASSES: 0
    POOL_LAYER: GeneralizedMeanPoolingP
    SCALE: 64
    WITH_BNNECK: True
  LOSSES:
    CE:
      ALPHA: 0.2
      EPSILON: 0.1
      SCALE: 1.0
    CIRCLE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    COSFACE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    FL:
      ALPHA: 0.25
      GAMMA: 2
      SCALE: 1.0
    NAME: ('CrossEntropyLoss', 'TripletLoss')
    TRI:
      HARD_MINING: True
      MARGIN: 0.0
      NORM_FEAT: False
      SCALE: 1.0
  META_ARCHITECTURE: MGN
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.120000000000005, 57.375]
  QUEUE_SIZE: 8192
  WEIGHTS: 
OUTPUT_DIR: logs/wildsplit2/mgn_R50-ibn
SOLVER:
  AMP:
    ENABLED: True
  BASE_LR: 0.00035
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 20
  CLIP_GRADIENTS:
    CLIP_TYPE: norm
    CLIP_VALUE: 5.0
    ENABLED: False
    NORM_TYPE: 2.0
  DELAY_EPOCHS: 30
  ETA_MIN_LR: 7e-07
  FREEZE_ITERS: 1000
  GAMMA: 0.1
  HEADS_LR_FACTOR: 1.0
  IMS_PER_BATCH: 64
  MAX_EPOCH: 60
  MOMENTUM: 0.9
  NESTEROV: False
  OPT: Adam
  SCHED: CosineAnnealingLR
  STEPS: [40, 90]
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 2000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0005
  WEIGHT_DECAY_BIAS: 0.0005
  WEIGHT_DECAY_NORM: 0.0005
TEST:
  AQE:
    ALPHA: 3.0
    ENABLED: False
    QE_K: 5
    QE_TIME: 1
  EVAL_PERIOD: 10
  FLIP:
    ENABLED: False
  IMS_PER_BATCH: 128
  METRIC: cosine
  PRECISE_BN:
    DATASET: Market1501
    ENABLED: False
    NUM_ITER: 300
  RERANK:
    ENABLED: False
    K1: 20
    K2: 6
    LAMBDA: 0.3
  ROC:
    ENABLED: False
[12/26 23:21:24] fastreid INFO: Full config saved to /data01/zhangleiting/_codes/fast-reid/logs/wildsplit2/mgn_R50-ibn/config.yaml
[12/26 23:21:24] fastreid.utils.env INFO: Using a generated random seed 25046052
[12/26 23:21:24] fastreid.engine.defaults INFO: Prepare training set
[12/26 23:21:24] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| train    | 297     | 3268       | 1           |[0m
[12/26 23:21:24] fastreid.data.build INFO: Using training sampler NaiveIdentitySampler
[12/26 23:21:25] fastreid.engine.defaults INFO: Auto-scaling the num_classes=297
[12/26 23:21:25] fastreid.modeling.backbones.resnet INFO: Loading pretrained model from /data01/zhangleiting/.cache/torch/checkpoints/resnet50_ibn_a-d9d0bb7b.pth
[12/26 23:21:27] fastreid.modeling.backbones.resnet INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc.{weight, bias}[0m
[12/26 23:21:39] fastreid.engine.defaults INFO: Model:
MGN(
  (backbone): Sequential(
    (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (5): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (6): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): IBN(
        (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (se): Identity()
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (b1): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b1_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b2): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b2_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b21_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b22_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b3): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b3_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b31_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b32_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b33_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
)
[12/26 23:21:50] fastreid.utils.checkpoint INFO: No checkpoint found. Training model from scratch
[12/26 23:21:50] fastreid.engine.train_loop INFO: Starting training from epoch 0
[12/26 23:21:50] fastreid.engine.hooks INFO: Freeze layer group "backbone, b1, b2, b3" training for 1000 iterations
[12/26 23:22:13] fastreid.utils.events INFO:  eta: 0:18:38  epoch/iter: 0/50  total_loss: 58.77  loss_cls_b1: 6.243  loss_cls_b2: 6.287  loss_cls_b21: 6.253  loss_cls_b22: 6.197  loss_cls_b3: 6.179  loss_cls_b31: 6.132  loss_cls_b32: 6.163  loss_cls_b33: 6.17  loss_triplet_b1: 1.637  loss_triplet_b2: 1.612  loss_triplet_b3: 1.658  loss_triplet_b22: 1.999  loss_triplet_b33: 2.311  time: 0.3753  data_time: 0.0008  lr: 4.21e-05  max_mem: 72M
[12/26 23:22:34] fastreid.utils.events INFO:  eta: 0:18:45  epoch/iter: 1/101  total_loss: 59.19  loss_cls_b1: 6.232  loss_cls_b2: 6.276  loss_cls_b21: 6.253  loss_cls_b22: 6.229  loss_cls_b3: 6.203  loss_cls_b31: 6.174  loss_cls_b32: 6.188  loss_cls_b33: 6.239  loss_triplet_b1: 1.644  loss_triplet_b2: 1.643  loss_triplet_b3: 1.681  loss_triplet_b22: 2.068  loss_triplet_b33: 2.363  time: 0.3883  data_time: 0.0024  lr: 5.01e-05  max_mem: 72M
[12/26 23:22:59] fastreid.utils.events INFO:  eta: 0:19:09  epoch/iter: 2/152  total_loss: 58.69  loss_cls_b1: 6.231  loss_cls_b2: 6.272  loss_cls_b21: 6.253  loss_cls_b22: 6.225  loss_cls_b3: 6.181  loss_cls_b31: 6.186  loss_cls_b32: 6.186  loss_cls_b33: 6.224  loss_triplet_b1: 1.592  loss_triplet_b2: 1.612  loss_triplet_b3: 1.594  loss_triplet_b22: 1.976  loss_triplet_b33: 2.243  time: 0.4238  data_time: 0.0020  lr: 5.82e-05  max_mem: 72M
[12/26 23:23:21] fastreid.utils.events INFO:  eta: 0:19:27  epoch/iter: 3/199  total_loss: 58.7  loss_cls_b1: 6.244  loss_cls_b2: 6.27  loss_cls_b21: 6.254  loss_cls_b22: 6.208  loss_cls_b3: 6.2  loss_cls_b31: 6.192  loss_cls_b32: 6.196  loss_cls_b33: 6.212  loss_triplet_b1: 1.6  loss_triplet_b2: 1.606  loss_triplet_b3: 1.573  loss_triplet_b22: 1.973  loss_triplet_b33: 2.247  time: 0.4305  data_time: 0.0019  lr: 6.56e-05  max_mem: 72M
[12/26 23:23:23] fastreid.utils.events INFO:  eta: 0:19:27  epoch/iter: 3/203  total_loss: 58.69  loss_cls_b1: 6.247  loss_cls_b2: 6.269  loss_cls_b21: 6.253  loss_cls_b22: 6.208  loss_cls_b3: 6.201  loss_cls_b31: 6.199  loss_cls_b32: 6.192  loss_cls_b33: 6.215  loss_triplet_b1: 1.596  loss_triplet_b2: 1.606  loss_triplet_b3: 1.573  loss_triplet_b22: 1.973  loss_triplet_b33: 2.251  time: 0.4317  data_time: 0.0018  lr: 6.62e-05  max_mem: 72M
[12/26 23:23:46] fastreid.utils.events INFO:  eta: 0:19:49  epoch/iter: 4/254  total_loss: 58.85  loss_cls_b1: 6.233  loss_cls_b2: 6.243  loss_cls_b21: 6.251  loss_cls_b22: 6.21  loss_cls_b3: 6.207  loss_cls_b31: 6.2  loss_cls_b32: 6.21  loss_cls_b33: 6.212  loss_triplet_b1: 1.606  loss_triplet_b2: 1.623  loss_triplet_b3: 1.613  loss_triplet_b22: 1.994  loss_triplet_b33: 2.276  time: 0.4381  data_time: 0.0012  lr: 7.42e-05  max_mem: 72M
[12/26 23:24:10] fastreid.utils.events INFO:  eta: 0:20:02  epoch/iter: 5/305  total_loss: 58.75  loss_cls_b1: 6.256  loss_cls_b2: 6.271  loss_cls_b21: 6.268  loss_cls_b22: 6.205  loss_cls_b3: 6.204  loss_cls_b31: 6.208  loss_cls_b32: 6.222  loss_cls_b33: 6.211  loss_triplet_b1: 1.592  loss_triplet_b2: 1.606  loss_triplet_b3: 1.59  loss_triplet_b22: 1.954  loss_triplet_b33: 2.223  time: 0.4433  data_time: 0.0022  lr: 8.22e-05  max_mem: 72M
[12/26 23:24:34] fastreid.utils.events INFO:  eta: 0:20:02  epoch/iter: 6/356  total_loss: 58.88  loss_cls_b1: 6.263  loss_cls_b2: 6.249  loss_cls_b21: 6.267  loss_cls_b22: 6.198  loss_cls_b3: 6.227  loss_cls_b31: 6.212  loss_cls_b32: 6.236  loss_cls_b33: 6.205  loss_triplet_b1: 1.607  loss_triplet_b2: 1.616  loss_triplet_b3: 1.612  loss_triplet_b22: 1.983  loss_triplet_b33: 2.25  time: 0.4456  data_time: 0.0012  lr: 9.03e-05  max_mem: 72M
[12/26 23:24:54] fastreid.utils.events INFO:  eta: 0:19:46  epoch/iter: 7/399  total_loss: 58.96  loss_cls_b1: 6.246  loss_cls_b2: 6.256  loss_cls_b21: 6.266  loss_cls_b22: 6.19  loss_cls_b3: 6.231  loss_cls_b31: 6.215  loss_cls_b32: 6.23  loss_cls_b33: 6.212  loss_triplet_b1: 1.624  loss_triplet_b2: 1.645  loss_triplet_b3: 1.627  loss_triplet_b22: 1.989  loss_triplet_b33: 2.262  time: 0.4467  data_time: 0.0015  lr: 9.71e-05  max_mem: 72M
[12/26 23:24:57] fastreid.utils.events INFO:  eta: 0:19:43  epoch/iter: 7/407  total_loss: 58.93  loss_cls_b1: 6.23  loss_cls_b2: 6.261  loss_cls_b21: 6.267  loss_cls_b22: 6.189  loss_cls_b3: 6.223  loss_cls_b31: 6.223  loss_cls_b32: 6.235  loss_cls_b33: 6.214  loss_triplet_b1: 1.617  loss_triplet_b2: 1.641  loss_triplet_b3: 1.621  loss_triplet_b22: 1.986  loss_triplet_b33: 2.256  time: 0.4470  data_time: 0.0014  lr: 9.83e-05  max_mem: 72M
[12/26 23:25:21] fastreid.utils.events INFO:  eta: 0:19:20  epoch/iter: 8/458  total_loss: 58.69  loss_cls_b1: 6.252  loss_cls_b2: 6.261  loss_cls_b21: 6.264  loss_cls_b22: 6.175  loss_cls_b3: 6.22  loss_cls_b31: 6.226  loss_cls_b32: 6.244  loss_cls_b33: 6.203  loss_triplet_b1: 1.575  loss_triplet_b2: 1.608  loss_triplet_b3: 1.606  loss_triplet_b22: 1.982  loss_triplet_b33: 2.224  time: 0.4474  data_time: 0.0005  lr: 1.06e-04  max_mem: 72M
[12/26 23:25:44] fastreid.engine.defaults INFO: Prepare testing set
[12/26 23:25:44] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 713        | 1           |
| gallery  | 297     | 3264       | 1           |[0m
[12/26 23:25:44] fastreid.evaluation.evaluator INFO: Start inference on 3977 images
[12/26 23:25:52] fastreid.evaluation.evaluator INFO: Inference done 11/32. 0.3157 s / batch. ETA=0:00:06
[12/26 23:26:00] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:10.211187 (0.378192 s / batch per device, on 1 devices)
[12/26 23:26:00] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:10 (0.374434 s / batch per device, on 1 devices)
[12/26 23:26:01] fastreid.engine.defaults INFO: Evaluation results for WildSplit2 in csv format:
[12/26 23:26:01] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit2 | 49.79    | 65.44    | 71.79     | 20.27 | 2.88   | 35.03    |[0m
[12/26 23:26:01] fastreid.utils.events INFO:  eta: 0:18:57  epoch/iter: 9/509  total_loss: 58.7  loss_cls_b1: 6.234  loss_cls_b2: 6.237  loss_cls_b21: 6.265  loss_cls_b22: 6.175  loss_cls_b3: 6.217  loss_cls_b31: 6.238  loss_cls_b32: 6.221  loss_cls_b33: 6.191  loss_triplet_b1: 1.606  loss_triplet_b2: 1.606  loss_triplet_b3: 1.623  loss_triplet_b22: 1.985  loss_triplet_b33: 2.237  time: 0.4477  data_time: 0.0012  lr: 1.14e-04  max_mem: 252M
[12/26 23:26:25] fastreid.utils.events INFO:  eta: 0:18:40  epoch/iter: 10/560  total_loss: 58.46  loss_cls_b1: 6.231  loss_cls_b2: 6.248  loss_cls_b21: 6.27  loss_cls_b22: 6.187  loss_cls_b3: 6.216  loss_cls_b31: 6.224  loss_cls_b32: 6.206  loss_cls_b33: 6.19  loss_triplet_b1: 1.567  loss_triplet_b2: 1.58  loss_triplet_b3: 1.581  loss_triplet_b22: 1.952  loss_triplet_b33: 2.161  time: 0.4496  data_time: 0.0021  lr: 1.22e-04  max_mem: 252M
[12/26 23:26:44] fastreid.utils.events INFO:  eta: 0:18:25  epoch/iter: 11/599  total_loss: 58.4  loss_cls_b1: 6.232  loss_cls_b2: 6.234  loss_cls_b21: 6.258  loss_cls_b22: 6.204  loss_cls_b3: 6.214  loss_cls_b31: 6.221  loss_cls_b32: 6.206  loss_cls_b33: 6.186  loss_triplet_b1: 1.549  loss_triplet_b2: 1.563  loss_triplet_b3: 1.551  loss_triplet_b22: 1.911  loss_triplet_b33: 2.115  time: 0.4504  data_time: 0.0012  lr: 1.28e-04  max_mem: 252M
[12/26 23:26:49] fastreid.utils.events INFO:  eta: 0:18:18  epoch/iter: 11/611  total_loss: 58.33  loss_cls_b1: 6.238  loss_cls_b2: 6.228  loss_cls_b21: 6.26  loss_cls_b22: 6.216  loss_cls_b3: 6.218  loss_cls_b31: 6.221  loss_cls_b32: 6.208  loss_cls_b33: 6.186  loss_triplet_b1: 1.546  loss_triplet_b2: 1.547  loss_triplet_b3: 1.542  loss_triplet_b22: 1.909  loss_triplet_b33: 2.097  time: 0.4503  data_time: 0.0008  lr: 1.30e-04  max_mem: 252M
[12/26 23:27:12] fastreid.utils.events INFO:  eta: 0:17:52  epoch/iter: 12/662  total_loss: 58.22  loss_cls_b1: 6.19  loss_cls_b2: 6.225  loss_cls_b21: 6.263  loss_cls_b22: 6.225  loss_cls_b3: 6.205  loss_cls_b31: 6.214  loss_cls_b32: 6.212  loss_cls_b33: 6.192  loss_triplet_b1: 1.543  loss_triplet_b2: 1.54  loss_triplet_b3: 1.517  loss_triplet_b22: 1.819  loss_triplet_b33: 2.034  time: 0.4496  data_time: 0.0015  lr: 1.38e-04  max_mem: 252M
[12/26 23:27:35] fastreid.utils.events INFO:  eta: 0:17:27  epoch/iter: 13/713  total_loss: 57.97  loss_cls_b1: 6.195  loss_cls_b2: 6.221  loss_cls_b21: 6.256  loss_cls_b22: 6.202  loss_cls_b3: 6.19  loss_cls_b31: 6.2  loss_cls_b32: 6.203  loss_cls_b33: 6.192  loss_triplet_b1: 1.503  loss_triplet_b2: 1.512  loss_triplet_b3: 1.485  loss_triplet_b22: 1.775  loss_triplet_b33: 1.965  time: 0.4497  data_time: 0.0009  lr: 1.46e-04  max_mem: 252M
[12/26 23:27:57] fastreid.utils.events INFO:  eta: 0:17:02  epoch/iter: 14/764  total_loss: 57.87  loss_cls_b1: 6.182  loss_cls_b2: 6.219  loss_cls_b21: 6.234  loss_cls_b22: 6.202  loss_cls_b3: 6.202  loss_cls_b31: 6.192  loss_cls_b32: 6.209  loss_cls_b33: 6.192  loss_triplet_b1: 1.497  loss_triplet_b2: 1.51  loss_triplet_b3: 1.485  loss_triplet_b22: 1.769  loss_triplet_b33: 1.933  time: 0.4486  data_time: 0.0009  lr: 1.54e-04  max_mem: 252M
[12/26 23:28:12] fastreid.utils.events INFO:  eta: 0:16:44  epoch/iter: 15/799  total_loss: 57.89  loss_cls_b1: 6.176  loss_cls_b2: 6.209  loss_cls_b21: 6.25  loss_cls_b22: 6.2  loss_cls_b3: 6.187  loss_cls_b31: 6.191  loss_cls_b32: 6.217  loss_cls_b33: 6.191  loss_triplet_b1: 1.503  loss_triplet_b2: 1.508  loss_triplet_b3: 1.487  loss_triplet_b22: 1.771  loss_triplet_b33: 1.918  time: 0.4473  data_time: 0.0008  lr: 1.60e-04  max_mem: 252M
[12/26 23:28:19] fastreid.utils.events INFO:  eta: 0:16:37  epoch/iter: 15/815  total_loss: 57.92  loss_cls_b1: 6.186  loss_cls_b2: 6.197  loss_cls_b21: 6.249  loss_cls_b22: 6.185  loss_cls_b3: 6.186  loss_cls_b31: 6.199  loss_cls_b32: 6.216  loss_cls_b33: 6.186  loss_triplet_b1: 1.504  loss_triplet_b2: 1.51  loss_triplet_b3: 1.492  loss_triplet_b22: 1.782  loss_triplet_b33: 1.935  time: 0.4471  data_time: 0.0009  lr: 1.62e-04  max_mem: 252M
[12/26 23:28:41] fastreid.utils.events INFO:  eta: 0:16:11  epoch/iter: 16/866  total_loss: 57.88  loss_cls_b1: 6.194  loss_cls_b2: 6.215  loss_cls_b21: 6.25  loss_cls_b22: 6.187  loss_cls_b3: 6.207  loss_cls_b31: 6.19  loss_cls_b32: 6.201  loss_cls_b33: 6.196  loss_triplet_b1: 1.495  loss_triplet_b2: 1.494  loss_triplet_b3: 1.48  loss_triplet_b22: 1.771  loss_triplet_b33: 1.935  time: 0.4463  data_time: 0.0008  lr: 1.70e-04  max_mem: 252M
[12/26 23:29:04] fastreid.utils.events INFO:  eta: 0:15:49  epoch/iter: 17/917  total_loss: 58.03  loss_cls_b1: 6.201  loss_cls_b2: 6.232  loss_cls_b21: 6.236  loss_cls_b22: 6.208  loss_cls_b3: 6.21  loss_cls_b31: 6.19  loss_cls_b32: 6.213  loss_cls_b33: 6.196  loss_triplet_b1: 1.505  loss_triplet_b2: 1.505  loss_triplet_b3: 1.484  loss_triplet_b22: 1.781  loss_triplet_b33: 1.956  time: 0.4463  data_time: 0.0011  lr: 1.78e-04  max_mem: 252M
[12/26 23:29:26] fastreid.utils.events INFO:  eta: 0:15:25  epoch/iter: 18/968  total_loss: 57.86  loss_cls_b1: 6.208  loss_cls_b2: 6.23  loss_cls_b21: 6.234  loss_cls_b22: 6.209  loss_cls_b3: 6.209  loss_cls_b31: 6.208  loss_cls_b32: 6.202  loss_cls_b33: 6.182  loss_triplet_b1: 1.502  loss_triplet_b2: 1.485  loss_triplet_b3: 1.475  loss_triplet_b22: 1.765  loss_triplet_b33: 1.942  time: 0.4456  data_time: 0.0010  lr: 1.87e-04  max_mem: 252M
[12/26 23:29:40] fastreid.utils.events INFO:  eta: 0:15:11  epoch/iter: 19/999  total_loss: 58.02  loss_cls_b1: 6.215  loss_cls_b2: 6.238  loss_cls_b21: 6.231  loss_cls_b22: 6.213  loss_cls_b3: 6.211  loss_cls_b31: 6.203  loss_cls_b32: 6.194  loss_cls_b33: 6.188  loss_triplet_b1: 1.504  loss_triplet_b2: 1.489  loss_triplet_b3: 1.476  loss_triplet_b22: 1.773  loss_triplet_b33: 1.968  time: 0.4456  data_time: 0.0012  lr: 1.91e-04  max_mem: 252M
[12/26 23:29:40] fastreid.engine.hooks INFO: Open layer group "backbone, b1, b2, b3" training
[12/26 23:29:49] fastreid.engine.defaults INFO: Prepare testing set
[12/26 23:29:49] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 713        | 1           |
| gallery  | 297     | 3264       | 1           |[0m
[12/26 23:29:49] fastreid.evaluation.evaluator INFO: Start inference on 3977 images
[12/26 23:29:55] fastreid.evaluation.evaluator INFO: Inference done 11/32. 0.3403 s / batch. ETA=0:00:07
[12/26 23:30:00] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:08.009459 (0.296647 s / batch per device, on 1 devices)
[12/26 23:30:00] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:07 (0.294030 s / batch per device, on 1 devices)
[12/26 23:30:02] fastreid.engine.defaults INFO: Evaluation results for WildSplit2 in csv format:
[12/26 23:30:02] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit2 | 55.01    | 68.97    | 73.62     | 23.31 | 3.33   | 39.16    |[0m
[12/26 23:30:02] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit2/mgn_R50-ibn/model_best.pth
[12/26 23:30:10] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit2/mgn_R50-ibn/model_0019.pth
[12/26 23:30:19] fastreid.utils.events INFO:  eta: 0:15:03  epoch/iter: 19/1019  total_loss: 57.82  loss_cls_b1: 6.211  loss_cls_b2: 6.241  loss_cls_b21: 6.229  loss_cls_b22: 6.213  loss_cls_b3: 6.21  loss_cls_b31: 6.205  loss_cls_b32: 6.194  loss_cls_b33: 6.191  loss_triplet_b1: 1.485  loss_triplet_b2: 1.461  loss_triplet_b3: 1.457  loss_triplet_b22: 1.752  loss_triplet_b33: 1.931  time: 0.4453  data_time: 0.0006  lr: 1.94e-04  max_mem: 252M
[12/26 23:30:41] fastreid.utils.events INFO:  eta: 0:14:43  epoch/iter: 20/1070  total_loss: 57.17  loss_cls_b1: 6.184  loss_cls_b2: 6.207  loss_cls_b21: 6.18  loss_cls_b22: 6.184  loss_cls_b3: 6.176  loss_cls_b31: 6.151  loss_cls_b32: 6.169  loss_cls_b33: 6.132  loss_triplet_b1: 1.387  loss_triplet_b2: 1.368  loss_triplet_b3: 1.355  loss_triplet_b22: 1.629  loss_triplet_b33: 1.788  time: 0.4450  data_time: 0.0010  lr: 2.02e-04  max_mem: 252M
[12/26 23:31:04] fastreid.utils.events INFO:  eta: 0:14:21  epoch/iter: 21/1121  total_loss: 54.68  loss_cls_b1: 6.085  loss_cls_b2: 6.123  loss_cls_b21: 6.097  loss_cls_b22: 6.088  loss_cls_b3: 6.088  loss_cls_b31: 6.065  loss_cls_b32: 6.086  loss_cls_b33: 6.054  loss_triplet_b1: 1.128  loss_triplet_b2: 1.056  loss_triplet_b3: 1.049  loss_triplet_b22: 1.188  loss_triplet_b33: 1.318  time: 0.4449  data_time: 0.0007  lr: 2.10e-04  max_mem: 252M
[12/26 23:31:27] fastreid.utils.events INFO:  eta: 0:13:58  epoch/iter: 22/1172  total_loss: 50.14  loss_cls_b1: 5.721  loss_cls_b2: 5.82  loss_cls_b21: 5.808  loss_cls_b22: 5.714  loss_cls_b3: 5.818  loss_cls_b31: 5.768  loss_cls_b32: 5.739  loss_cls_b33: 5.835  loss_triplet_b1: 0.7858  loss_triplet_b2: 0.7679  loss_triplet_b3: 0.7774  loss_triplet_b22: 0.8826  loss_triplet_b33: 0.9526  time: 0.4452  data_time: 0.0014  lr: 2.18e-04  max_mem: 252M
[12/26 23:31:39] fastreid.utils.events INFO:  eta: 0:13:46  epoch/iter: 23/1199  total_loss: 47.57  loss_cls_b1: 5.325  loss_cls_b2: 5.512  loss_cls_b21: 5.407  loss_cls_b22: 5.488  loss_cls_b3: 5.457  loss_cls_b31: 5.429  loss_cls_b32: 5.413  loss_cls_b33: 5.528  loss_triplet_b1: 0.7497  loss_triplet_b2: 0.7237  loss_triplet_b3: 0.7183  loss_triplet_b22: 0.8062  loss_triplet_b33: 0.9183  time: 0.4454  data_time: 0.0010  lr: 2.23e-04  max_mem: 252M
[12/26 23:31:50] fastreid.utils.events INFO:  eta: 0:13:34  epoch/iter: 23/1223  total_loss: 45.17  loss_cls_b1: 4.988  loss_cls_b2: 5.186  loss_cls_b21: 5.114  loss_cls_b22: 5.262  loss_cls_b3: 5.225  loss_cls_b31: 5.179  loss_cls_b32: 5.216  loss_cls_b33: 5.283  loss_triplet_b1: 0.6972  loss_triplet_b2: 0.694  loss_triplet_b3: 0.6835  loss_triplet_b22: 0.7737  loss_triplet_b33: 0.8729  time: 0.4454  data_time: 0.0011  lr: 2.27e-04  max_mem: 252M
[12/26 23:32:14] fastreid.utils.events INFO:  eta: 0:13:11  epoch/iter: 24/1274  total_loss: 41.2  loss_cls_b1: 4.512  loss_cls_b2: 4.723  loss_cls_b21: 4.684  loss_cls_b22: 4.776  loss_cls_b3: 4.694  loss_cls_b31: 4.762  loss_cls_b32: 4.726  loss_cls_b33: 4.791  loss_triplet_b1: 0.6546  loss_triplet_b2: 0.6279  loss_triplet_b3: 0.6204  loss_triplet_b22: 0.724  loss_triplet_b33: 0.8197  time: 0.4461  data_time: 0.0010  lr: 2.35e-04  max_mem: 252M
[12/26 23:32:38] fastreid.utils.events INFO:  eta: 0:12:47  epoch/iter: 25/1325  total_loss: 37.18  loss_cls_b1: 3.987  loss_cls_b2: 4.224  loss_cls_b21: 4.265  loss_cls_b22: 4.28  loss_cls_b3: 4.252  loss_cls_b31: 4.298  loss_cls_b32: 4.323  loss_cls_b33: 4.37  loss_triplet_b1: 0.5844  loss_triplet_b2: 0.5547  loss_triplet_b3: 0.5388  loss_triplet_b22: 0.6391  loss_triplet_b33: 0.7036  time: 0.4469  data_time: 0.0014  lr: 2.43e-04  max_mem: 252M
[12/26 23:33:01] fastreid.utils.events INFO:  eta: 0:12:23  epoch/iter: 26/1376  total_loss: 33.2  loss_cls_b1: 3.561  loss_cls_b2: 3.756  loss_cls_b21: 3.794  loss_cls_b22: 3.98  loss_cls_b3: 3.773  loss_cls_b31: 3.83  loss_cls_b32: 3.877  loss_cls_b33: 4.013  loss_triplet_b1: 0.5005  loss_triplet_b2: 0.5013  loss_triplet_b3: 0.483  loss_triplet_b22: 0.5895  loss_triplet_b33: 0.6454  time: 0.4470  data_time: 0.0017  lr: 2.51e-04  max_mem: 252M
[12/26 23:33:11] fastreid.utils.events INFO:  eta: 0:12:13  epoch/iter: 27/1399  total_loss: 31.85  loss_cls_b1: 3.419  loss_cls_b2: 3.647  loss_cls_b21: 3.649  loss_cls_b22: 3.82  loss_cls_b3: 3.674  loss_cls_b31: 3.683  loss_cls_b32: 3.721  loss_cls_b33: 3.848  loss_triplet_b1: 0.4594  loss_triplet_b2: 0.4651  loss_triplet_b3: 0.4463  loss_triplet_b22: 0.5137  loss_triplet_b33: 0.5628  time: 0.4469  data_time: 0.0008  lr: 2.54e-04  max_mem: 252M
[12/26 23:33:23] fastreid.utils.events INFO:  eta: 0:12:00  epoch/iter: 27/1427  total_loss: 30.76  loss_cls_b1: 3.275  loss_cls_b2: 3.484  loss_cls_b21: 3.492  loss_cls_b22: 3.636  loss_cls_b3: 3.495  loss_cls_b31: 3.569  loss_cls_b32: 3.556  loss_cls_b33: 3.716  loss_triplet_b1: 0.4364  loss_triplet_b2: 0.4349  loss_triplet_b3: 0.4372  loss_triplet_b22: 0.4916  loss_triplet_b33: 0.5282  time: 0.4466  data_time: 0.0007  lr: 2.59e-04  max_mem: 252M
[12/26 23:33:46] fastreid.utils.events INFO:  eta: 0:11:37  epoch/iter: 28/1478  total_loss: 27.72  loss_cls_b1: 2.968  loss_cls_b2: 3.082  loss_cls_b21: 3.109  loss_cls_b22: 3.357  loss_cls_b3: 3.126  loss_cls_b31: 3.253  loss_cls_b32: 3.256  loss_cls_b33: 3.453  loss_triplet_b1: 0.4001  loss_triplet_b2: 0.3981  loss_triplet_b3: 0.4148  loss_triplet_b22: 0.4642  loss_triplet_b33: 0.4907  time: 0.4465  data_time: 0.0008  lr: 2.67e-04  max_mem: 252M
[12/26 23:34:09] fastreid.engine.defaults INFO: Prepare testing set
[12/26 23:34:09] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 713        | 1           |
| gallery  | 297     | 3264       | 1           |[0m
[12/26 23:34:09] fastreid.evaluation.evaluator INFO: Start inference on 3977 images
[12/26 23:34:14] fastreid.evaluation.evaluator INFO: Inference done 11/32. 0.3243 s / batch. ETA=0:00:06
[12/26 23:34:20] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:07.872007 (0.291556 s / batch per device, on 1 devices)
[12/26 23:34:20] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:07 (0.289271 s / batch per device, on 1 devices)
[12/26 23:34:22] fastreid.engine.defaults INFO: Evaluation results for WildSplit2 in csv format:
[12/26 23:34:22] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit2 | 76.02    | 85.90    | 89.28     | 55.34 | 11.77  | 65.68    |[0m
[12/26 23:34:22] fastreid.utils.events INFO:  eta: 0:11:13  epoch/iter: 29/1529  total_loss: 25.48  loss_cls_b1: 2.714  loss_cls_b2: 2.844  loss_cls_b21: 2.903  loss_cls_b22: 3.149  loss_cls_b3: 2.842  loss_cls_b31: 2.99  loss_cls_b32: 3.071  loss_cls_b33: 3.253  loss_triplet_b1: 0.3594  loss_triplet_b2: 0.3519  loss_triplet_b3: 0.3651  loss_triplet_b22: 0.3892  loss_triplet_b33: 0.4138  time: 0.4463  data_time: 0.0009  lr: 2.75e-04  max_mem: 252M
[12/26 23:34:44] fastreid.utils.events INFO:  eta: 0:10:49  epoch/iter: 30/1580  total_loss: 24.59  loss_cls_b1: 2.563  loss_cls_b2: 2.711  loss_cls_b21: 2.776  loss_cls_b22: 2.991  loss_cls_b3: 2.754  loss_cls_b31: 2.871  loss_cls_b32: 2.952  loss_cls_b33: 3.084  loss_triplet_b1: 0.3393  loss_triplet_b2: 0.3314  loss_triplet_b3: 0.338  loss_triplet_b22: 0.3792  loss_triplet_b33: 0.4071  time: 0.4459  data_time: 0.0017  lr: 2.83e-04  max_mem: 252M
[12/26 23:34:53] fastreid.utils.events INFO:  eta: 0:10:40  epoch/iter: 31/1599  total_loss: 24.07  loss_cls_b1: 2.515  loss_cls_b2: 2.678  loss_cls_b21: 2.741  loss_cls_b22: 2.925  loss_cls_b3: 2.701  loss_cls_b31: 2.829  loss_cls_b32: 2.901  loss_cls_b33: 3.028  loss_triplet_b1: 0.3222  loss_triplet_b2: 0.3149  loss_triplet_b3: 0.3209  loss_triplet_b22: 0.3454  loss_triplet_b33: 0.3766  time: 0.4460  data_time: 0.0010  lr: 2.86e-04  max_mem: 252M
[12/26 23:35:07] fastreid.utils.events INFO:  eta: 0:10:27  epoch/iter: 31/1631  total_loss: 22.54  loss_cls_b1: 2.348  loss_cls_b2: 2.5  loss_cls_b21: 2.589  loss_cls_b22: 2.747  loss_cls_b3: 2.509  loss_cls_b31: 2.658  loss_cls_b32: 2.722  loss_cls_b33: 2.856  loss_triplet_b1: 0.2891  loss_triplet_b2: 0.2909  loss_triplet_b3: 0.2919  loss_triplet_b22: 0.3029  loss_triplet_b33: 0.3313  time: 0.4464  data_time: 0.0008  lr: 2.91e-04  max_mem: 252M
[12/26 23:35:28] fastreid.utils.events INFO:  eta: 0:10:02  epoch/iter: 32/1682  total_loss: 21.58  loss_cls_b1: 2.241  loss_cls_b2: 2.417  loss_cls_b21: 2.475  loss_cls_b22: 2.665  loss_cls_b3: 2.388  loss_cls_b31: 2.591  loss_cls_b32: 2.614  loss_cls_b33: 2.758  loss_triplet_b1: 0.2485  loss_triplet_b2: 0.2762  loss_triplet_b3: 0.2701  loss_triplet_b22: 0.2899  loss_triplet_b33: 0.3039  time: 0.4452  data_time: 0.0010  lr: 2.99e-04  max_mem: 252M
[12/26 23:35:52] fastreid.utils.events INFO:  eta: 0:09:40  epoch/iter: 33/1733  total_loss: 20.24  loss_cls_b1: 2.11  loss_cls_b2: 2.27  loss_cls_b21: 2.311  loss_cls_b22: 2.569  loss_cls_b3: 2.246  loss_cls_b31: 2.455  loss_cls_b32: 2.497  loss_cls_b33: 2.68  loss_triplet_b1: 0.2312  loss_triplet_b2: 0.2513  loss_triplet_b3: 0.2437  loss_triplet_b22: 0.267  loss_triplet_b33: 0.2713  time: 0.4454  data_time: 0.0015  lr: 3.07e-04  max_mem: 252M
[12/26 23:36:14] fastreid.utils.events INFO:  eta: 0:09:20  epoch/iter: 34/1784  total_loss: 18.83  loss_cls_b1: 1.954  loss_cls_b2: 2.05  loss_cls_b21: 2.186  loss_cls_b22: 2.424  loss_cls_b3: 2.079  loss_cls_b31: 2.3  loss_cls_b32: 2.351  loss_cls_b33: 2.546  loss_triplet_b1: 0.2187  loss_triplet_b2: 0.2187  loss_triplet_b3: 0.2222  loss_triplet_b22: 0.239  loss_triplet_b33: 0.2501  time: 0.4450  data_time: 0.0009  lr: 3.15e-04  max_mem: 252M
[12/26 23:36:20] fastreid.utils.events INFO:  eta: 0:09:13  epoch/iter: 35/1799  total_loss: 18.38  loss_cls_b1: 1.906  loss_cls_b2: 2.012  loss_cls_b21: 2.138  loss_cls_b22: 2.393  loss_cls_b3: 2.062  loss_cls_b31: 2.265  loss_cls_b32: 2.329  loss_cls_b33: 2.526  loss_triplet_b1: 0.2067  loss_triplet_b2: 0.2039  loss_triplet_b3: 0.208  loss_triplet_b22: 0.2314  loss_triplet_b33: 0.2452  time: 0.4450  data_time: 0.0011  lr: 3.17e-04  max_mem: 252M
[12/26 23:36:36] fastreid.utils.events INFO:  eta: 0:08:57  epoch/iter: 35/1835  total_loss: 18.38  loss_cls_b1: 1.907  loss_cls_b2: 2.012  loss_cls_b21: 2.14  loss_cls_b22: 2.342  loss_cls_b3: 2.055  loss_cls_b31: 2.248  loss_cls_b32: 2.321  loss_cls_b33: 2.515  loss_triplet_b1: 0.2026  loss_triplet_b2: 0.1953  loss_triplet_b3: 0.1982  loss_triplet_b22: 0.2291  loss_triplet_b33: 0.2362  time: 0.4447  data_time: 0.0010  lr: 3.23e-04  max_mem: 252M
[12/26 23:36:59] fastreid.utils.events INFO:  eta: 0:08:36  epoch/iter: 36/1886  total_loss: 17.52  loss_cls_b1: 1.748  loss_cls_b2: 1.856  loss_cls_b21: 2.018  loss_cls_b22: 2.175  loss_cls_b3: 1.9  loss_cls_b31: 2.122  loss_cls_b32: 2.195  loss_cls_b33: 2.376  loss_triplet_b1: 0.176  loss_triplet_b2: 0.1734  loss_triplet_b3: 0.1693  loss_triplet_b22: 0.1869  loss_triplet_b33: 0.1909  time: 0.4447  data_time: 0.0007  lr: 3.31e-04  max_mem: 252M
[12/26 23:37:22] fastreid.utils.events INFO:  eta: 0:08:14  epoch/iter: 37/1937  total_loss: 16.6  loss_cls_b1: 1.703  loss_cls_b2: 1.8  loss_cls_b21: 1.978  loss_cls_b22: 2.085  loss_cls_b3: 1.843  loss_cls_b31: 2.101  loss_cls_b32: 2.1  loss_cls_b33: 2.317  loss_triplet_b1: 0.1681  loss_triplet_b2: 0.1585  loss_triplet_b3: 0.1571  loss_triplet_b22: 0.1746  loss_triplet_b33: 0.1811  time: 0.4451  data_time: 0.0010  lr: 3.39e-04  max_mem: 252M
[12/26 23:37:42] fastreid.utils.events INFO:  eta: 0:07:49  epoch/iter: 38/1988  total_loss: 16.14  loss_cls_b1: 1.608  loss_cls_b2: 1.712  loss_cls_b21: 1.873  loss_cls_b22: 2.043  loss_cls_b3: 1.706  loss_cls_b31: 2.025  loss_cls_b32: 2.085  loss_cls_b33: 2.256  loss_triplet_b1: 0.1581  loss_triplet_b2: 0.1447  loss_triplet_b3: 0.1521  loss_triplet_b22: 0.164  loss_triplet_b33: 0.1631  time: 0.4437  data_time: 0.0011  lr: 3.47e-04  max_mem: 252M
[12/26 23:37:47] fastreid.utils.events INFO:  eta: 0:07:44  epoch/iter: 39/1999  total_loss: 15.78  loss_cls_b1: 1.584  loss_cls_b2: 1.683  loss_cls_b21: 1.837  loss_cls_b22: 2.019  loss_cls_b3: 1.675  loss_cls_b31: 1.966  loss_cls_b32: 2.076  loss_cls_b33: 2.235  loss_triplet_b1: 0.1608  loss_triplet_b2: 0.1428  loss_triplet_b3: 0.151  loss_triplet_b22: 0.163  loss_triplet_b33: 0.1651  time: 0.4436  data_time: 0.0010  lr: 3.49e-04  max_mem: 252M
[12/26 23:38:05] fastreid.engine.defaults INFO: Prepare testing set
[12/26 23:38:05] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 713        | 1           |
| gallery  | 297     | 3264       | 1           |[0m
[12/26 23:38:05] fastreid.evaluation.evaluator INFO: Start inference on 3977 images
[12/26 23:38:10] fastreid.evaluation.evaluator INFO: Inference done 11/32. 0.3483 s / batch. ETA=0:00:07
[12/26 23:38:16] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:08.023176 (0.297155 s / batch per device, on 1 devices)
[12/26 23:38:16] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:07 (0.293829 s / batch per device, on 1 devices)
[12/26 23:38:18] fastreid.engine.defaults INFO: Evaluation results for WildSplit2 in csv format:
[12/26 23:38:18] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit2 | 78.56    | 88.29    | 91.82     | 65.22 | 21.42  | 71.89    |[0m
[12/26 23:38:18] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit2/mgn_R50-ibn/model_best.pth
[12/26 23:38:26] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit2/mgn_R50-ibn/model_0039.pth
[12/26 23:38:34] fastreid.utils.events INFO:  eta: 0:07:26  epoch/iter: 39/2039  total_loss: 14.74  loss_cls_b1: 1.464  loss_cls_b2: 1.583  loss_cls_b21: 1.72  loss_cls_b22: 1.911  loss_cls_b3: 1.583  loss_cls_b31: 1.834  loss_cls_b32: 1.962  loss_cls_b33: 2.08  loss_triplet_b1: 0.1433  loss_triplet_b2: 0.1349  loss_triplet_b3: 0.1365  loss_triplet_b22: 0.1474  loss_triplet_b33: 0.14  time: 0.4435  data_time: 0.0009  lr: 3.49e-04  max_mem: 252M
[12/26 23:38:58] fastreid.utils.events INFO:  eta: 0:07:05  epoch/iter: 40/2090  total_loss: 14.44  loss_cls_b1: 1.421  loss_cls_b2: 1.533  loss_cls_b21: 1.691  loss_cls_b22: 1.888  loss_cls_b3: 1.56  loss_cls_b31: 1.765  loss_cls_b32: 1.891  loss_cls_b33: 2.049  loss_triplet_b1: 0.1369  loss_triplet_b2: 0.1223  loss_triplet_b3: 0.1271  loss_triplet_b22: 0.1359  loss_triplet_b33: 0.1384  time: 0.4438  data_time: 0.0011  lr: 3.47e-04  max_mem: 252M
[12/26 23:39:20] fastreid.utils.events INFO:  eta: 0:06:43  epoch/iter: 41/2141  total_loss: 14.12  loss_cls_b1: 1.396  loss_cls_b2: 1.471  loss_cls_b21: 1.649  loss_cls_b22: 1.814  loss_cls_b3: 1.503  loss_cls_b31: 1.736  loss_cls_b32: 1.848  loss_cls_b33: 2.01  loss_triplet_b1: 0.1254  loss_triplet_b2: 0.1162  loss_triplet_b3: 0.1246  loss_triplet_b22: 0.1221  loss_triplet_b33: 0.1304  time: 0.4437  data_time: 0.0006  lr: 3.40e-04  max_mem: 252M
[12/26 23:39:43] fastreid.utils.events INFO:  eta: 0:06:19  epoch/iter: 42/2192  total_loss: 12.99  loss_cls_b1: 1.255  loss_cls_b2: 1.336  loss_cls_b21: 1.518  loss_cls_b22: 1.661  loss_cls_b3: 1.386  loss_cls_b31: 1.644  loss_cls_b32: 1.695  loss_cls_b33: 1.89  loss_triplet_b1: 0.1042  loss_triplet_b2: 0.09954  loss_triplet_b3: 0.1044  loss_triplet_b22: 0.1061  loss_triplet_b33: 0.1134  time: 0.4435  data_time: 0.0011  lr: 3.30e-04  max_mem: 252M
[12/26 23:39:46] fastreid.utils.events INFO:  eta: 0:06:16  epoch/iter: 43/2199  total_loss: 12.99  loss_cls_b1: 1.249  loss_cls_b2: 1.336  loss_cls_b21: 1.516  loss_cls_b22: 1.659  loss_cls_b3: 1.382  loss_cls_b31: 1.641  loss_cls_b32: 1.693  loss_cls_b33: 1.887  loss_triplet_b1: 0.1002  loss_triplet_b2: 0.09891  loss_triplet_b3: 0.1008  loss_triplet_b22: 0.1027  loss_triplet_b33: 0.1032  time: 0.4435  data_time: 0.0011  lr: 3.16e-04  max_mem: 252M
[12/26 23:40:04] fastreid.utils.events INFO:  eta: 0:05:56  epoch/iter: 43/2243  total_loss: 12.53  loss_cls_b1: 1.208  loss_cls_b2: 1.306  loss_cls_b21: 1.478  loss_cls_b22: 1.613  loss_cls_b3: 1.342  loss_cls_b31: 1.604  loss_cls_b32: 1.654  loss_cls_b33: 1.816  loss_triplet_b1: 0.1008  loss_triplet_b2: 0.0988  loss_triplet_b3: 0.09284  loss_triplet_b22: 0.1006  loss_triplet_b33: 0.1009  time: 0.4431  data_time: 0.0014  lr: 3.16e-04  max_mem: 252M
[12/26 23:40:27] fastreid.utils.events INFO:  eta: 0:05:33  epoch/iter: 44/2294  total_loss: 11.96  loss_cls_b1: 1.147  loss_cls_b2: 1.221  loss_cls_b21: 1.379  loss_cls_b22: 1.538  loss_cls_b3: 1.268  loss_cls_b31: 1.499  loss_cls_b32: 1.581  loss_cls_b33: 1.77  loss_triplet_b1: 0.08574  loss_triplet_b2: 0.08446  loss_triplet_b3: 0.08492  loss_triplet_b22: 0.07624  loss_triplet_b33: 0.08613  time: 0.4431  data_time: 0.0005  lr: 2.98e-04  max_mem: 252M
[12/26 23:40:49] fastreid.utils.events INFO:  eta: 0:05:11  epoch/iter: 45/2345  total_loss: 11.13  loss_cls_b1: 1.076  loss_cls_b2: 1.161  loss_cls_b21: 1.311  loss_cls_b22: 1.462  loss_cls_b3: 1.144  loss_cls_b31: 1.423  loss_cls_b32: 1.473  loss_cls_b33: 1.646  loss_triplet_b1: 0.07088  loss_triplet_b2: 0.06878  loss_triplet_b3: 0.07421  loss_triplet_b22: 0.06683  loss_triplet_b33: 0.07111  time: 0.4429  data_time: 0.0006  lr: 2.77e-04  max_mem: 252M
[12/26 23:41:12] fastreid.utils.events INFO:  eta: 0:04:48  epoch/iter: 46/2396  total_loss: 10.77  loss_cls_b1: 1.006  loss_cls_b2: 1.088  loss_cls_b21: 1.241  loss_cls_b22: 1.408  loss_cls_b3: 1.107  loss_cls_b31: 1.365  loss_cls_b32: 1.472  loss_cls_b33: 1.58  loss_triplet_b1: 0.06101  loss_triplet_b2: 0.0642  loss_triplet_b3: 0.06493  loss_triplet_b22: 0.06239  loss_triplet_b33: 0.06015  time: 0.4427  data_time: 0.0013  lr: 2.54e-04  max_mem: 252M
[12/26 23:41:13] fastreid.utils.events INFO:  eta: 0:04:47  epoch/iter: 47/2399  total_loss: 10.71  loss_cls_b1: 1.001  loss_cls_b2: 1.072  loss_cls_b21: 1.232  loss_cls_b22: 1.408  loss_cls_b3: 1.099  loss_cls_b31: 1.36  loss_cls_b32: 1.466  loss_cls_b33: 1.578  loss_triplet_b1: 0.06143  loss_triplet_b2: 0.0642  loss_triplet_b3: 0.06493  loss_triplet_b22: 0.06239  loss_triplet_b33: 0.06078  time: 0.4428  data_time: 0.0014  lr: 2.29e-04  max_mem: 252M
[12/26 23:41:34] fastreid.utils.events INFO:  eta: 0:04:25  epoch/iter: 47/2447  total_loss: 9.694  loss_cls_b1: 0.9094  loss_cls_b2: 1.003  loss_cls_b21: 1.131  loss_cls_b22: 1.291  loss_cls_b3: 1.013  loss_cls_b31: 1.252  loss_cls_b32: 1.369  loss_cls_b33: 1.484  loss_triplet_b1: 0.05016  loss_triplet_b2: 0.05083  loss_triplet_b3: 0.05564  loss_triplet_b22: 0.05327  loss_triplet_b33: 0.04377  time: 0.4426  data_time: 0.0012  lr: 2.29e-04  max_mem: 252M
[12/26 23:41:55] fastreid.utils.events INFO:  eta: 0:04:03  epoch/iter: 48/2498  total_loss: 9.089  loss_cls_b1: 0.8317  loss_cls_b2: 0.9194  loss_cls_b21: 1.055  loss_cls_b22: 1.207  loss_cls_b3: 0.9445  loss_cls_b31: 1.207  loss_cls_b32: 1.265  loss_cls_b33: 1.376  loss_triplet_b1: 0.03497  loss_triplet_b2: 0.0424  loss_triplet_b3: 0.04455  loss_triplet_b22: 0.04152  loss_triplet_b33: 0.04015  time: 0.4417  data_time: 0.0011  lr: 2.02e-04  max_mem: 252M
[12/26 23:42:15] fastreid.engine.defaults INFO: Prepare testing set
[12/26 23:42:15] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 713        | 1           |
| gallery  | 297     | 3264       | 1           |[0m
[12/26 23:42:15] fastreid.evaluation.evaluator INFO: Start inference on 3977 images
[12/26 23:42:20] fastreid.evaluation.evaluator INFO: Inference done 11/32. 0.3097 s / batch. ETA=0:00:06
[12/26 23:42:26] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:07.517904 (0.278441 s / batch per device, on 1 devices)
[12/26 23:42:26] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:07 (0.276505 s / batch per device, on 1 devices)
[12/26 23:42:27] fastreid.engine.defaults INFO: Evaluation results for WildSplit2 in csv format:
[12/26 23:42:27] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit2 | 80.25    | 90.13    | 92.81     | 71.06 | 28.17  | 75.66    |[0m
[12/26 23:42:27] fastreid.utils.events INFO:  eta: 0:03:40  epoch/iter: 49/2549  total_loss: 8.518  loss_cls_b1: 0.7895  loss_cls_b2: 0.8512  loss_cls_b21: 1.007  loss_cls_b22: 1.149  loss_cls_b3: 0.8934  loss_cls_b31: 1.099  loss_cls_b32: 1.219  loss_cls_b33: 1.272  loss_triplet_b1: 0.03181  loss_triplet_b2: 0.03551  loss_triplet_b3: 0.03743  loss_triplet_b22: 0.0321  loss_triplet_b33: 0.03213  time: 0.4407  data_time: 0.0009  lr: 1.75e-04  max_mem: 252M
[12/26 23:42:46] fastreid.utils.events INFO:  eta: 0:03:17  epoch/iter: 50/2599  total_loss: 7.931  loss_cls_b1: 0.6985  loss_cls_b2: 0.7696  loss_cls_b21: 0.9256  loss_cls_b22: 1.074  loss_cls_b3: 0.7939  loss_cls_b31: 0.9954  loss_cls_b32: 1.152  loss_cls_b33: 1.201  loss_triplet_b1: 0.02913  loss_triplet_b2: 0.03091  loss_triplet_b3: 0.03237  loss_triplet_b22: 0.02587  loss_triplet_b33: 0.02596  time: 0.4394  data_time: 0.0011  lr: 1.48e-04  max_mem: 252M
[12/26 23:42:46] fastreid.utils.events INFO:  eta: 0:03:17  epoch/iter: 50/2600  total_loss: 7.931  loss_cls_b1: 0.6985  loss_cls_b2: 0.7696  loss_cls_b21: 0.9256  loss_cls_b22: 1.068  loss_cls_b3: 0.7939  loss_cls_b31: 0.9954  loss_cls_b32: 1.152  loss_cls_b33: 1.201  loss_triplet_b1: 0.02873  loss_triplet_b2: 0.03052  loss_triplet_b3: 0.03166  loss_triplet_b22: 0.02531  loss_triplet_b33: 0.02485  time: 0.4394  data_time: 0.0011  lr: 1.48e-04  max_mem: 252M
[12/26 23:43:06] fastreid.utils.events INFO:  eta: 0:02:54  epoch/iter: 51/2651  total_loss: 7.167  loss_cls_b1: 0.6259  loss_cls_b2: 0.7265  loss_cls_b21: 0.8493  loss_cls_b22: 0.9838  loss_cls_b3: 0.7151  loss_cls_b31: 0.9513  loss_cls_b32: 1.047  loss_cls_b33: 1.097  loss_triplet_b1: 0.02294  loss_triplet_b2: 0.02612  loss_triplet_b3: 0.0248  loss_triplet_b22: 0.02225  loss_triplet_b33: 0.02084  time: 0.4382  data_time: 0.0006  lr: 1.21e-04  max_mem: 252M
[12/26 23:43:26] fastreid.utils.events INFO:  eta: 0:02:32  epoch/iter: 52/2702  total_loss: 6.915  loss_cls_b1: 0.5944  loss_cls_b2: 0.6749  loss_cls_b21: 0.8168  loss_cls_b22: 0.9186  loss_cls_b3: 0.6838  loss_cls_b31: 0.9085  loss_cls_b32: 1.006  loss_cls_b33: 1.056  loss_triplet_b1: 0.02038  loss_triplet_b2: 0.02219  loss_triplet_b3: 0.02123  loss_triplet_b22: 0.01634  loss_triplet_b33: 0.01482  time: 0.4373  data_time: 0.0010  lr: 9.58e-05  max_mem: 252M
[12/26 23:43:45] fastreid.utils.events INFO:  eta: 0:02:09  epoch/iter: 53/2753  total_loss: 6.504  loss_cls_b1: 0.5555  loss_cls_b2: 0.6126  loss_cls_b21: 0.7443  loss_cls_b22: 0.8659  loss_cls_b3: 0.6471  loss_cls_b31: 0.8239  loss_cls_b32: 0.9724  loss_cls_b33: 0.9953  loss_triplet_b1: 0.015  loss_triplet_b2: 0.01763  loss_triplet_b3: 0.01848  loss_triplet_b22: 0.01253  loss_triplet_b33: 0.012  time: 0.4361  data_time: 0.0004  lr: 7.25e-05  max_mem: 252M
[12/26 23:44:03] fastreid.utils.events INFO:  eta: 0:01:49  epoch/iter: 54/2799  total_loss: 6.019  loss_cls_b1: 0.5216  loss_cls_b2: 0.5775  loss_cls_b21: 0.7142  loss_cls_b22: 0.8295  loss_cls_b3: 0.6111  loss_cls_b31: 0.7776  loss_cls_b32: 0.9042  loss_cls_b33: 0.9521  loss_triplet_b1: 0.01349  loss_triplet_b2: 0.01538  loss_triplet_b3: 0.01704  loss_triplet_b22: 0.01014  loss_triplet_b33: 0.01019  time: 0.4355  data_time: 0.0011  lr: 5.17e-05  max_mem: 252M
[12/26 23:44:05] fastreid.utils.events INFO:  eta: 0:01:47  epoch/iter: 54/2804  total_loss: 5.943  loss_cls_b1: 0.515  loss_cls_b2: 0.5714  loss_cls_b21: 0.701  loss_cls_b22: 0.8237  loss_cls_b3: 0.5921  loss_cls_b31: 0.774  loss_cls_b32: 0.8924  loss_cls_b33: 0.9419  loss_triplet_b1: 0.01299  loss_triplet_b2: 0.0149  loss_triplet_b3: 0.01624  loss_triplet_b22: 0.009603  loss_triplet_b33: 0.009891  time: 0.4354  data_time: 0.0015  lr: 5.17e-05  max_mem: 252M
[12/26 23:44:25] fastreid.utils.events INFO:  eta: 0:01:25  epoch/iter: 55/2855  total_loss: 5.765  loss_cls_b1: 0.4932  loss_cls_b2: 0.5633  loss_cls_b21: 0.6944  loss_cls_b22: 0.7945  loss_cls_b3: 0.5851  loss_cls_b31: 0.7601  loss_cls_b32: 0.8805  loss_cls_b33: 0.9203  loss_triplet_b1: 0.01101  loss_triplet_b2: 0.01384  loss_triplet_b3: 0.01544  loss_triplet_b22: 0.009301  loss_triplet_b33: 0.009891  time: 0.4344  data_time: 0.0014  lr: 3.39e-05  max_mem: 252M
[12/26 23:44:46] fastreid.utils.events INFO:  eta: 0:01:03  epoch/iter: 56/2906  total_loss: 5.678  loss_cls_b1: 0.476  loss_cls_b2: 0.5483  loss_cls_b21: 0.67  loss_cls_b22: 0.7623  loss_cls_b3: 0.5644  loss_cls_b31: 0.7357  loss_cls_b32: 0.832  loss_cls_b33: 0.8937  loss_triplet_b1: 0.01101  loss_triplet_b2: 0.01406  loss_triplet_b3: 0.01617  loss_triplet_b22: 0.009303  loss_triplet_b33: 0.01004  time: 0.4339  data_time: 0.0010  lr: 1.97e-05  max_mem: 252M
[12/26 23:45:05] fastreid.utils.events INFO:  eta: 0:00:41  epoch/iter: 57/2957  total_loss: 5.337  loss_cls_b1: 0.4568  loss_cls_b2: 0.5106  loss_cls_b21: 0.6488  loss_cls_b22: 0.731  loss_cls_b3: 0.5376  loss_cls_b31: 0.7162  loss_cls_b32: 0.7979  loss_cls_b33: 0.8359  loss_triplet_b1: 0.01033  loss_triplet_b2: 0.01266  loss_triplet_b3: 0.01479  loss_triplet_b22: 0.008545  loss_triplet_b33: 0.007967  time: 0.4331  data_time: 0.0008  lr: 9.22e-06  max_mem: 252M
[12/26 23:45:22] fastreid.utils.events INFO:  eta: 0:00:24  epoch/iter: 58/2999  total_loss: 5.419  loss_cls_b1: 0.4532  loss_cls_b2: 0.5164  loss_cls_b21: 0.6487  loss_cls_b22: 0.7372  loss_cls_b3: 0.5451  loss_cls_b31: 0.7289  loss_cls_b32: 0.807  loss_cls_b33: 0.8137  loss_triplet_b1: 0.009123  loss_triplet_b2: 0.01178  loss_triplet_b3: 0.01402  loss_triplet_b22: 0.007646  loss_triplet_b33: 0.008475  time: 0.4326  data_time: 0.0007  lr: 2.84e-06  max_mem: 252M
[12/26 23:45:26] fastreid.utils.events INFO:  eta: 0:00:20  epoch/iter: 58/3008  total_loss: 5.502  loss_cls_b1: 0.4586  loss_cls_b2: 0.5238  loss_cls_b21: 0.653  loss_cls_b22: 0.7424  loss_cls_b3: 0.5522  loss_cls_b31: 0.7337  loss_cls_b32: 0.8205  loss_cls_b33: 0.8244  loss_triplet_b1: 0.009368  loss_triplet_b2: 0.01212  loss_triplet_b3: 0.01412  loss_triplet_b22: 0.008809  loss_triplet_b33: 0.009383  time: 0.4326  data_time: 0.0008  lr: 2.84e-06  max_mem: 252M
[12/26 23:45:46] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/3059  total_loss: 5.239  loss_cls_b1: 0.4331  loss_cls_b2: 0.4851  loss_cls_b21: 0.6377  loss_cls_b22: 0.7033  loss_cls_b3: 0.5307  loss_cls_b31: 0.7157  loss_cls_b32: 0.7979  loss_cls_b33: 0.7973  loss_triplet_b1: 0.007941  loss_triplet_b2: 0.01079  loss_triplet_b3: 0.01216  loss_triplet_b22: 0.007045  loss_triplet_b33: 0.007809  time: 0.4317  data_time: 0.0008  lr: 7.00e-07  max_mem: 252M
[12/26 23:45:46] fastreid.engine.defaults INFO: Prepare testing set
[12/26 23:45:46] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 713        | 1           |
| gallery  | 297     | 3264       | 1           |[0m
[12/26 23:45:46] fastreid.evaluation.evaluator INFO: Start inference on 3977 images
[12/26 23:45:51] fastreid.evaluation.evaluator INFO: Inference done 11/32. 0.3156 s / batch. ETA=0:00:06
[12/26 23:45:56] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:07.454330 (0.276086 s / batch per device, on 1 devices)
[12/26 23:45:56] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:07 (0.274281 s / batch per device, on 1 devices)
[12/26 23:45:58] fastreid.engine.defaults INFO: Evaluation results for WildSplit2 in csv format:
[12/26 23:45:58] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit2 | 80.25    | 90.13    | 93.37     | 72.97 | 30.12  | 76.61    |[0m
[12/26 23:45:58] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit2/mgn_R50-ibn/model_best.pth
[12/26 23:46:06] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit2/mgn_R50-ibn/model_final.pth
[12/26 23:46:13] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/3059  total_loss: 5.239  loss_cls_b1: 0.4331  loss_cls_b2: 0.4851  loss_cls_b21: 0.6377  loss_cls_b22: 0.7033  loss_cls_b3: 0.5307  loss_cls_b31: 0.7157  loss_cls_b32: 0.7979  loss_cls_b33: 0.7973  loss_triplet_b1: 0.007941  loss_triplet_b2: 0.01079  loss_triplet_b3: 0.01216  loss_triplet_b22: 0.007045  loss_triplet_b33: 0.007809  time: 0.4317  data_time: 0.0008  lr: 7.00e-07  max_mem: 252M
[12/26 23:46:14] fastreid.engine.hooks INFO: Overall training speed: 3058 iterations in 0:22:00 (0.4318 s / it)
[12/26 23:46:14] fastreid.engine.hooks INFO: Total training time: 0:24:18 (0:02:18 on hooks)
[07/09 14:40:13] fastreid INFO: Rank of current process: 0. World size: 1
[07/09 14:40:14] fastreid INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.19 (default, Mar 20 2024, 19:58:24) [GCC 11.2.0]
numpy                   1.24.3
fastreid                1.3 @/home/zhourui/hyf_lpl_multicamera/codes/./fastreid
FASTREID_ENV_MODULE     <not set>
PyTorch                 1.11.0 @/opt/anaconda3/envs/multicamera/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1,2,3             NVIDIA GeForce GTX 1080 Ti
CUDA_HOME               :/usr/local/cuda-10.2
Pillow                  10.3.0
torchvision             0.12.0 @/opt/anaconda3/envs/multicamera/lib/python3.8/site-packages/torchvision
torchvision arch flags  /opt/anaconda3/envs/multicamera/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
----------------------  ----------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[07/09 14:40:14] fastreid INFO: Command line arguments: Namespace(config_file='./configs/WildSplit2/mgn_R50-ibn.yml', dist_url='tcp://127.0.0.1:50154', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[07/09 14:40:14] fastreid INFO: Contents of args.config_file=./configs/WildSplit2/mgn_R50-ibn.yml:
_BASE_: ../Base-MGN.yml

MODEL:
  BACKBONE:
    WITH_IBN: True

DATASETS:
  NAMES: ("WildSplit2",)
  TESTS: ("WildSplit2",)

OUTPUT_DIR: logs/wildsplit2/mgn_R50-ibn

[07/09 14:40:14] fastreid INFO: Running with full config:
CUDNN_BENCHMARK: True
DATALOADER:
  NUM_INSTANCE: 16
  NUM_WORKERS: 8
  SAMPLER_TRAIN: NaiveIdentitySampler
  SET_WEIGHT: []
DATASETS:
  COMBINEALL: False
  NAMES: ('WildSplit2',)
  TESTS: ('WildSplit2',)
INPUT:
  AFFINE:
    ENABLED: False
  AUGMIX:
    ENABLED: False
    PROB: 0.0
  AUTOAUG:
    ENABLED: True
    PROB: 0.1
  CJ:
    BRIGHTNESS: 0.15
    CONTRAST: 0.15
    ENABLED: False
    HUE: 0.1
    PROB: 0.5
    SATURATION: 0.1
  CROP:
    ENABLED: False
    RATIO: [0.75, 1.3333333333333333]
    SCALE: [0.16, 1]
    SIZE: [224, 224]
  FLIP:
    ENABLED: True
    PROB: 0.5
  PADDING:
    ENABLED: True
    MODE: constant
    SIZE: 10
  REA:
    ENABLED: True
    PROB: 0.5
    VALUE: [123.675, 116.28, 103.53]
  RPT:
    ENABLED: False
    PROB: 0.5
  SIZE_TEST: [384, 128]
  SIZE_TRAIN: [384, 128]
KD:
  EMA:
    ENABLED: False
    MOMENTUM: 0.999
  MODEL_CONFIG: []
  MODEL_WEIGHTS: []
MODEL:
  BACKBONE:
    ATT_DROP_RATE: 0.0
    DEPTH: 50x
    DROP_PATH_RATIO: 0.1
    DROP_RATIO: 0.0
    FEAT_DIM: 2048
    LAST_STRIDE: 1
    NAME: build_resnet_backbone
    NORM: BN
    PRETRAIN: True
    PRETRAIN_PATH: 
    SIE_COE: 3.0
    STRIDE_SIZE: (16, 16)
    WITH_IBN: True
    WITH_NL: False
    WITH_SE: False
  DEVICE: cuda:1
  FREEZE_LAYERS: ['backbone', 'b1', 'b2', 'b3']
  HEADS:
    CLS_LAYER: CircleSoftmax
    EMBEDDING_DIM: 256
    MARGIN: 0.35
    NAME: EmbeddingHead
    NECK_FEAT: after
    NORM: BN
    NUM_CLASSES: 0
    POOL_LAYER: GeneralizedMeanPoolingP
    SCALE: 64
    WITH_BNNECK: True
  LOSSES:
    CE:
      ALPHA: 0.2
      EPSILON: 0.1
      SCALE: 1.0
    CIRCLE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    COSFACE:
      GAMMA: 128
      MARGIN: 0.25
      SCALE: 1.0
    FL:
      ALPHA: 0.25
      GAMMA: 2
      SCALE: 1.0
    NAME: ('CrossEntropyLoss', 'TripletLoss')
    TRI:
      HARD_MINING: True
      MARGIN: 0.0
      NORM_FEAT: False
      SCALE: 1.0
  META_ARCHITECTURE: MGN
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.120000000000005, 57.375]
  QUEUE_SIZE: 8192
  WEIGHTS: 
OUTPUT_DIR: logs/wildsplit2/mgn_R50-ibn
SOLVER:
  AMP:
    ENABLED: True
  BASE_LR: 0.00035
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 20
  CLIP_GRADIENTS:
    CLIP_TYPE: norm
    CLIP_VALUE: 5.0
    ENABLED: False
    NORM_TYPE: 2.0
  DELAY_EPOCHS: 30
  ETA_MIN_LR: 7e-07
  FREEZE_ITERS: 1000
  GAMMA: 0.1
  HEADS_LR_FACTOR: 1.0
  IMS_PER_BATCH: 64
  MAX_EPOCH: 60
  MOMENTUM: 0.9
  NESTEROV: False
  OPT: Adam
  SCHED: CosineAnnealingLR
  STEPS: [40, 90]
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 2000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0005
  WEIGHT_DECAY_BIAS: 0.0005
  WEIGHT_DECAY_NORM: 0.0005
TEST:
  AQE:
    ALPHA: 3.0
    ENABLED: False
    QE_K: 5
    QE_TIME: 1
  EVAL_PERIOD: 10
  FLIP:
    ENABLED: False
  IMS_PER_BATCH: 128
  METRIC: cosine
  PRECISE_BN:
    DATASET: Market1501
    ENABLED: False
    NUM_ITER: 300
  RERANK:
    ENABLED: False
    K1: 20
    K2: 6
    LAMBDA: 0.3
  ROC:
    ENABLED: False
[07/09 14:40:14] fastreid INFO: Full config saved to /home/zhourui/hyf_lpl_multicamera/codes/logs/wildsplit2/mgn_R50-ibn/config.yaml
[07/09 14:40:14] fastreid.utils.env INFO: Using a generated random seed 16202608
[07/09 14:40:14] fastreid.engine.defaults INFO: Prepare training set
[07/09 14:40:14] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| train    | 297     | 3477       | 1           |[0m
[07/09 14:40:14] fastreid.data.build INFO: Using training sampler NaiveIdentitySampler
[07/09 14:40:16] fastreid.engine.defaults INFO: Auto-scaling the num_classes=297
[07/09 14:40:16] fastreid.modeling.backbones.resnet INFO: Loading pretrained model from /home/zhourui/.cache/torch/checkpoints/resnet50_ibn_a-d9d0bb7b.pth
[07/09 14:40:16] fastreid.modeling.backbones.resnet INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc.{weight, bias}[0m
[07/09 14:40:19] fastreid.engine.defaults INFO: Model:
MGN(
  (backbone): Sequential(
    (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (5): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (6): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): IBN(
        (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (se): Identity()
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (b1): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b1_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b2): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b2_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b21_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b22_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b3): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): IBN(
          (IN): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (BN): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
    (1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se): Identity()
      )
    )
  )
  (b3_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b31_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b32_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
  (b33_head): EmbeddingHead(
    (pool_layer): GeneralizedMeanPoolingP(Parameter containing:
    tensor([3.], device='cuda:1', requires_grad=True), output_size=(1, 1))
    (bottleneck): Sequential(
      (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cls_layer): CircleSoftmax(num_classes=297, scale=64, margin=0.35)
  )
)
[07/09 14:40:23] fastreid.utils.checkpoint INFO: No checkpoint found. Training model from scratch
[07/09 14:40:23] fastreid.engine.train_loop INFO: Starting training from epoch 0
[07/09 14:40:23] fastreid.engine.hooks INFO: Freeze layer group "backbone, b1, b2, b3" training for 1000 iterations
[07/09 14:41:16] fastreid.utils.events INFO:  eta: 0:47:25  epoch/iter: 0/53  total_loss: 58.63  loss_cls_b1: 6.228  loss_cls_b2: 6.199  loss_cls_b21: 6.22  loss_cls_b22: 6.234  loss_cls_b3: 6.243  loss_cls_b31: 6.194  loss_cls_b32: 6.21  loss_cls_b33: 6.148  loss_triplet_b1: 1.648  loss_triplet_b2: 1.577  loss_triplet_b3: 1.594  loss_triplet_b22: 1.977  loss_triplet_b33: 2.211  time: 0.8928  data_time: 0.0008  lr: 4.26e-05  max_mem: 72M
[07/09 14:42:05] fastreid.utils.events INFO:  eta: 0:46:52  epoch/iter: 1/107  total_loss: 58.58  loss_cls_b1: 6.225  loss_cls_b2: 6.229  loss_cls_b21: 6.229  loss_cls_b22: 6.204  loss_cls_b3: 6.189  loss_cls_b31: 6.2  loss_cls_b32: 6.203  loss_cls_b33: 6.189  loss_triplet_b1: 1.598  loss_triplet_b2: 1.58  loss_triplet_b3: 1.573  loss_triplet_b22: 1.969  loss_triplet_b33: 2.211  time: 0.9056  data_time: 0.0007  lr: 5.11e-05  max_mem: 72M
[07/09 14:42:55] fastreid.utils.events INFO:  eta: 0:46:27  epoch/iter: 2/161  total_loss: 58.64  loss_cls_b1: 6.248  loss_cls_b2: 6.208  loss_cls_b21: 6.234  loss_cls_b22: 6.201  loss_cls_b3: 6.179  loss_cls_b31: 6.191  loss_cls_b32: 6.204  loss_cls_b33: 6.205  loss_triplet_b1: 1.603  loss_triplet_b2: 1.587  loss_triplet_b3: 1.567  loss_triplet_b22: 1.969  loss_triplet_b33: 2.205  time: 0.9118  data_time: 0.0007  lr: 5.94e-05  max_mem: 72M
[07/09 14:43:30] fastreid.utils.events INFO:  eta: 0:46:12  epoch/iter: 3/199  total_loss: 58.64  loss_cls_b1: 6.247  loss_cls_b2: 6.211  loss_cls_b21: 6.232  loss_cls_b22: 6.209  loss_cls_b3: 6.172  loss_cls_b31: 6.188  loss_cls_b32: 6.203  loss_cls_b33: 6.202  loss_triplet_b1: 1.6  loss_triplet_b2: 1.587  loss_triplet_b3: 1.567  loss_triplet_b22: 1.965  loss_triplet_b33: 2.194  time: 0.9152  data_time: 0.0007  lr: 6.54e-05  max_mem: 72M
[07/09 14:43:45] fastreid.utils.events INFO:  eta: 0:46:00  epoch/iter: 3/215  total_loss: 58.63  loss_cls_b1: 6.24  loss_cls_b2: 6.219  loss_cls_b21: 6.236  loss_cls_b22: 6.21  loss_cls_b3: 6.157  loss_cls_b31: 6.192  loss_cls_b32: 6.204  loss_cls_b33: 6.202  loss_triplet_b1: 1.598  loss_triplet_b2: 1.591  loss_triplet_b3: 1.564  loss_triplet_b22: 1.957  loss_triplet_b33: 2.193  time: 0.9160  data_time: 0.0007  lr: 6.79e-05  max_mem: 72M
[07/09 14:44:35] fastreid.utils.events INFO:  eta: 0:45:21  epoch/iter: 4/269  total_loss: 58.8  loss_cls_b1: 6.264  loss_cls_b2: 6.217  loss_cls_b21: 6.227  loss_cls_b22: 6.198  loss_cls_b3: 6.155  loss_cls_b31: 6.175  loss_cls_b32: 6.222  loss_cls_b33: 6.21  loss_triplet_b1: 1.611  loss_triplet_b2: 1.601  loss_triplet_b3: 1.593  loss_triplet_b22: 1.982  loss_triplet_b33: 2.225  time: 0.9180  data_time: 0.0007  lr: 7.64e-05  max_mem: 72M
[07/09 14:45:25] fastreid.utils.events INFO:  eta: 0:44:37  epoch/iter: 5/323  total_loss: 58.88  loss_cls_b1: 6.264  loss_cls_b2: 6.212  loss_cls_b21: 6.226  loss_cls_b22: 6.194  loss_cls_b3: 6.152  loss_cls_b31: 6.181  loss_cls_b32: 6.224  loss_cls_b33: 6.203  loss_triplet_b1: 1.626  loss_triplet_b2: 1.601  loss_triplet_b3: 1.602  loss_triplet_b22: 2.02  loss_triplet_b33: 2.245  time: 0.9196  data_time: 0.0007  lr: 8.49e-05  max_mem: 72M
[07/09 14:46:15] fastreid.utils.events INFO:  eta: 0:43:48  epoch/iter: 6/377  total_loss: 58.82  loss_cls_b1: 6.269  loss_cls_b2: 6.224  loss_cls_b21: 6.221  loss_cls_b22: 6.197  loss_cls_b3: 6.162  loss_cls_b31: 6.172  loss_cls_b32: 6.227  loss_cls_b33: 6.199  loss_triplet_b1: 1.609  loss_triplet_b2: 1.583  loss_triplet_b3: 1.593  loss_triplet_b22: 1.982  loss_triplet_b33: 2.233  time: 0.9201  data_time: 0.0006  lr: 9.34e-05  max_mem: 72M
[07/09 14:46:36] fastreid.utils.events INFO:  eta: 0:43:28  epoch/iter: 7/399  total_loss: 58.88  loss_cls_b1: 6.275  loss_cls_b2: 6.227  loss_cls_b21: 6.224  loss_cls_b22: 6.187  loss_cls_b3: 6.163  loss_cls_b31: 6.176  loss_cls_b32: 6.229  loss_cls_b33: 6.194  loss_triplet_b1: 1.61  loss_triplet_b2: 1.593  loss_triplet_b3: 1.594  loss_triplet_b22: 2.002  loss_triplet_b33: 2.25  time: 0.9204  data_time: 0.0007  lr: 9.69e-05  max_mem: 72M
[07/09 14:47:05] fastreid.utils.events INFO:  eta: 0:43:00  epoch/iter: 7/431  total_loss: 58.88  loss_cls_b1: 6.272  loss_cls_b2: 6.224  loss_cls_b21: 6.224  loss_cls_b22: 6.196  loss_cls_b3: 6.18  loss_cls_b31: 6.181  loss_cls_b32: 6.225  loss_cls_b33: 6.196  loss_triplet_b1: 1.609  loss_triplet_b2: 1.596  loss_triplet_b3: 1.594  loss_triplet_b22: 2.012  loss_triplet_b33: 2.272  time: 0.9207  data_time: 0.0005  lr: 1.02e-04  max_mem: 72M
[07/09 14:47:55] fastreid.utils.events INFO:  eta: 0:42:10  epoch/iter: 8/485  total_loss: 58.85  loss_cls_b1: 6.27  loss_cls_b2: 6.214  loss_cls_b21: 6.222  loss_cls_b22: 6.171  loss_cls_b3: 6.191  loss_cls_b31: 6.224  loss_cls_b32: 6.223  loss_cls_b33: 6.169  loss_triplet_b1: 1.612  loss_triplet_b2: 1.596  loss_triplet_b3: 1.587  loss_triplet_b22: 2.002  loss_triplet_b33: 2.284  time: 0.9208  data_time: 0.0005  lr: 1.10e-04  max_mem: 72M
[07/09 14:48:45] fastreid.engine.defaults INFO: Prepare testing set
[07/09 14:48:45] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 772        | 1           |
| gallery  | 297     | 3479       | 1           |[0m
[07/09 14:48:45] fastreid.evaluation.evaluator INFO: Start inference on 4251 images
[07/09 14:48:55] fastreid.evaluation.evaluator INFO: Inference done 11/34. 0.6046 s / batch. ETA=0:00:14
[07/09 14:49:09] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:17.544765 (0.604992 s / batch per device, on 1 devices)
[07/09 14:49:09] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:17 (0.600956 s / batch per device, on 1 devices)
[07/09 14:49:09] fastreid.engine.defaults INFO: Evaluation results for WildSplit2 in csv format:
[07/09 14:49:09] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit2 | 47.01    | 63.64    | 70.65     | 19.33 | 1.98   | 33.17    |[0m
[07/09 14:49:09] fastreid.utils.events INFO:  eta: 0:41:20  epoch/iter: 9/539  total_loss: 58.73  loss_cls_b1: 6.282  loss_cls_b2: 6.219  loss_cls_b21: 6.242  loss_cls_b22: 6.189  loss_cls_b3: 6.198  loss_cls_b31: 6.199  loss_cls_b32: 6.212  loss_cls_b33: 6.19  loss_triplet_b1: 1.6  loss_triplet_b2: 1.596  loss_triplet_b3: 1.566  loss_triplet_b22: 1.957  loss_triplet_b33: 2.215  time: 0.9210  data_time: 0.0006  lr: 1.19e-04  max_mem: 252M
[07/09 14:50:00] fastreid.utils.events INFO:  eta: 0:40:31  epoch/iter: 10/593  total_loss: 58.61  loss_cls_b1: 6.251  loss_cls_b2: 6.207  loss_cls_b21: 6.224  loss_cls_b22: 6.175  loss_cls_b3: 6.199  loss_cls_b31: 6.193  loss_cls_b32: 6.222  loss_cls_b33: 6.198  loss_triplet_b1: 1.6  loss_triplet_b2: 1.616  loss_triplet_b3: 1.569  loss_triplet_b22: 1.942  loss_triplet_b33: 2.168  time: 0.9221  data_time: 0.0006  lr: 1.27e-04  max_mem: 252M
[07/09 14:50:05] fastreid.utils.events INFO:  eta: 0:40:26  epoch/iter: 11/599  total_loss: 58.53  loss_cls_b1: 6.244  loss_cls_b2: 6.207  loss_cls_b21: 6.235  loss_cls_b22: 6.183  loss_cls_b3: 6.203  loss_cls_b31: 6.193  loss_cls_b32: 6.221  loss_cls_b33: 6.197  loss_triplet_b1: 1.595  loss_triplet_b2: 1.603  loss_triplet_b3: 1.561  loss_triplet_b22: 1.934  loss_triplet_b33: 2.163  time: 0.9222  data_time: 0.0006  lr: 1.28e-04  max_mem: 252M
[07/09 14:50:50] fastreid.utils.events INFO:  eta: 0:39:44  epoch/iter: 11/647  total_loss: 58.51  loss_cls_b1: 6.245  loss_cls_b2: 6.218  loss_cls_b21: 6.226  loss_cls_b22: 6.179  loss_cls_b3: 6.207  loss_cls_b31: 6.207  loss_cls_b32: 6.245  loss_cls_b33: 6.195  loss_triplet_b1: 1.603  loss_triplet_b2: 1.597  loss_triplet_b3: 1.564  loss_triplet_b22: 1.921  loss_triplet_b33: 2.094  time: 0.9226  data_time: 0.0007  lr: 1.36e-04  max_mem: 252M
[07/09 14:51:40] fastreid.utils.events INFO:  eta: 0:38:55  epoch/iter: 12/701  total_loss: 58.28  loss_cls_b1: 6.231  loss_cls_b2: 6.223  loss_cls_b21: 6.255  loss_cls_b22: 6.199  loss_cls_b3: 6.205  loss_cls_b31: 6.199  loss_cls_b32: 6.219  loss_cls_b33: 6.216  loss_triplet_b1: 1.564  loss_triplet_b2: 1.572  loss_triplet_b3: 1.541  loss_triplet_b22: 1.855  loss_triplet_b33: 2.02  time: 0.9229  data_time: 0.0006  lr: 1.44e-04  max_mem: 252M
[07/09 14:52:30] fastreid.utils.events INFO:  eta: 0:38:06  epoch/iter: 13/755  total_loss: 58.22  loss_cls_b1: 6.219  loss_cls_b2: 6.22  loss_cls_b21: 6.249  loss_cls_b22: 6.216  loss_cls_b3: 6.2  loss_cls_b31: 6.188  loss_cls_b32: 6.22  loss_cls_b33: 6.219  loss_triplet_b1: 1.55  loss_triplet_b2: 1.558  loss_triplet_b3: 1.528  loss_triplet_b22: 1.832  loss_triplet_b33: 1.985  time: 0.9230  data_time: 0.0006  lr: 1.53e-04  max_mem: 252M
[07/09 14:53:10] fastreid.utils.events INFO:  eta: 0:37:25  epoch/iter: 14/799  total_loss: 58.15  loss_cls_b1: 6.227  loss_cls_b2: 6.216  loss_cls_b21: 6.241  loss_cls_b22: 6.227  loss_cls_b3: 6.209  loss_cls_b31: 6.197  loss_cls_b32: 6.223  loss_cls_b33: 6.214  loss_triplet_b1: 1.536  loss_triplet_b2: 1.549  loss_triplet_b3: 1.521  loss_triplet_b22: 1.812  loss_triplet_b33: 1.952  time: 0.9229  data_time: 0.0005  lr: 1.60e-04  max_mem: 252M
[07/09 14:53:20] fastreid.utils.events INFO:  eta: 0:37:16  epoch/iter: 14/809  total_loss: 58.14  loss_cls_b1: 6.223  loss_cls_b2: 6.221  loss_cls_b21: 6.238  loss_cls_b22: 6.228  loss_cls_b3: 6.209  loss_cls_b31: 6.191  loss_cls_b32: 6.215  loss_cls_b33: 6.219  loss_triplet_b1: 1.54  loss_triplet_b2: 1.55  loss_triplet_b3: 1.521  loss_triplet_b22: 1.807  loss_triplet_b33: 1.959  time: 0.9229  data_time: 0.0005  lr: 1.61e-04  max_mem: 252M
[07/09 14:54:10] fastreid.utils.events INFO:  eta: 0:36:26  epoch/iter: 15/863  total_loss: 58.02  loss_cls_b1: 6.221  loss_cls_b2: 6.204  loss_cls_b21: 6.249  loss_cls_b22: 6.232  loss_cls_b3: 6.208  loss_cls_b31: 6.177  loss_cls_b32: 6.209  loss_cls_b33: 6.215  loss_triplet_b1: 1.504  loss_triplet_b2: 1.532  loss_triplet_b3: 1.489  loss_triplet_b22: 1.768  loss_triplet_b33: 1.929  time: 0.9234  data_time: 0.0008  lr: 1.70e-04  max_mem: 252M
[07/09 14:55:00] fastreid.utils.events INFO:  eta: 0:35:37  epoch/iter: 16/917  total_loss: 58.01  loss_cls_b1: 6.241  loss_cls_b2: 6.193  loss_cls_b21: 6.238  loss_cls_b22: 6.231  loss_cls_b3: 6.22  loss_cls_b31: 6.195  loss_cls_b32: 6.203  loss_cls_b33: 6.197  loss_triplet_b1: 1.493  loss_triplet_b2: 1.519  loss_triplet_b3: 1.5  loss_triplet_b22: 1.76  loss_triplet_b33: 1.928  time: 0.9235  data_time: 0.0006  lr: 1.78e-04  max_mem: 252M
[07/09 14:55:50] fastreid.utils.events INFO:  eta: 0:34:48  epoch/iter: 17/971  total_loss: 58  loss_cls_b1: 6.227  loss_cls_b2: 6.189  loss_cls_b21: 6.246  loss_cls_b22: 6.231  loss_cls_b3: 6.206  loss_cls_b31: 6.207  loss_cls_b32: 6.215  loss_cls_b33: 6.191  loss_triplet_b1: 1.49  loss_triplet_b2: 1.511  loss_triplet_b3: 1.479  loss_triplet_b22: 1.741  loss_triplet_b33: 1.928  time: 0.9234  data_time: 0.0006  lr: 1.87e-04  max_mem: 252M
[07/09 14:56:16] fastreid.utils.events INFO:  eta: 0:34:22  epoch/iter: 18/999  total_loss: 57.91  loss_cls_b1: 6.222  loss_cls_b2: 6.185  loss_cls_b21: 6.25  loss_cls_b22: 6.218  loss_cls_b3: 6.205  loss_cls_b31: 6.19  loss_cls_b32: 6.198  loss_cls_b33: 6.197  loss_triplet_b1: 1.488  loss_triplet_b2: 1.5  loss_triplet_b3: 1.48  loss_triplet_b22: 1.746  loss_triplet_b33: 1.93  time: 0.9236  data_time: 0.0006  lr: 1.91e-04  max_mem: 252M
[07/09 14:56:16] fastreid.engine.hooks INFO: Open layer group "backbone, b1, b2, b3" training
[07/09 14:56:40] fastreid.utils.events INFO:  eta: 0:34:00  epoch/iter: 18/1025  total_loss: 57.77  loss_cls_b1: 6.223  loss_cls_b2: 6.19  loss_cls_b21: 6.247  loss_cls_b22: 6.211  loss_cls_b3: 6.218  loss_cls_b31: 6.176  loss_cls_b32: 6.205  loss_cls_b33: 6.188  loss_triplet_b1: 1.469  loss_triplet_b2: 1.475  loss_triplet_b3: 1.46  loss_triplet_b22: 1.734  loss_triplet_b33: 1.895  time: 0.9239  data_time: 0.0006  lr: 1.95e-04  max_mem: 252M
[07/09 14:57:31] fastreid.engine.defaults INFO: Prepare testing set
[07/09 14:57:31] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 772        | 1           |
| gallery  | 297     | 3479       | 1           |[0m
[07/09 14:57:31] fastreid.evaluation.evaluator INFO: Start inference on 4251 images
[07/09 14:57:39] fastreid.evaluation.evaluator INFO: Inference done 11/34. 0.5460 s / batch. ETA=0:00:12
[07/09 14:57:51] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:15.012010 (0.517656 s / batch per device, on 1 devices)
[07/09 14:57:51] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:14 (0.516477 s / batch per device, on 1 devices)
[07/09 14:57:51] fastreid.engine.defaults INFO: Evaluation results for WildSplit2 in csv format:
[07/09 14:57:51] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit2 | 65.32    | 77.79    | 82.08     | 35.89 | 4.81   | 50.61    |[0m
[07/09 14:57:52] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit2/mgn_R50-ibn/model_best.pth
[07/09 14:57:54] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit2/mgn_R50-ibn/model_0019.pth
[07/09 14:57:56] fastreid.utils.events INFO:  eta: 0:33:15  epoch/iter: 19/1079  total_loss: 57.02  loss_cls_b1: 6.138  loss_cls_b2: 6.153  loss_cls_b21: 6.181  loss_cls_b22: 6.151  loss_cls_b3: 6.151  loss_cls_b31: 6.114  loss_cls_b32: 6.151  loss_cls_b33: 6.141  loss_triplet_b1: 1.347  loss_triplet_b2: 1.348  loss_triplet_b3: 1.331  loss_triplet_b22: 1.582  loss_triplet_b33: 1.749  time: 0.9250  data_time: 0.0006  lr: 2.04e-04  max_mem: 252M
[07/09 14:58:49] fastreid.utils.events INFO:  eta: 0:32:27  epoch/iter: 20/1133  total_loss: 53.78  loss_cls_b1: 6.021  loss_cls_b2: 6.039  loss_cls_b21: 6.03  loss_cls_b22: 6.026  loss_cls_b3: 6.03  loss_cls_b31: 6.031  loss_cls_b32: 6.021  loss_cls_b33: 6.032  loss_triplet_b1: 1.074  loss_triplet_b2: 0.9666  loss_triplet_b3: 0.9657  loss_triplet_b22: 1.118  loss_triplet_b33: 1.242  time: 0.9274  data_time: 0.0006  lr: 2.13e-04  max_mem: 252M
[07/09 14:59:40] fastreid.utils.events INFO:  eta: 0:31:39  epoch/iter: 21/1187  total_loss: 48.6  loss_cls_b1: 5.408  loss_cls_b2: 5.594  loss_cls_b21: 5.467  loss_cls_b22: 5.604  loss_cls_b3: 5.514  loss_cls_b31: 5.514  loss_cls_b32: 5.523  loss_cls_b33: 5.554  loss_triplet_b1: 0.7823  loss_triplet_b2: 0.756  loss_triplet_b3: 0.7474  loss_triplet_b22: 0.8894  loss_triplet_b33: 0.9807  time: 0.9283  data_time: 0.0006  lr: 2.21e-04  max_mem: 252M
[07/09 14:59:51] fastreid.utils.events INFO:  eta: 0:31:28  epoch/iter: 22/1199  total_loss: 46.51  loss_cls_b1: 5.291  loss_cls_b2: 5.403  loss_cls_b21: 5.357  loss_cls_b22: 5.48  loss_cls_b3: 5.342  loss_cls_b31: 5.405  loss_cls_b32: 5.397  loss_cls_b33: 5.488  loss_triplet_b1: 0.7426  loss_triplet_b2: 0.7056  loss_triplet_b3: 0.7104  loss_triplet_b22: 0.8311  loss_triplet_b33: 0.924  time: 0.9285  data_time: 0.0006  lr: 2.23e-04  max_mem: 252M
[07/09 15:00:31] fastreid.utils.events INFO:  eta: 0:30:50  epoch/iter: 22/1241  total_loss: 44.31  loss_cls_b1: 4.913  loss_cls_b2: 5.021  loss_cls_b21: 4.98  loss_cls_b22: 5.039  loss_cls_b3: 4.979  loss_cls_b31: 5.03  loss_cls_b32: 5.087  loss_cls_b33: 5.073  loss_triplet_b1: 0.6845  loss_triplet_b2: 0.6315  loss_triplet_b3: 0.6497  loss_triplet_b22: 0.7526  loss_triplet_b33: 0.8522  time: 0.9290  data_time: 0.0004  lr: 2.30e-04  max_mem: 252M
[07/09 15:01:22] fastreid.utils.events INFO:  eta: 0:30:03  epoch/iter: 23/1295  total_loss: 39.18  loss_cls_b1: 4.355  loss_cls_b2: 4.483  loss_cls_b21: 4.487  loss_cls_b22: 4.608  loss_cls_b3: 4.478  loss_cls_b31: 4.562  loss_cls_b32: 4.516  loss_cls_b33: 4.626  loss_triplet_b1: 0.6445  loss_triplet_b2: 0.5765  loss_triplet_b3: 0.5998  loss_triplet_b22: 0.6607  loss_triplet_b33: 0.7671  time: 0.9296  data_time: 0.0004  lr: 2.38e-04  max_mem: 252M
[07/09 15:02:13] fastreid.utils.events INFO:  eta: 0:29:14  epoch/iter: 24/1349  total_loss: 34.9  loss_cls_b1: 3.774  loss_cls_b2: 3.956  loss_cls_b21: 3.938  loss_cls_b22: 4.097  loss_cls_b3: 3.917  loss_cls_b31: 4.042  loss_cls_b32: 4.047  loss_cls_b33: 4.231  loss_triplet_b1: 0.5279  loss_triplet_b2: 0.518  loss_triplet_b3: 0.5135  loss_triplet_b22: 0.5863  loss_triplet_b33: 0.6816  time: 0.9303  data_time: 0.0012  lr: 2.47e-04  max_mem: 252M
[07/09 15:03:00] fastreid.utils.events INFO:  eta: 0:28:30  epoch/iter: 25/1399  total_loss: 31.64  loss_cls_b1: 3.441  loss_cls_b2: 3.562  loss_cls_b21: 3.609  loss_cls_b22: 3.752  loss_cls_b3: 3.586  loss_cls_b31: 3.681  loss_cls_b32: 3.649  loss_cls_b33: 3.885  loss_triplet_b1: 0.483  loss_triplet_b2: 0.479  loss_triplet_b3: 0.4667  loss_triplet_b22: 0.5664  loss_triplet_b33: 0.6244  time: 0.9309  data_time: 0.0004  lr: 2.54e-04  max_mem: 252M
[07/09 15:03:04] fastreid.utils.events INFO:  eta: 0:28:27  epoch/iter: 25/1403  total_loss: 31.51  loss_cls_b1: 3.422  loss_cls_b2: 3.558  loss_cls_b21: 3.604  loss_cls_b22: 3.736  loss_cls_b3: 3.582  loss_cls_b31: 3.668  loss_cls_b32: 3.639  loss_cls_b33: 3.86  loss_triplet_b1: 0.4809  loss_triplet_b2: 0.476  loss_triplet_b3: 0.4656  loss_triplet_b22: 0.5655  loss_triplet_b33: 0.6238  time: 0.9310  data_time: 0.0011  lr: 2.55e-04  max_mem: 252M
[07/09 15:03:55] fastreid.utils.events INFO:  eta: 0:27:38  epoch/iter: 26/1457  total_loss: 29.28  loss_cls_b1: 3.123  loss_cls_b2: 3.286  loss_cls_b21: 3.292  loss_cls_b22: 3.514  loss_cls_b3: 3.268  loss_cls_b31: 3.333  loss_cls_b32: 3.467  loss_cls_b33: 3.603  loss_triplet_b1: 0.4269  loss_triplet_b2: 0.4318  loss_triplet_b3: 0.4425  loss_triplet_b22: 0.482  loss_triplet_b33: 0.5263  time: 0.9314  data_time: 0.0005  lr: 2.64e-04  max_mem: 252M
[07/09 15:04:46] fastreid.utils.events INFO:  eta: 0:26:50  epoch/iter: 27/1511  total_loss: 27.39  loss_cls_b1: 2.906  loss_cls_b2: 3.051  loss_cls_b21: 3.157  loss_cls_b22: 3.331  loss_cls_b3: 3.085  loss_cls_b31: 3.179  loss_cls_b32: 3.247  loss_cls_b33: 3.423  loss_triplet_b1: 0.4051  loss_triplet_b2: 0.3896  loss_triplet_b3: 0.4142  loss_triplet_b22: 0.459  loss_triplet_b33: 0.4851  time: 0.9320  data_time: 0.0007  lr: 2.72e-04  max_mem: 252M
[07/09 15:05:38] fastreid.utils.events INFO:  eta: 0:26:01  epoch/iter: 28/1565  total_loss: 25.83  loss_cls_b1: 2.697  loss_cls_b2: 2.852  loss_cls_b21: 2.898  loss_cls_b22: 3.088  loss_cls_b3: 2.824  loss_cls_b31: 3.027  loss_cls_b32: 3.024  loss_cls_b33: 3.194  loss_triplet_b1: 0.3845  loss_triplet_b2: 0.3626  loss_triplet_b3: 0.3813  loss_triplet_b22: 0.4408  loss_triplet_b33: 0.4754  time: 0.9325  data_time: 0.0005  lr: 2.81e-04  max_mem: 252M
[07/09 15:06:10] fastreid.utils.events INFO:  eta: 0:25:30  epoch/iter: 29/1599  total_loss: 25.07  loss_cls_b1: 2.625  loss_cls_b2: 2.756  loss_cls_b21: 2.841  loss_cls_b22: 3.031  loss_cls_b3: 2.745  loss_cls_b31: 2.938  loss_cls_b32: 2.966  loss_cls_b33: 3.116  loss_triplet_b1: 0.3749  loss_triplet_b2: 0.356  loss_triplet_b3: 0.3664  loss_triplet_b22: 0.4266  loss_triplet_b33: 0.4612  time: 0.9328  data_time: 0.0007  lr: 2.86e-04  max_mem: 252M
[07/09 15:06:29] fastreid.engine.defaults INFO: Prepare testing set
[07/09 15:06:29] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 772        | 1           |
| gallery  | 297     | 3479       | 1           |[0m
[07/09 15:06:29] fastreid.evaluation.evaluator INFO: Start inference on 4251 images
[07/09 15:06:37] fastreid.evaluation.evaluator INFO: Inference done 11/34. 0.5646 s / batch. ETA=0:00:13
[07/09 15:06:49] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:15.196631 (0.524022 s / batch per device, on 1 devices)
[07/09 15:06:49] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:15 (0.522753 s / batch per device, on 1 devices)
[07/09 15:06:49] fastreid.engine.defaults INFO: Evaluation results for WildSplit2 in csv format:
[07/09 15:06:49] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit2 | 76.10    | 86.10    | 88.57     | 56.14 | 15.59  | 66.12    |[0m
[07/09 15:06:49] fastreid.utils.events INFO:  eta: 0:25:12  epoch/iter: 29/1619  total_loss: 24.21  loss_cls_b1: 2.534  loss_cls_b2: 2.68  loss_cls_b21: 2.741  loss_cls_b22: 2.959  loss_cls_b3: 2.682  loss_cls_b31: 2.842  loss_cls_b32: 2.883  loss_cls_b33: 3.067  loss_triplet_b1: 0.3596  loss_triplet_b2: 0.3505  loss_triplet_b3: 0.3472  loss_triplet_b22: 0.4132  loss_triplet_b33: 0.444  time: 0.9329  data_time: 0.0005  lr: 2.89e-04  max_mem: 252M
[07/09 15:07:41] fastreid.utils.events INFO:  eta: 0:24:22  epoch/iter: 30/1673  total_loss: 23.32  loss_cls_b1: 2.457  loss_cls_b2: 2.57  loss_cls_b21: 2.689  loss_cls_b22: 2.842  loss_cls_b3: 2.57  loss_cls_b31: 2.736  loss_cls_b32: 2.753  loss_cls_b33: 2.992  loss_triplet_b1: 0.324  loss_triplet_b2: 0.3159  loss_triplet_b3: 0.3169  loss_triplet_b22: 0.368  loss_triplet_b33: 0.3949  time: 0.9335  data_time: 0.0006  lr: 2.98e-04  max_mem: 252M
[07/09 15:08:32] fastreid.utils.events INFO:  eta: 0:23:33  epoch/iter: 31/1727  total_loss: 21.78  loss_cls_b1: 2.247  loss_cls_b2: 2.425  loss_cls_b21: 2.484  loss_cls_b22: 2.697  loss_cls_b3: 2.371  loss_cls_b31: 2.569  loss_cls_b32: 2.651  loss_cls_b33: 2.802  loss_triplet_b1: 0.2929  loss_triplet_b2: 0.2604  loss_triplet_b3: 0.2689  loss_triplet_b22: 0.3197  loss_triplet_b33: 0.3379  time: 0.9338  data_time: 0.0004  lr: 3.06e-04  max_mem: 252M
[07/09 15:09:23] fastreid.utils.events INFO:  eta: 0:22:44  epoch/iter: 32/1781  total_loss: 19.51  loss_cls_b1: 2.033  loss_cls_b2: 2.159  loss_cls_b21: 2.273  loss_cls_b22: 2.49  loss_cls_b3: 2.169  loss_cls_b31: 2.407  loss_cls_b32: 2.414  loss_cls_b33: 2.594  loss_triplet_b1: 0.2441  loss_triplet_b2: 0.2243  loss_triplet_b3: 0.2522  loss_triplet_b22: 0.2681  loss_triplet_b33: 0.2983  time: 0.9342  data_time: 0.0005  lr: 3.15e-04  max_mem: 252M
[07/09 15:09:40] fastreid.utils.events INFO:  eta: 0:22:27  epoch/iter: 33/1799  total_loss: 19.19  loss_cls_b1: 2.017  loss_cls_b2: 2.079  loss_cls_b21: 2.223  loss_cls_b22: 2.442  loss_cls_b3: 2.129  loss_cls_b31: 2.344  loss_cls_b32: 2.364  loss_cls_b33: 2.563  loss_triplet_b1: 0.2243  loss_triplet_b2: 0.2091  loss_triplet_b3: 0.2275  loss_triplet_b22: 0.2585  loss_triplet_b33: 0.2713  time: 0.9343  data_time: 0.0004  lr: 3.17e-04  max_mem: 252M
[07/09 15:10:14] fastreid.utils.events INFO:  eta: 0:21:54  epoch/iter: 33/1835  total_loss: 19.22  loss_cls_b1: 2.006  loss_cls_b2: 2.075  loss_cls_b21: 2.233  loss_cls_b22: 2.446  loss_cls_b3: 2.094  loss_cls_b31: 2.348  loss_cls_b32: 2.352  loss_cls_b33: 2.585  loss_triplet_b1: 0.2197  loss_triplet_b2: 0.2133  loss_triplet_b3: 0.229  loss_triplet_b22: 0.2537  loss_triplet_b33: 0.2713  time: 0.9345  data_time: 0.0006  lr: 3.23e-04  max_mem: 252M
[07/09 15:11:05] fastreid.utils.events INFO:  eta: 0:21:05  epoch/iter: 34/1889  total_loss: 17.96  loss_cls_b1: 1.848  loss_cls_b2: 1.955  loss_cls_b21: 2.077  loss_cls_b22: 2.281  loss_cls_b3: 1.979  loss_cls_b31: 2.171  loss_cls_b32: 2.237  loss_cls_b33: 2.443  loss_triplet_b1: 0.1803  loss_triplet_b2: 0.194  loss_triplet_b3: 0.1982  loss_triplet_b22: 0.1995  loss_triplet_b33: 0.2411  time: 0.9350  data_time: 0.0012  lr: 3.32e-04  max_mem: 252M
[07/09 15:11:57] fastreid.utils.events INFO:  eta: 0:20:16  epoch/iter: 35/1943  total_loss: 17.27  loss_cls_b1: 1.785  loss_cls_b2: 1.879  loss_cls_b21: 2.035  loss_cls_b22: 2.196  loss_cls_b3: 1.876  loss_cls_b31: 2.122  loss_cls_b32: 2.156  loss_cls_b33: 2.343  loss_triplet_b1: 0.1746  loss_triplet_b2: 0.1767  loss_triplet_b3: 0.1796  loss_triplet_b22: 0.1876  loss_triplet_b33: 0.2215  time: 0.9354  data_time: 0.0005  lr: 3.40e-04  max_mem: 252M
[07/09 15:12:48] fastreid.utils.events INFO:  eta: 0:19:26  epoch/iter: 36/1997  total_loss: 16.61  loss_cls_b1: 1.69  loss_cls_b2: 1.768  loss_cls_b21: 1.94  loss_cls_b22: 2.123  loss_cls_b3: 1.788  loss_cls_b31: 2.053  loss_cls_b32: 2.119  loss_cls_b33: 2.299  loss_triplet_b1: 0.1641  loss_triplet_b2: 0.1685  loss_triplet_b3: 0.1717  loss_triplet_b22: 0.1816  loss_triplet_b33: 0.1921  time: 0.9356  data_time: 0.0006  lr: 3.49e-04  max_mem: 252M
[07/09 15:12:49] fastreid.utils.events INFO:  eta: 0:19:24  epoch/iter: 37/1999  total_loss: 16.54  loss_cls_b1: 1.684  loss_cls_b2: 1.757  loss_cls_b21: 1.94  loss_cls_b22: 2.112  loss_cls_b3: 1.781  loss_cls_b31: 2.053  loss_cls_b32: 2.117  loss_cls_b33: 2.281  loss_triplet_b1: 0.1638  loss_triplet_b2: 0.1685  loss_triplet_b3: 0.1717  loss_triplet_b22: 0.1816  loss_triplet_b33: 0.1921  time: 0.9356  data_time: 0.0006  lr: 3.49e-04  max_mem: 252M
[07/09 15:13:39] fastreid.utils.events INFO:  eta: 0:18:35  epoch/iter: 37/2051  total_loss: 15.86  loss_cls_b1: 1.618  loss_cls_b2: 1.667  loss_cls_b21: 1.841  loss_cls_b22: 1.993  loss_cls_b3: 1.728  loss_cls_b31: 1.986  loss_cls_b32: 2  loss_cls_b33: 2.219  loss_triplet_b1: 0.147  loss_triplet_b2: 0.1572  loss_triplet_b3: 0.1585  loss_triplet_b22: 0.1637  loss_triplet_b33: 0.1663  time: 0.9360  data_time: 0.0004  lr: 3.49e-04  max_mem: 252M
[07/09 15:14:30] fastreid.utils.events INFO:  eta: 0:17:45  epoch/iter: 38/2105  total_loss: 15.37  loss_cls_b1: 1.584  loss_cls_b2: 1.6  loss_cls_b21: 1.765  loss_cls_b22: 1.956  loss_cls_b3: 1.677  loss_cls_b31: 1.937  loss_cls_b32: 1.969  loss_cls_b33: 2.197  loss_triplet_b1: 0.1659  loss_triplet_b2: 0.1582  loss_triplet_b3: 0.1626  loss_triplet_b22: 0.1748  loss_triplet_b33: 0.1793  time: 0.9363  data_time: 0.0007  lr: 3.47e-04  max_mem: 252M
[07/09 15:15:21] fastreid.engine.defaults INFO: Prepare testing set
[07/09 15:15:21] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 772        | 1           |
| gallery  | 297     | 3479       | 1           |[0m
[07/09 15:15:21] fastreid.evaluation.evaluator INFO: Start inference on 4251 images
[07/09 15:15:29] fastreid.evaluation.evaluator INFO: Inference done 11/34. 0.5692 s / batch. ETA=0:00:13
[07/09 15:15:41] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:15.364572 (0.529813 s / batch per device, on 1 devices)
[07/09 15:15:41] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:15 (0.527206 s / batch per device, on 1 devices)
[07/09 15:15:42] fastreid.engine.defaults INFO: Evaluation results for WildSplit2 in csv format:
[07/09 15:15:42] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit2 | 78.57    | 87.53    | 90.65     | 64.58 | 22.88  | 71.57    |[0m
[07/09 15:15:42] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit2/mgn_R50-ibn/model_best.pth
[07/09 15:15:46] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit2/mgn_R50-ibn/model_0039.pth
[07/09 15:15:48] fastreid.utils.events INFO:  eta: 0:16:54  epoch/iter: 39/2159  total_loss: 15.14  loss_cls_b1: 1.558  loss_cls_b2: 1.546  loss_cls_b21: 1.715  loss_cls_b22: 1.948  loss_cls_b3: 1.609  loss_cls_b31: 1.883  loss_cls_b32: 1.955  loss_cls_b33: 2.209  loss_triplet_b1: 0.1637  loss_triplet_b2: 0.1477  loss_triplet_b3: 0.147  loss_triplet_b22: 0.1728  loss_triplet_b33: 0.1689  time: 0.9365  data_time: 0.0006  lr: 3.42e-04  max_mem: 324M
[07/09 15:16:27] fastreid.utils.events INFO:  eta: 0:16:16  epoch/iter: 40/2199  total_loss: 14.45  loss_cls_b1: 1.454  loss_cls_b2: 1.485  loss_cls_b21: 1.691  loss_cls_b22: 1.89  loss_cls_b3: 1.489  loss_cls_b31: 1.839  loss_cls_b32: 1.886  loss_cls_b33: 2.098  loss_triplet_b1: 0.1353  loss_triplet_b2: 0.1347  loss_triplet_b3: 0.1351  loss_triplet_b22: 0.1529  loss_triplet_b33: 0.1551  time: 0.9373  data_time: 0.0005  lr: 3.33e-04  max_mem: 324M
[07/09 15:16:40] fastreid.utils.events INFO:  eta: 0:16:02  epoch/iter: 40/2213  total_loss: 14.44  loss_cls_b1: 1.433  loss_cls_b2: 1.485  loss_cls_b21: 1.684  loss_cls_b22: 1.89  loss_cls_b3: 1.505  loss_cls_b31: 1.831  loss_cls_b32: 1.881  loss_cls_b33: 2.08  loss_triplet_b1: 0.1309  loss_triplet_b2: 0.1273  loss_triplet_b3: 0.1272  loss_triplet_b22: 0.1478  loss_triplet_b33: 0.1417  time: 0.9372  data_time: 0.0005  lr: 3.33e-04  max_mem: 324M
[07/09 15:17:32] fastreid.utils.events INFO:  eta: 0:15:12  epoch/iter: 41/2267  total_loss: 13.6  loss_cls_b1: 1.366  loss_cls_b2: 1.427  loss_cls_b21: 1.646  loss_cls_b22: 1.781  loss_cls_b3: 1.451  loss_cls_b31: 1.718  loss_cls_b32: 1.805  loss_cls_b33: 1.907  loss_triplet_b1: 0.1155  loss_triplet_b2: 0.1148  loss_triplet_b3: 0.1192  loss_triplet_b22: 0.1397  loss_triplet_b33: 0.1332  time: 0.9376  data_time: 0.0004  lr: 3.21e-04  max_mem: 324M
[07/09 15:18:23] fastreid.utils.events INFO:  eta: 0:14:21  epoch/iter: 42/2321  total_loss: 12.9  loss_cls_b1: 1.292  loss_cls_b2: 1.335  loss_cls_b21: 1.522  loss_cls_b22: 1.667  loss_cls_b3: 1.347  loss_cls_b31: 1.596  loss_cls_b32: 1.698  loss_cls_b33: 1.856  loss_triplet_b1: 0.09696  loss_triplet_b2: 0.1007  loss_triplet_b3: 0.102  loss_triplet_b22: 0.1071  loss_triplet_b33: 0.1017  time: 0.9377  data_time: 0.0006  lr: 3.07e-04  max_mem: 324M
[07/09 15:19:14] fastreid.utils.events INFO:  eta: 0:13:31  epoch/iter: 43/2375  total_loss: 12  loss_cls_b1: 1.161  loss_cls_b2: 1.24  loss_cls_b21: 1.408  loss_cls_b22: 1.584  loss_cls_b3: 1.247  loss_cls_b31: 1.507  loss_cls_b32: 1.621  loss_cls_b33: 1.725  loss_triplet_b1: 0.07708  loss_triplet_b2: 0.08414  loss_triplet_b3: 0.08067  loss_triplet_b22: 0.07934  loss_triplet_b33: 0.07369  time: 0.9379  data_time: 0.0005  lr: 2.89e-04  max_mem: 324M
[07/09 15:19:37] fastreid.utils.events INFO:  eta: 0:13:08  epoch/iter: 44/2399  total_loss: 11.75  loss_cls_b1: 1.124  loss_cls_b2: 1.196  loss_cls_b21: 1.378  loss_cls_b22: 1.536  loss_cls_b3: 1.232  loss_cls_b31: 1.477  loss_cls_b32: 1.571  loss_cls_b33: 1.715  loss_triplet_b1: 0.07728  loss_triplet_b2: 0.08414  loss_triplet_b3: 0.08293  loss_triplet_b22: 0.07934  loss_triplet_b33: 0.07842  time: 0.9380  data_time: 0.0006  lr: 2.69e-04  max_mem: 324M
[07/09 15:20:05] fastreid.utils.events INFO:  eta: 0:12:40  epoch/iter: 44/2429  total_loss: 11.3  loss_cls_b1: 1.095  loss_cls_b2: 1.16  loss_cls_b21: 1.332  loss_cls_b22: 1.515  loss_cls_b3: 1.19  loss_cls_b31: 1.45  loss_cls_b32: 1.513  loss_cls_b33: 1.684  loss_triplet_b1: 0.07674  loss_triplet_b2: 0.07544  loss_triplet_b3: 0.07808  loss_triplet_b22: 0.07738  loss_triplet_b33: 0.07049  time: 0.9380  data_time: 0.0005  lr: 2.69e-04  max_mem: 324M
[07/09 15:20:56] fastreid.utils.events INFO:  eta: 0:11:49  epoch/iter: 45/2483  total_loss: 10.9  loss_cls_b1: 1.048  loss_cls_b2: 1.108  loss_cls_b21: 1.297  loss_cls_b22: 1.443  loss_cls_b3: 1.137  loss_cls_b31: 1.403  loss_cls_b32: 1.465  loss_cls_b33: 1.62  loss_triplet_b1: 0.06756  loss_triplet_b2: 0.06568  loss_triplet_b3: 0.0651  loss_triplet_b22: 0.06199  loss_triplet_b33: 0.05923  time: 0.9381  data_time: 0.0006  lr: 2.47e-04  max_mem: 324M
[07/09 15:21:47] fastreid.utils.events INFO:  eta: 0:10:59  epoch/iter: 46/2537  total_loss: 10.05  loss_cls_b1: 0.9857  loss_cls_b2: 1.033  loss_cls_b21: 1.211  loss_cls_b22: 1.31  loss_cls_b3: 1.028  loss_cls_b31: 1.312  loss_cls_b32: 1.347  loss_cls_b33: 1.551  loss_triplet_b1: 0.05173  loss_triplet_b2: 0.05482  loss_triplet_b3: 0.05411  loss_triplet_b22: 0.04571  loss_triplet_b33: 0.04558  time: 0.9382  data_time: 0.0007  lr: 2.24e-04  max_mem: 324M
[07/09 15:22:38] fastreid.utils.events INFO:  eta: 0:10:08  epoch/iter: 47/2591  total_loss: 9.158  loss_cls_b1: 0.896  loss_cls_b2: 0.9362  loss_cls_b21: 1.119  loss_cls_b22: 1.23  loss_cls_b3: 0.9391  loss_cls_b31: 1.194  loss_cls_b32: 1.277  loss_cls_b33: 1.423  loss_triplet_b1: 0.04997  loss_triplet_b2: 0.04743  loss_triplet_b3: 0.04961  loss_triplet_b22: 0.03987  loss_triplet_b33: 0.03998  time: 0.9383  data_time: 0.0005  lr: 2.00e-04  max_mem: 324M
[07/09 15:22:45] fastreid.utils.events INFO:  eta: 0:10:00  epoch/iter: 48/2599  total_loss: 9.066  loss_cls_b1: 0.8821  loss_cls_b2: 0.915  loss_cls_b21: 1.101  loss_cls_b22: 1.215  loss_cls_b3: 0.926  loss_cls_b31: 1.187  loss_cls_b32: 1.271  loss_cls_b33: 1.409  loss_triplet_b1: 0.048  loss_triplet_b2: 0.04461  loss_triplet_b3: 0.04874  loss_triplet_b22: 0.03943  loss_triplet_b33: 0.03799  time: 0.9383  data_time: 0.0004  lr: 1.75e-04  max_mem: 324M
[07/09 15:23:29] fastreid.utils.events INFO:  eta: 0:09:17  epoch/iter: 48/2645  total_loss: 8.907  loss_cls_b1: 0.8411  loss_cls_b2: 0.8907  loss_cls_b21: 1.078  loss_cls_b22: 1.185  loss_cls_b3: 0.9078  loss_cls_b31: 1.137  loss_cls_b32: 1.239  loss_cls_b33: 1.349  loss_triplet_b1: 0.04268  loss_triplet_b2: 0.03647  loss_triplet_b3: 0.04598  loss_triplet_b22: 0.03129  loss_triplet_b33: 0.03348  time: 0.9384  data_time: 0.0011  lr: 1.75e-04  max_mem: 324M
[07/09 15:24:20] fastreid.engine.defaults INFO: Prepare testing set
[07/09 15:24:20] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 772        | 1           |
| gallery  | 297     | 3479       | 1           |[0m
[07/09 15:24:20] fastreid.evaluation.evaluator INFO: Start inference on 4251 images
[07/09 15:24:28] fastreid.evaluation.evaluator INFO: Inference done 11/34. 0.5446 s / batch. ETA=0:00:12
[07/09 15:24:40] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:15.109603 (0.521021 s / batch per device, on 1 devices)
[07/09 15:24:40] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:15 (0.519567 s / batch per device, on 1 devices)
[07/09 15:24:40] fastreid.engine.defaults INFO: Evaluation results for WildSplit2 in csv format:
[07/09 15:24:40] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit2 | 79.48    | 87.66    | 90.91     | 69.59 | 28.51  | 74.53    |[0m
[07/09 15:24:40] fastreid.utils.events INFO:  eta: 0:08:26  epoch/iter: 49/2699  total_loss: 8.23  loss_cls_b1: 0.7559  loss_cls_b2: 0.8316  loss_cls_b21: 0.9723  loss_cls_b22: 1.1  loss_cls_b3: 0.8216  loss_cls_b31: 1.072  loss_cls_b32: 1.149  loss_cls_b33: 1.274  loss_triplet_b1: 0.03398  loss_triplet_b2: 0.03097  loss_triplet_b3: 0.03739  loss_triplet_b22: 0.02413  loss_triplet_b33: 0.02412  time: 0.9386  data_time: 0.0005  lr: 1.50e-04  max_mem: 324M
[07/09 15:25:32] fastreid.utils.events INFO:  eta: 0:07:36  epoch/iter: 50/2753  total_loss: 7.384  loss_cls_b1: 0.6855  loss_cls_b2: 0.7382  loss_cls_b21: 0.8679  loss_cls_b22: 0.9929  loss_cls_b3: 0.7745  loss_cls_b31: 1.001  loss_cls_b32: 1.053  loss_cls_b33: 1.146  loss_triplet_b1: 0.02079  loss_triplet_b2: 0.0232  loss_triplet_b3: 0.02884  loss_triplet_b22: 0.01766  loss_triplet_b33: 0.01822  time: 0.9388  data_time: 0.0007  lr: 1.26e-04  max_mem: 324M
[07/09 15:26:15] fastreid.utils.events INFO:  eta: 0:06:52  epoch/iter: 51/2799  total_loss: 7.17  loss_cls_b1: 0.6592  loss_cls_b2: 0.7277  loss_cls_b21: 0.867  loss_cls_b22: 0.9668  loss_cls_b3: 0.7529  loss_cls_b31: 0.9764  loss_cls_b32: 1.038  loss_cls_b33: 1.117  loss_triplet_b1: 0.02014  loss_triplet_b2: 0.02161  loss_triplet_b3: 0.02566  loss_triplet_b22: 0.0165  loss_triplet_b33: 0.01732  time: 0.9389  data_time: 0.0007  lr: 1.03e-04  max_mem: 324M
[07/09 15:26:23] fastreid.utils.events INFO:  eta: 0:06:45  epoch/iter: 51/2807  total_loss: 7.144  loss_cls_b1: 0.6294  loss_cls_b2: 0.6991  loss_cls_b21: 0.8575  loss_cls_b22: 0.9445  loss_cls_b3: 0.7363  loss_cls_b31: 0.9596  loss_cls_b32: 1.021  loss_cls_b33: 1.111  loss_triplet_b1: 0.02002  loss_triplet_b2: 0.02142  loss_triplet_b3: 0.025  loss_triplet_b22: 0.01644  loss_triplet_b33: 0.01596  time: 0.9389  data_time: 0.0005  lr: 1.03e-04  max_mem: 324M
[07/09 15:27:14] fastreid.utils.events INFO:  eta: 0:05:54  epoch/iter: 52/2861  total_loss: 6.916  loss_cls_b1: 0.6155  loss_cls_b2: 0.6757  loss_cls_b21: 0.8338  loss_cls_b22: 0.9183  loss_cls_b3: 0.7007  loss_cls_b31: 0.9433  loss_cls_b32: 1.012  loss_cls_b33: 1.06  loss_triplet_b1: 0.01768  loss_triplet_b2: 0.01885  loss_triplet_b3: 0.02088  loss_triplet_b22: 0.01269  loss_triplet_b33: 0.01195  time: 0.9390  data_time: 0.0006  lr: 8.07e-05  max_mem: 324M
[07/09 15:28:05] fastreid.utils.events INFO:  eta: 0:05:04  epoch/iter: 53/2915  total_loss: 6.33  loss_cls_b1: 0.5453  loss_cls_b2: 0.613  loss_cls_b21: 0.7685  loss_cls_b22: 0.8134  loss_cls_b3: 0.6435  loss_cls_b31: 0.8627  loss_cls_b32: 0.9111  loss_cls_b33: 0.9785  loss_triplet_b1: 0.01451  loss_triplet_b2: 0.01606  loss_triplet_b3: 0.01684  loss_triplet_b22: 0.01093  loss_triplet_b33: 0.01046  time: 0.9391  data_time: 0.0005  lr: 6.08e-05  max_mem: 324M
[07/09 15:28:56] fastreid.utils.events INFO:  eta: 0:04:13  epoch/iter: 54/2969  total_loss: 6.217  loss_cls_b1: 0.5269  loss_cls_b2: 0.5883  loss_cls_b21: 0.7523  loss_cls_b22: 0.8064  loss_cls_b3: 0.6305  loss_cls_b31: 0.8464  loss_cls_b32: 0.918  loss_cls_b33: 0.9654  loss_triplet_b1: 0.01269  loss_triplet_b2: 0.01489  loss_triplet_b3: 0.01664  loss_triplet_b22: 0.01072  loss_triplet_b33: 0.01041  time: 0.9393  data_time: 0.0005  lr: 4.32e-05  max_mem: 324M
[07/09 15:29:24] fastreid.utils.events INFO:  eta: 0:03:45  epoch/iter: 55/2999  total_loss: 5.886  loss_cls_b1: 0.509  loss_cls_b2: 0.5584  loss_cls_b21: 0.7233  loss_cls_b22: 0.782  loss_cls_b3: 0.5841  loss_cls_b31: 0.8102  loss_cls_b32: 0.8887  loss_cls_b33: 0.941  loss_triplet_b1: 0.0106  loss_triplet_b2: 0.01261  loss_triplet_b3: 0.01403  loss_triplet_b22: 0.008889  loss_triplet_b33: 0.008574  time: 0.9393  data_time: 0.0005  lr: 2.84e-05  max_mem: 324M
[07/09 15:29:47] fastreid.utils.events INFO:  eta: 0:03:22  epoch/iter: 55/3023  total_loss: 5.81  loss_cls_b1: 0.5035  loss_cls_b2: 0.5501  loss_cls_b21: 0.722  loss_cls_b22: 0.7712  loss_cls_b3: 0.5809  loss_cls_b31: 0.8102  loss_cls_b32: 0.8607  loss_cls_b33: 0.9285  loss_triplet_b1: 0.01048  loss_triplet_b2: 0.01245  loss_triplet_b3: 0.01385  loss_triplet_b22: 0.009511  loss_triplet_b33: 0.008319  time: 0.9393  data_time: 0.0006  lr: 2.84e-05  max_mem: 324M
[07/09 15:30:38] fastreid.utils.events INFO:  eta: 0:02:32  epoch/iter: 56/3077  total_loss: 5.522  loss_cls_b1: 0.4558  loss_cls_b2: 0.5229  loss_cls_b21: 0.6732  loss_cls_b22: 0.7379  loss_cls_b3: 0.5539  loss_cls_b31: 0.7671  loss_cls_b32: 0.8236  loss_cls_b33: 0.8678  loss_triplet_b1: 0.008789  loss_triplet_b2: 0.01069  loss_triplet_b3: 0.0119  loss_triplet_b22: 0.00759  loss_triplet_b33: 0.006819  time: 0.9395  data_time: 0.0007  lr: 1.64e-05  max_mem: 324M
[07/09 15:31:29] fastreid.utils.events INFO:  eta: 0:01:41  epoch/iter: 57/3131  total_loss: 5.522  loss_cls_b1: 0.4656  loss_cls_b2: 0.528  loss_cls_b21: 0.6583  loss_cls_b22: 0.7431  loss_cls_b3: 0.5485  loss_cls_b31: 0.757  loss_cls_b32: 0.8108  loss_cls_b33: 0.865  loss_triplet_b1: 0.009071  loss_triplet_b2: 0.0104  loss_triplet_b3: 0.01159  loss_triplet_b22: 0.006807  loss_triplet_b33: 0.00649  time: 0.9396  data_time: 0.0004  lr: 7.76e-06  max_mem: 324M
[07/09 15:32:20] fastreid.utils.events INFO:  eta: 0:00:50  epoch/iter: 58/3185  total_loss: 5.447  loss_cls_b1: 0.4573  loss_cls_b2: 0.5123  loss_cls_b21: 0.6536  loss_cls_b22: 0.726  loss_cls_b3: 0.5285  loss_cls_b31: 0.7515  loss_cls_b32: 0.8006  loss_cls_b33: 0.865  loss_triplet_b1: 0.007704  loss_triplet_b2: 0.009008  loss_triplet_b3: 0.01089  loss_triplet_b22: 0.006542  loss_triplet_b33: 0.004675  time: 0.9397  data_time: 0.0005  lr: 2.47e-06  max_mem: 324M
[07/09 15:32:34] fastreid.utils.events INFO:  eta: 0:00:37  epoch/iter: 59/3199  total_loss: 5.135  loss_cls_b1: 0.4448  loss_cls_b2: 0.499  loss_cls_b21: 0.6352  loss_cls_b22: 0.7183  loss_cls_b3: 0.509  loss_cls_b31: 0.7403  loss_cls_b32: 0.7921  loss_cls_b33: 0.8534  loss_triplet_b1: 0.00712  loss_triplet_b2: 0.008671  loss_triplet_b3: 0.01036  loss_triplet_b22: 0.006126  loss_triplet_b33: 0.004467  time: 0.9398  data_time: 0.0007  lr: 7.00e-07  max_mem: 324M
[07/09 15:33:12] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/3239  total_loss: 5.068  loss_cls_b1: 0.4332  loss_cls_b2: 0.4903  loss_cls_b21: 0.6262  loss_cls_b22: 0.6944  loss_cls_b3: 0.4997  loss_cls_b31: 0.7365  loss_cls_b32: 0.7798  loss_cls_b33: 0.8335  loss_triplet_b1: 0.007395  loss_triplet_b2: 0.008748  loss_triplet_b3: 0.01004  loss_triplet_b22: 0.006205  loss_triplet_b33: 0.004236  time: 0.9399  data_time: 0.0005  lr: 7.00e-07  max_mem: 324M
[07/09 15:33:12] fastreid.engine.defaults INFO: Prepare testing set
[07/09 15:33:12] fastreid.data.datasets.bases INFO: => Loaded WildSplit2 in csv format: 
[36m| subset   | # ids   | # images   | # cameras   |
|:---------|:--------|:-----------|:------------|
| query    | 297     | 772        | 1           |
| gallery  | 297     | 3479       | 1           |[0m
[07/09 15:33:12] fastreid.evaluation.evaluator INFO: Start inference on 4251 images
[07/09 15:33:20] fastreid.evaluation.evaluator INFO: Inference done 11/34. 0.5495 s / batch. ETA=0:00:12
[07/09 15:33:32] fastreid.evaluation.evaluator INFO: Total inference time: 0:00:15.296806 (0.527476 s / batch per device, on 1 devices)
[07/09 15:33:32] fastreid.evaluation.evaluator INFO: Total inference pure compute time: 0:00:15 (0.526014 s / batch per device, on 1 devices)
[07/09 15:33:32] fastreid.engine.defaults INFO: Evaluation results for WildSplit2 in csv format:
[07/09 15:33:32] fastreid.evaluation.testing INFO: Evaluation results in csv format: 
[36m| Dataset    | Rank-1   | Rank-5   | Rank-10   | mAP   | mINP   | metric   |
|:-----------|:---------|:---------|:----------|:------|:-------|:---------|
| WildSplit2 | 79.61    | 89.35    | 91.69     | 71.11 | 30.24  | 75.36    |[0m
[07/09 15:33:32] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit2/mgn_R50-ibn/model_best.pth
[07/09 15:33:36] fastreid.utils.checkpoint INFO: Saving checkpoint to logs/wildsplit2/mgn_R50-ibn/model_final.pth
[07/09 15:33:39] fastreid.utils.events INFO:  eta: 0:00:00  epoch/iter: 59/3239  total_loss: 5.068  loss_cls_b1: 0.4332  loss_cls_b2: 0.4903  loss_cls_b21: 0.6262  loss_cls_b22: 0.6944  loss_cls_b3: 0.4997  loss_cls_b31: 0.7365  loss_cls_b32: 0.7798  loss_cls_b33: 0.8335  loss_triplet_b1: 0.007395  loss_triplet_b2: 0.008748  loss_triplet_b3: 0.01004  loss_triplet_b22: 0.006205  loss_triplet_b33: 0.004236  time: 0.9399  data_time: 0.0005  lr: 7.00e-07  max_mem: 324M
[07/09 15:33:39] fastreid.engine.hooks INFO: Overall training speed: 3238 iterations in 0:50:43 (0.9399 s / it)
[07/09 15:33:39] fastreid.engine.hooks INFO: Total training time: 0:53:10 (0:02:26 on hooks)
